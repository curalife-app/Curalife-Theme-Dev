name: "Create Summary Report"
description: "Creates a GitHub step summary with Lighthouse test results"

inputs:
  results-dir:
    description: "Directory containing processed test results"
    required: true
  deployment-url:
    description: "URL where the full reports are deployed"
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: Generate step summary
      shell: bash
      run: |
        echo "Generating GitHub step summary..."
        RESULTS_DIR="${{ inputs.results-dir }}"

        # Check if results directory exists
        if [ ! -d "$RESULTS_DIR/processed" ]; then
          echo "::warning::Processed results directory not found: $RESULTS_DIR/processed"
          echo "## Lighthouse Performance Tests" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "No test results found." >> $GITHUB_STEP_SUMMARY
          exit 0
        fi

        # Create summary header
        echo "## Lighthouse Performance Tests" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Results from $(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        # Add deployment link if provided
        if [ -n "${{ inputs.deployment-url }}" ]; then
          echo "📊 [View Full Dashboard](${{ inputs.deployment-url }})" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
        fi

        # Create summary tables for desktop and mobile
        echo "### Desktop Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Page | Performance | Accessibility | Best Practices | SEO |" >> $GITHUB_STEP_SUMMARY
        echo "|------|-------------|---------------|----------------|-----|" >> $GITHUB_STEP_SUMMARY

        # Process each page's results for desktop
        for page_dir in "$RESULTS_DIR/processed"/*; do
          if [ -d "$page_dir" ]; then
            page_name=$(basename "$page_dir")
            PAGE_TITLE=$(echo "$page_name" | tr '-' ' ' | sed -e 's/\b\(.\)/\u\1/g')

            # Source metrics file if it exists
            if [ -f "$page_dir/metrics-values.env" ]; then
              source "$page_dir/metrics-values.env"

              # Add desktop row
              echo "| $PAGE_TITLE | ${DESKTOP_PERF:-0} | ${DESKTOP_A11Y:-0} | ${DESKTOP_BP:-0} | ${DESKTOP_SEO:-0} |" >> $GITHUB_STEP_SUMMARY
            else
              echo "| $PAGE_TITLE | - | - | - | - |" >> $GITHUB_STEP_SUMMARY
            fi
          fi
        done

        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Mobile Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Page | Performance | Accessibility | Best Practices | SEO |" >> $GITHUB_STEP_SUMMARY
        echo "|------|-------------|---------------|----------------|-----|" >> $GITHUB_STEP_SUMMARY

        # Process each page's results for mobile
        for page_dir in "$RESULTS_DIR/processed"/*; do
          if [ -d "$page_dir" ]; then
            page_name=$(basename "$page_dir")
            PAGE_TITLE=$(echo "$page_name" | tr '-' ' ' | sed -e 's/\b\(.\)/\u\1/g')

            # Source metrics file if it exists
            if [ -f "$page_dir/metrics-values.env" ]; then
              source "$page_dir/metrics-values.env"

              # Add mobile row
              echo "| $PAGE_TITLE | ${MOBILE_PERF:-0} | ${MOBILE_A11Y:-0} | ${MOBILE_BP:-0} | ${MOBILE_SEO:-0} |" >> $GITHUB_STEP_SUMMARY
            else
              echo "| $PAGE_TITLE | - | - | - | - |" >> $GITHUB_STEP_SUMMARY
            fi
          fi
        done

        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Core Web Vitals Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Page | Device | LCP (ms) | CLS | TBT (ms) |" >> $GITHUB_STEP_SUMMARY
        echo "|------|--------|----------|-----|----------|" >> $GITHUB_STEP_SUMMARY

        # Process core web vitals for each page
        for page_dir in "$RESULTS_DIR/processed"/*; do
          if [ -d "$page_dir" ]; then
            page_name=$(basename "$page_dir")
            PAGE_TITLE=$(echo "$page_name" | tr '-' ' ' | sed -e 's/\b\(.\)/\u\1/g')

            # Source metrics file if it exists
            if [ -f "$page_dir/metrics-values.env" ]; then
              source "$page_dir/metrics-values.env"

              # Add desktop and mobile rows for vitals
              echo "| $PAGE_TITLE | Desktop | ${DESKTOP_LCP:-0} | ${DESKTOP_CLS:-0} | ${DESKTOP_TBT:-0} |" >> $GITHUB_STEP_SUMMARY
              echo "| $PAGE_TITLE | Mobile | ${MOBILE_LCP:-0} | ${MOBILE_CLS:-0} | ${MOBILE_TBT:-0} |" >> $GITHUB_STEP_SUMMARY
            else
              echo "| $PAGE_TITLE | Desktop | - | - | - |" >> $GITHUB_STEP_SUMMARY
              echo "| $PAGE_TITLE | Mobile | - | - | - |" >> $GITHUB_STEP_SUMMARY
            fi
          fi
        done

        # Add performance annotations for PRs if this is a PR context
        if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Performance Insights" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Process each page's results for PR annotations
          for page_dir in "$RESULTS_DIR/processed"/*; do
            if [ -d "$page_dir" ]; then
              page_name=$(basename "$page_dir")

              # Source metrics file if it exists
              if [ -f "$page_dir/metrics-values.env" ]; then
                source "$page_dir/metrics-values.env"

                # Add annotations based on performance scores
                if [ "${DESKTOP_PERF:-0}" -lt 70 ] || [ "${MOBILE_PERF:-0}" -lt 50 ]; then
                  echo "⚠️ **$page_name**: Performance needs significant improvement (Desktop: ${DESKTOP_PERF:-0}, Mobile: ${MOBILE_PERF:-0})" >> $GITHUB_STEP_SUMMARY

                  # Provide specific advice based on metrics
                  if [ "${DESKTOP_LCP:-0}" -gt 2500 ] || [ "${MOBILE_LCP:-0}" -gt 4000 ]; then
                    echo "  - Largest Contentful Paint is too slow (Desktop: ${DESKTOP_LCP:-0}ms, Mobile: ${MOBILE_LCP:-0}ms)" >> $GITHUB_STEP_SUMMARY
                  fi

                  if [ "${DESKTOP_TBT:-0}" -gt 300 ] || [ "${MOBILE_TBT:-0}" -gt 600 ]; then
                    echo "  - Total Blocking Time is too high (Desktop: ${DESKTOP_TBT:-0}ms, Mobile: ${MOBILE_TBT:-0}ms)" >> $GITHUB_STEP_SUMMARY
                  fi

                  if awk "BEGIN {exit !($DESKTOP_CLS >= 0.15 || $MOBILE_CLS >= 0.25)}"; then
                    echo "  - Cumulative Layout Shift is too high (Desktop: ${DESKTOP_CLS:-0}, Mobile: ${MOBILE_CLS:-0})" >> $GITHUB_STEP_SUMMARY
                  fi
                elif [ "${DESKTOP_PERF:-0}" -lt 90 ] || [ "${MOBILE_PERF:-0}" -lt 70 ]; then
                  echo "ℹ️ **$page_name**: Performance could be improved (Desktop: ${DESKTOP_PERF:-0}, Mobile: ${MOBILE_PERF:-0})" >> $GITHUB_STEP_SUMMARY
                else
                  echo "✅ **$page_name**: Performance is good (Desktop: ${DESKTOP_PERF:-0}, Mobile: ${MOBILE_PERF:-0})" >> $GITHUB_STEP_SUMMARY
                fi
              fi
            fi
          done
        fi
