name: "Parse Custom Pages Input"
description: "Parses custom pages input and generates a matrix for testing"

inputs:
  custom-pages-json:
    description: "JSON array of custom pages to test in format [{name: string, url: string}]"
    required: false
    default: ""
  default-pages-json:
    description: "JSON array of default pages to test when no custom pages are provided"
    required: false
    default: '[{"name":"homepage","url":"/"},{"name":"product","url":"/products/curalin"}]'

outputs:
  matrix-json:
    description: "JSON matrix for strategy.matrix.page"
    value: ${{ steps.generate-matrix.outputs.matrix }}

runs:
  using: "composite"
  steps:
    - name: Generate test matrix
      id: generate-matrix
      shell: bash
      run: |
        echo "Parsing page inputs..."

        # Use custom pages if provided, otherwise use default pages
        if [ -n "${{ inputs.custom-pages-json }}" ] && [ "${{ inputs.custom-pages-json }}" != '""' ]; then
          echo "Using custom pages from input"
          PAGES_JSON='${{ inputs.custom-pages-json }}'
        else
          echo "Using default pages"
          PAGES_JSON='${{ inputs.default-pages-json }}'
        fi

        # Validate JSON format
        if ! echo "$PAGES_JSON" | jq . > /dev/null 2>&1; then
          echo "::error::Invalid JSON format for pages input"
          echo "matrix=[]" >> $GITHUB_OUTPUT
          exit 1
        fi

        # Count pages
        PAGE_COUNT=$(echo "$PAGES_JSON" | jq '. | length')
        echo "Found $PAGE_COUNT pages to test"

        # Generate matrix JSON
        echo "matrix=$PAGES_JSON" >> $GITHUB_OUTPUT

        # Output page names for logging
        PAGE_NAMES=$(echo "$PAGES_JSON" | jq -r '.[].name')
        echo "Pages to test:"
        echo "$PAGE_NAMES"
