name: Lighthouse Performance Tests

on:
  schedule:
    - cron: "0 4 * * *" # Run daily at 4 AM UTC
  workflow_dispatch:
    inputs:
      base_url:
        description: "Base URL to test"
        required: true
        default: "https://curalife.com"
      custom_pages:
        description: "Custom pages to test (comma-separated, no leading slashes)"
        required: false
        default: ""

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lighthouse:
    name: Run Lighthouse Tests
    runs-on: ubuntu-latest

    env:
      BASE_URL: ${{ github.event.inputs.base_url || 'https://curalife.com' }}
      CUSTOM_PAGES: ${{ github.event.inputs.custom_pages || '' }}
      LIGHTHOUSE_DIR: "./lighthouse-results"
      DASHBOARD_DIR: "./lighthouse-dashboard"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci
          npm install -g @lhci/cli@0.12.x

      - name: Run Lighthouse CI
        id: lighthouse
        run: |
          # Create output directory
          mkdir -p ${{ env.LIGHTHOUSE_DIR }}

          # Default pages to test
          PAGES=("/" "/collections" "/products" "/pages/about-us")

          # Add custom pages if specified
          if [ ! -z "${{ env.CUSTOM_PAGES }}" ]; then
            IFS=',' read -ra CUSTOM_PAGES_ARRAY <<< "${{ env.CUSTOM_PAGES }}"
            for page in "${CUSTOM_PAGES_ARRAY[@]}"; do
              PAGES+=("/${page#/}")
            done
          fi

          # Run Lighthouse for each page
          for page in "${PAGES[@]}"; do
            url="${{ env.BASE_URL }}${page}"
            echo "Testing $url"

            # Run Lighthouse with retry logic
            max_attempts=3
            attempt=1

            while [ $attempt -le $max_attempts ]; do
              echo "Attempt $attempt of $max_attempts"

              if lhci collect --url="$url" --output="${{ env.LIGHTHOUSE_DIR }}/${page//\//_}" --settings.chromeFlags="--no-sandbox" --settings.throttling.cpuSlowdownMultiplier=4; then
                break
              fi

              attempt=$((attempt+1))

              if [ $attempt -le $max_attempts ]; then
                echo "Retrying in 5 seconds..."
                sleep 5
              fi
            done
          done

          echo "::set-output name=status::completed"

      - name: Generate Lighthouse report
        if: success() || failure()
        run: |
          if [ -d "${{ env.LIGHTHOUSE_DIR }}" ] && [ "$(ls -A ${{ env.LIGHTHOUSE_DIR }})" ]; then
            # Generate HTML report
            mkdir -p ${{ env.DASHBOARD_DIR }}

            # Create simple HTML dashboard
            cat > ${{ env.DASHBOARD_DIR }}/index.html << EOF
            <!DOCTYPE html>
            <html lang="en">
            <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Lighthouse Performance Dashboard</title>
              <style>
                body { font-family: Arial, sans-serif; max-width: 1200px; margin: 0 auto; padding: 20px; }
                h1 { color: #333; }
                .report-list { display: grid; grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); gap: 20px; }
                .report-card { border: 1px solid #ddd; border-radius: 8px; padding: 15px; }
                .report-card h3 { margin-top: 0; }
              </style>
            </head>
            <body>
              <h1>Lighthouse Performance Dashboard</h1>
              <p>Base URL: ${{ env.BASE_URL }}</p>
              <p>Last updated: $(date)</p>
              <div class="report-list">
            EOF

            # List all reports
            for report in ${{ env.LIGHTHOUSE_DIR }}/*.json; do
              if [ -f "$report" ]; then
                page_name=$(basename "$report" .json | sed 's/_/\//g')
                echo "  <div class=\"report-card\">" >> ${{ env.DASHBOARD_DIR }}/index.html
                echo "    <h3>$page_name</h3>" >> ${{ env.DASHBOARD_DIR }}/index.html
                echo "    <p><a href=\"${page_name}.html\" target=\"_blank\">View Report</a></p>" >> ${{ env.DASHBOARD_DIR }}/index.html
                echo "  </div>" >> ${{ env.DASHBOARD_DIR }}/index.html

                # Convert JSON to HTML for this report
                lhci collect --url="${{ env.BASE_URL }}${page_name}" --output="${{ env.DASHBOARD_DIR }}/${page_name}.html" --settings.chromeFlags="--no-sandbox" || true
              fi
            done

            # Close HTML file
            cat >> ${{ env.DASHBOARD_DIR }}/index.html << EOF
              </div>
            </body>
            </html>
            EOF

            echo "Report generated successfully"
          else
            echo "No Lighthouse results found to generate report"
            exit 1
          fi

      - name: Archive results
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results
          path: |
            ${{ env.LIGHTHOUSE_DIR }}
            ${{ env.DASHBOARD_DIR }}
          retention-days: 7

      - name: Deploy to GitHub Pages
        if: success() || failure()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ env.DASHBOARD_DIR }}
          destination_dir: lighthouse-reports
          commit_message: "Update performance dashboard [skip ci]"
          keep_files: true
