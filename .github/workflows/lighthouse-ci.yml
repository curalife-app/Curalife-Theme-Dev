name: Lighthouse CI

on:
  schedule:
    - cron: "0 8 * * *" # Run every day at 8 AM
    - cron: "0 18 * * *" # Run every day at 6 PM
  # Allow manual trigger through GitHub UI
  workflow_dispatch:

# Allow cancellation of previous runs in the same PR/branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write
  pages: write
  id-token: write

# Define environment for GitHub Pages
env:
  HISTORY_BRANCH: lighthouse-history
  # Cache keys for dependencies and tools
  SYSTEM_DEPS_CACHE_KEY: system-deps-${{ github.run_id }}
  TOOLS_CACHE_KEY: tools-${{ github.run_id }}
  NPM_GLOBAL_CACHE_KEY: npm-global-${{ github.run_id }}
  PUPPETEER_CACHE_KEY: puppeteer-${{ github.run_id }}
  GH_PAGES_CACHE_KEY: gh-pages-${{ github.run_id }}

# Reusable job configurations
jobs:
  lighthouse-ci:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        page:
          - name: homepage
            url: https://curalife.com/
          - name: product
            url: https://curalife.com/products/curalin
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup dependencies and environment
        uses: ./.github/actions/setup-environment
        with:
          cache-key-prefix: ${{ env.SYSTEM_DEPS_CACHE_KEY }}
          npm-cache-key: ${{ env.NPM_GLOBAL_CACHE_KEY }}
          puppeteer-cache-key: ${{ env.PUPPETEER_CACHE_KEY }}

      - name: Setup results directory
        id: results-dir
        run: |
          RESULTS_DIR="${{ matrix.page.name }}-lighthouse-results"
          echo "results_dir=$RESULTS_DIR" >> $GITHUB_OUTPUT
          mkdir -p $RESULTS_DIR

      - name: Make scripts executable
        run: |
          chmod +x .github/workflows/scripts/make-scripts-executable.sh
          .github/workflows/scripts/make-scripts-executable.sh

      - name: Run Lighthouse CI
        id: lighthouse
        run: |
          echo "Running Lighthouse on ${{ matrix.page.url }}..."
          .github/workflows/scripts/run-lighthouse.sh "${{ matrix.page.url }}" "${{ matrix.page.name }}" "${{ steps.results-dir.outputs.results_dir }}"
        continue-on-error: true

      - name: Process Lighthouse results
        id: scores
        run: |
          # Set current date for outputs
          CURRENT_DATE=$(date +"%Y-%m-%d")
          echo "report_date=$CURRENT_DATE" >> $GITHUB_OUTPUT

          .github/workflows/scripts/process-results.sh "${{ matrix.page.name }}" "${{ steps.results-dir.outputs.results_dir }}" "$CURRENT_DATE"
        continue-on-error: true

      - name: Save reports to performance-reports directory
        if: steps.scores.outputs.has_results == 'true'
        run: |
          .github/workflows/scripts/save-reports.sh "${{ matrix.page.name }}" "${{ steps.results-dir.outputs.results_dir }}" "${{ steps.scores.outputs.report_date }}"
        continue-on-error: true

      - name: Format Lighthouse results
        if: steps.scores.outputs.has_results == 'true'
        run: |
          .github/workflows/scripts/format-summary.sh "${{ matrix.page.name }}"
        continue-on-error: true

      # Upload results for this page as an artifact
      - name: Upload individual page report
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.page.name }}-lighthouse-report
          path: performance-reports/
          retention-days: 30
        continue-on-error: true

    outputs:
      report_date: ${{ steps.scores.outputs.report_date }}

  create-dashboard:
    needs: lighthouse-ci
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup dependencies and environment
        uses: ./.github/actions/setup-environment
        with:
          cache-key-prefix: ${{ env.SYSTEM_DEPS_CACHE_KEY }}
          npm-cache-key: ${{ env.NPM_GLOBAL_CACHE_KEY }}
          tools-cache-key: ${{ env.TOOLS_CACHE_KEY }}

      - name: Make scripts executable
        run: |
          # Ensure cache directories exist
          mkdir -p ~/.cache/tools

          chmod +x .github/workflows/scripts/make-scripts-executable.sh
          .github/workflows/scripts/make-scripts-executable.sh

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Process reports and generate dashboard
        uses: ./.github/actions/generate-dashboard
        with:
          report-date: ${{ needs.lighthouse-ci.outputs.report_date || steps.date.outputs.date }}
          history-branch: ${{ env.HISTORY_BRANCH }}

      # Upload the complete combined report
      - name: Upload performance reports
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-complete-report
          path: performance-reports/
          retention-days: 30
        continue-on-error: true

  # Deploy to GitHub Pages
  deploy-pages:
    needs: create-dashboard
    runs-on: ubuntu-latest
    # Only run on main/master branch to avoid duplicate deployments
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Add caching for GitHub Pages deployment
      - name: Cache GitHub Pages deployment
        uses: actions/cache@v4
        id: cache-gh-pages
        with:
          path: |
            .gh-pages-cache
          key: ${{ env.GH_PAGES_CACHE_KEY }}
          restore-keys: |
            ${{ runner.os }}-gh-pages-

      # Create directory
      - name: Create performance-reports directory
        run: |
          mkdir -p performance-reports .gh-pages-cache

      # Download the performance reports
      - name: Download performance reports
        uses: actions/download-artifact@v4
        with:
          name: lighthouse-complete-report
          path: performance-reports

      - name: Prepare GitHub Pages
        uses: ./.github/actions/prepare-github-pages
        with:
          publish-dir: performance-reports
          repository: ${{ github.repository }}

      # Use a different approach for deployment that doesn't rely on the artifact
      - name: Deploy to GitHub Pages
        id: deployment
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./performance-reports
          enable_jekyll: false
          cname: lighthouse.curalife.com # Add your custom domain here
          force_orphan: true

      # Output deployment URL
      - name: Output deployment URL
        run: |
          echo "::notice title=Deployment URL::Lighthouse dashboard deployed to https://${{ github.repository_owner }}.github.io/$(echo '${{ github.repository }}' | cut -d'/' -f2)/"
          echo "Lighthouse Dashboard URL: https://${{ github.repository_owner }}.github.io/$(echo '${{ github.repository }}' | cut -d'/' -f2)/"
          echo "Access your performance dashboard at: https://${{ github.repository_owner }}.github.io/$(echo '${{ github.repository }}' | cut -d'/' -f2)/"
          echo "URL: https://${{ github.repository_owner }}.github.io/$(echo '${{ github.repository }}' | cut -d'/' -f2)/" >> $GITHUB_STEP_SUMMARY
