name: Lighthouse CI

on:
  schedule:
    - cron: "15 2 * * *" # Run every day at 2:15 UTC
    - cron: "15 14 * * *" # Run every day at 14:15 UTC
  # Allow manual trigger through GitHub UI
  workflow_dispatch:
  pull_request:
    branches: [main, master]

# Allow cancellation of previous runs in the same PR/branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write
  pages: write
  id-token: write

jobs:
  lighthouse-desktop:
    name: Lighthouse CI (Desktop)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        page:
          - name: homepage
            url: https://curalife.com/
          - name: product
            url: https://curalife.com/products/curalin
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Run Lighthouse CI (Desktop)
        id: lighthouse-desktop
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: ${{ matrix.page.url }}
          uploadArtifacts: true
          temporaryPublicStorage: true
          configPath: ./lighthouserc.json
          runs: 3
          collect.settings.preset: desktop

      - name: Format Lighthouse Results
        run: |
          echo "### Lighthouse Results for ${{ matrix.page.name }} (Desktop)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Category | Score |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- |" >> $GITHUB_STEP_SUMMARY
          echo "| Performance | ${{ fromJSON(steps.lighthouse-desktop.outputs.manifest)[0].summary.performance }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Accessibility | ${{ fromJSON(steps.lighthouse-desktop.outputs.manifest)[0].summary.accessibility }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Best Practices | ${{ fromJSON(steps.lighthouse-desktop.outputs.manifest)[0].summary['best-practices'] }} |" >> $GITHUB_STEP_SUMMARY
          echo "| SEO | ${{ fromJSON(steps.lighthouse-desktop.outputs.manifest)[0].summary.seo }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "[Detailed Report](${{ fromJSON(steps.lighthouse-desktop.outputs.links)[0].url }})" >> $GITHUB_STEP_SUMMARY

  lighthouse-mobile:
    name: Lighthouse CI (Mobile)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        page:
          - name: homepage
            url: https://curalife.com/
          - name: product
            url: https://curalife.com/products/curalin
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Run Lighthouse CI (Mobile)
        id: lighthouse-mobile
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: ${{ matrix.page.url }}
          uploadArtifacts: true
          temporaryPublicStorage: true
          configPath: ./lighthouserc.json
          runs: 3
          collect.settings.preset: mobile

      - name: Format Lighthouse Results
        run: |
          echo "### Lighthouse Results for ${{ matrix.page.name }} (Mobile)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Category | Score |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- |" >> $GITHUB_STEP_SUMMARY
          echo "| Performance | ${{ fromJSON(steps.lighthouse-mobile.outputs.manifest)[0].summary.performance }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Accessibility | ${{ fromJSON(steps.lighthouse-mobile.outputs.manifest)[0].summary.accessibility }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Best Practices | ${{ fromJSON(steps.lighthouse-mobile.outputs.manifest)[0].summary['best-practices'] }} |" >> $GITHUB_STEP_SUMMARY
          echo "| SEO | ${{ fromJSON(steps.lighthouse-mobile.outputs.manifest)[0].summary.seo }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "[Detailed Report](${{ fromJSON(steps.lighthouse-mobile.outputs.links)[0].url }})" >> $GITHUB_STEP_SUMMARY

  create-dashboard:
    name: Create Lighthouse Dashboard
    needs: [lighthouse-desktop, lighthouse-mobile]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Download Desktop Artifacts
        uses: actions/download-artifact@v4
        with:
          path: lighthouse-artifacts/desktop

      - name: Download Mobile Artifacts
        uses: actions/download-artifact@v4
        with:
          path: lighthouse-artifacts/mobile

      - name: Generate Dashboard
        run: |
          # Install required packages
          npm install -g @lhci/utils

          # Generate simple dashboard (can be replaced with a more comprehensive dashboard generation)
          mkdir -p performance-reports
          echo "<html><head><title>Lighthouse Dashboard</title></head><body>" > performance-reports/index.html
          echo "<h1>Lighthouse Dashboard</h1>" >> performance-reports/index.html
          echo "<p>Generated on $(date)</p>" >> performance-reports/index.html
          echo "<h2>Reports</h2>" >> performance-reports/index.html

          # Add links to reports
          find lighthouse-artifacts -name "*.report.html" | while read report; do
            cp "$report" performance-reports/
            name=$(basename "$report")
            echo "<p><a href='./$name'>$name</a></p>" >> performance-reports/index.html
          done

          echo "</body></html>" >> performance-reports/index.html

      - name: Upload Dashboard
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-dashboard
          path: performance-reports
          retention-days: 30

  # Deploy to GitHub Pages if on main/master branch
  deploy-pages:
    name: Deploy to GitHub Pages
    needs: create-dashboard
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          fetch-depth: 0

      - name: Download Dashboard
        uses: actions/download-artifact@v4
        with:
          name: lighthouse-dashboard
          path: ./

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Commit and Push
        run: |
          git add .
          git commit -m "Update Lighthouse dashboard [skip ci]" || echo "No changes to commit"
          git push origin gh-pages

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
