{% assign currentCollection = collections[collection_handle] %}
{% assign collection_additional_variant_amount = currentCollection.metafields.custom.additional_variants.value.count %}
{% assign collection_products_amount = currentCollection.products.size %}
{% assign collection_total_items_amount = collection_additional_variant_amount | plus: collection_products_amount %}

{% if collection_handle == 'glucose-support' and shop.name == 'CuraLife Global' %}
  {% assign isGlucoseGlobal = true %}
{% endif %}

{% if customer.b2b? or customer.email contains "@curalife.com" %}
  {% assign isAddToCart = true %}
{% endif %}

<div id="{{ collection_handle }}-collection-section" class="collection-section xl:w-full {% if collection_total_items_amount < 3 and template.name == 'list-collections' %}w-[48%]{% else %}w-full{% endif %} {% if shop.name == 'Curalife Global' or customer.tags contains 'B2B' %}max-w-[800px] m-auto{% endif %}" data-product-collections="{{ collection_handle }}" >
  {% unless isNoTitle %}
    <div class="title-wrapper border-b-[1px] border-black">
      <h2 class="relative mb-0 text-[40px] font-thin top-1 w-fit bg-white pr-3">{{ currentCollection.metafields.custom.alternative_title | default: currentCollection.title }}</h2>
    </div>
  {% endunless %}

  {% if isDescription %}
    <p class="description {% if currentCollection.metafields.custom.is_align_center or isCentered %}text-center m-auto{% endif %}">{{ currentCollection.description }}</p>
  {% endif %}

  <div class="product-grid flex flex-wrap gap-4 {% if isGlucoseGlobal or customer.tags contains 'B2B' %}justify-between{% else %}justify-start{% endif %} {% if isHiddenCollections %}hidden{% endif %}">
    {% if currentCollection.metafields.custom.collection_banner_img and template.name != 'collection'%}
      <div class="image-wrapper {% if collection_handle == 'glucose-support' %}max-w-1/4 md:max-w-1/2{% else %}max-w-[49%]{% endif %}">
        {% if currentCollection.metafields.custom.collection_banner_lnk %}
          <a class="product-link" href="{{ currentCollection.metafields.custom.collection_banner_lnk }}">
            {% render 'responsive-image', img: currentCollection.metafields.custom.collection_banner_img, img_mobile: currentCollection.metafields.custom.collection_banner_img_mobile, classes: "m-0 h-full md:h-[82vw] md:w-[44vw] block max-h-[420px] object-cover" %}
          </a>
        {% else %}
          {% render 'responsive-image', img: currentCollection.metafields.custom.collection_banner_img, img_mobile: currentCollection.metafields.custom.collection_banner_img_mobile, classes: "m-0 h-full md:h-[82vw] md:w-[44vw] block max-h-[420px] object-cover" %}
        {% endif %}
      </div>
    {% endif %}

    {% for product in currentCollection.products %}
      {% render 'product-card', product: product, isNoPrices: isNoPrices %}
    {% endfor %}

    {% for additionalVar in currentCollection.metafields.custom.additional_variants.value %}
      {% for vari in additionalVar.product.variants %}
        {% if vari.id == additionalVar.id %}
          {% assign variantIndex = forloop.index %}
          {% break %}
        {% endif %}
      {% endfor %}

      {% if additionalVar.product.variants.size == 1 %}
        {% render 'product-card', product: additionalVar.product, isNoPrices: isNoPrices %}
      {% else %}
        {% render 'variant-card', variant: additionalVar, variantIndex: variantIndex, productCollections: product_collections, isNoPrices: isNoPrices %}
      {% endif %}
    {% endfor %}
  </div>
</div>

<style>
  .product-card .image-wrapper img {
    border-radius: 25px;
  }
</style>

<style>
  .product-card {
    position: relative;
    max-width: 270px;
    padding: 10px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-direction: column;
    gap: 1rem;
    border: 1px solid var(--light-blue);
    border-radius: 10px;
    /* box-shadow: 0px 10px 10px 0px rgba(0, 0, 0, 0.1); */
  }

  .product-card::before {
    background-size: contain;
    position: absolute;
    top: 30px;
    right: 10px;
    width: 68px;
    height: 68px;
  }

  .product-card .product-image {
    height: 250px;
    border-radius: 10px;
    object-fit: contain;
  }

  .product-card .promotion-title {
    font-size: 18px;
    margin: unset;
    color: var(--blue);
  }

  .product-card .product-titles p {
    margin: unset;
  }

  .product-card .subtitle {
    font-size: 14px;
  }

  .product-card button:hover {
    background: var(--dark-blue);
  }

  .product-card button {
    padding: 6px;
    border-radius: 3px;
    font-weight: bold;
    border-radius: 10px;
    min-height: 45px;
  }

  @media screen and (max-width: 768px) {
    .product-card {
      margin-bottom: 3vw;
      width: 49%;
      padding: 1vw;
      margin-top: unset;
      max-width: unset;
      border-radius: 5vw !important;
    }

    .product-card .product-image {
      height: 45vw;
    }

    .product-card button {
      font-size: 4vw;
    }

    .product-grid {
      gap: 1vw;
    }

    .product-card .product-titles {
      min-height: 3.5em;
      margin: unset;
    }

    .product-card .product-titles h3 {
      font-size: 5vw;
      line-height: 1em;
    }

    .product-card .subtitle {
      font-size: 4vw;
    }

    .product-card .info .price strike {
      font-size: 4vw;
    }

    .product-card .info .price .rounded.current-price {
      font-size: 41px;
      padding-left: 1vw;
      padding-right: 1vw;
    }
  }
</style>

{% if isAddToCart %}
  <style>
    .product-card .submit-wrap button {
      background-color: var(--orange);
      border-radius: 10px;
      font-size: 18px;
      padding: 0.5rem;
      min-width: fit-content;
      color: black;
      min-height: 45px;

      &:hover {
        background-color: var(--dark-orange);
      }
    }

    @media (width > 768px) {
      .product-card .submit-wrap:has(.qty) button {
        border-radius: 0px 10px 10px 0;
      }
    }


    .product-card .submit-wrap .qty_inc_dec i:hover {
      background-color: #ffe3ae !important;
    }

    .product-card .submit-wrap button.secondary {
      border-radius: 10px;
      background-color: var(--blue);
      color: white;
      width: 100%;

      &:hover {
        background-color: var(--dark-blue);
      }
    }
  </style>

  <style>
    .product-card .submit-wrap .qty {
      display: flex;
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
    }

    .product-card .submit-wrap .qty_inc_dec .increment,
    .product-card .submit-wrap .qty_inc_dec .decrement {
      cursor: pointer;
      height: 50%;
      background-color: #fff2dd !important;;
      border-block: 1px solid #ccc;
      display: flex;
      justify-content: center;
      align-items: center;
      font-style: normal;
    }

    .product-card .submit-wrap .qty_inc_dec .increment {
      line-height: 25px;
    }

    .product-card .submit-wrap .qty_inc_dec {
      width: 30px;
    }

    .product-card .submit-wrap .qty input[type=text] {
      font-family: "Open Sans", sans-serif;
      text-align: center;
      width: 50px;
      border: 1px solid #ccc;
      border-radius: 10px 0 0 10px;
      border-right: 0;
      font-weight: bold;
    }

    /* Quantity Selector Transition */
    .product-card .submit-wrap .qty {
      transition: width 0.3s ease;
      width: -webkit-fill-available;
      flex-basis: content;
    }

    .product-card .submit-wrap .qty_inc_dec {
      transition: opacity 0.3s ease;
    }
  </style>

  <script src="{{ 'product-info.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>

  <script>
    function updateQuantity(action) {
      var qty_element = $(event.target).closest('.qty');
      var quantityField = qty_element.find('input[name="quantity"]');
      var value = parseInt(quantityField.val(), 10);
      value = isNaN(value) ? 1 : value;

      if (action === "+") {
        value++;
      } else if (action === "-") {
        value = Math.max(1, value - 1);
      }

      quantityField.val(value);
    }

    function resetQuantity() {
      console.log("onclick event")
      var qty_element = $(event.target).closest('.qty');
      var quantityField = qty_element.find('input[name="quantity"]');
      quantityField.val(1);
    }
  </script>
{% endif %}

{% if currentCollection.metafields.custom.is_align_center %}
  <style>
    #{{ collection_handle }}-collection-section {
      text-align: center;
    }

    #{{ collection_handle }}-collection-section .description {
      margin: 30px auto;
    }
  </style>
{% endif %}