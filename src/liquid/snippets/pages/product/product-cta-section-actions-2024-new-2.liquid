{% if shop.name contains 'Global' %}
  {% assign buyOnceOneMonth = '£39.90' %}
  {% assign buyOnceThreeMonths = '£95.76' %}
  {% assign buyOnceThreeMonthsCAP = '£119.70' %}
  {% assign buyOnceThreeMonthsDiscountPercentage = 20 %}
  {% assign buySubscriptionOneMonth = '£27.93' %}
  {% assign buySubscriptionThreeMonths = '£83.79' %}
  {% assign buySubscriptionOneMonth = '£27.93' %}
  {% assign buySubscriptionThreeMonths = '£83.79' %}
{% else %}
  {% if request.path contains 'lp-wl-curaslim-360-aff' %}
    {% assign buyOnceOneMonthProductID = '8228158439575' %}
    {% assign buyOnceOneMonthVariantID = '44190159274135' %}
    {% assign buyOnceThreeMonthsProductID = '8228158439575' %}
    {% assign buyOnceThreeMonthsVariantID = '44190137843863' %}
    {% assign buySubscriptionOneMonthProductID = '8228158439575' %}
    {% assign buySubscriptionOneMonthVariantID = '44190159274135' %}
    {% assign buySubscriptionOneMonthPlanID = '8556806295' %}
    {% assign buySubscriptionThreeMonthsProductID = '8228158439575' %}
    {% assign buySubscriptionThreeMonthsVariantID = '44190137843863' %}
    {% assign buySubscriptionThreeMonthsPlanID = '8556871831' %}
    {% assign buyOnceOneMonth = '$49.90' %}
    {% assign buyOnceThreeMonths = '$135.00' %}
    {% assign buyOnceThreeMonthsCAP = '$149.70' %}
    {% assign buyOnceThreeMonthsDiscountPercentage = 10 %}
    {% assign buySubscriptionOneMonth = '$44.90' %}
    {% assign buySubscriptionOneMonthCAP = '$49.90' %}
    {% assign buySubscriptionOneMonthDiscountPercentage = 10 %}
    {% assign buySubscriptionThreeMonths = ' $127.00' %}
    {% assign buySubscriptionThreeMonthsCAP = '$149.70' %}
    {% assign buySubscriptionThreeMonthsDiscountPercentage = 15 %}
  {% elsif request.path contains 'lp-wl-curaslim-360-price' %}
    {% assign buyOnceOneMonthProductID = '8583197327511' %}
    {% assign buyOnceOneMonthVariantID = '44698086998167' %}
    {% assign buyOnceThreeMonthsProductID = '8583197327511' %}
    {% assign buyOnceThreeMonthsVariantID = '44698087063703' %}
    {% assign buySubscriptionOneMonthProductID = '8583197327511' %}
    {% assign buySubscriptionOneMonthVariantID = '44698086998167' %}
    {% assign buySubscriptionOneMonthPlanID = '11271405719' %}
    {% assign buySubscriptionThreeMonthsProductID = '8583197327511' %}
    {% assign buySubscriptionThreeMonthsVariantID = '44698087063703' %}
    {% assign buySubscriptionThreeMonthsPlanID = '11271372951' %}
    {% assign buyOnceOneMonth = '$54.90' %}
    {% assign buyOnceThreeMonths = '$139.90' %}
    {% assign buyOnceThreeMonthsCAP = '$164.70' %}
    {% assign buyOnceThreeMonthsDiscountPercentage = 15 %}
    {% assign buySubscriptionOneMonth = '$46.60' %}
    {% assign buySubscriptionOneMonthCAP = '$54.90' %}
    {% assign buySubscriptionOneMonthDiscountPercentage = 15 %}
    {% assign buySubscriptionThreeMonths = ' $128.40' %}
    {% assign buySubscriptionThreeMonthsCAP = '$164.70' %}
    {% assign buySubscriptionThreeMonthsDiscountPercentage = 22 %}
  {% else %}
    {% assign buyOnceOneMonthProductID = '8260651352215' %}
    {% assign buyOnceOneMonthVariantID = '44221703979159' %}
    {% assign buyOnceThreeMonthsProductID = '8260651352215' %}
    {% assign buyOnceThreeMonthsVariantID = '44221702996119' %}
    {% assign buySubscriptionOneMonthProductID = '8260651352215' %}
    {% assign buySubscriptionOneMonthVariantID = '44221703979159' %}
    {% assign buySubscriptionOneMonthPlanID = '8794734743' %}
    {% assign buySubscriptionThreeMonthsProductID = '8260651352215' %}
    {% assign buySubscriptionThreeMonthsVariantID = '44221702996119' %}
    {% assign buySubscriptionThreeMonthsPlanID = '8794767511' %}
    {% assign buyOnceOneMonth = '$49.90' %}
    {% assign buyOnceThreeMonths = '$127.00' %}
    {% assign buyOnceThreeMonthsCAP = '$149.70' %}
    {% assign buyOnceThreeMonthsDiscountPercentage = 15 %}
    {% assign buySubscriptionOneMonth = '$42.00' %}
    {% assign buySubscriptionOneMonthCAP = '$49.90' %}
    {% assign buySubscriptionOneMonthDiscountPercentage = 15 %}
    {% assign buySubscriptionThreeMonths = ' $116.00' %}
    {% assign buySubscriptionThreeMonthsCAP = '$149.70' %}
    {% assign buySubscriptionThreeMonthsDiscountPercentage = 22 %}
  {% endif %}
{% endif %}

<div id="product-actions" class="product-actions">
  <div class="buying-options">
    <p class="text-[14px] font-bold">Buying Options:</p>
    <div class="purchase-type mt-2">
      <div class="option one-time-purchase">
        <label>
          <input type="radio" name="purchase-type" value="one-time" checked>
          <span class="option-text">One Time Purchase</span>
          <span class="tag popular-tag">Popular</span>
        </label>

        <div class="quantity-options">
          <div class="quantity-option" name="purchase-option-buyonce-onemonth" data-product-id="{{ buyOnceOneMonthProductID }}" data-quantity="1" data-variant-id="{{ buyOnceOneMonthVariantID }}">
            <input type="radio" name="quantity" id="qty-1" value="1">
            <label for="qty-1">
              <span class="buy-text">Buy 1</span>
              <span class="price">{{ buyOnceOneMonth }}</span>
            </label>
          </div>

          <div class="quantity-option" name="purchase-option-buyonce-threemonths" data-product-id="{{ buyOnceThreeMonthsProductID }}" data-quantity="1" data-variant-id="{{ buyOnceThreeMonthsVariantID }}">
            <input type="radio" name="quantity" id="qty-3" value="1" checked>
            <label for="qty-3">
              <div class="left-wrapper">
                <span class="buy-text">Buy 3</span>
                <span class="save-tag">Save {{ buyOnceThreeMonthsDiscountPercentage }}%</span>
              </div>
              <div class="price-wrapper">
                <span class="price">{{ buyOnceThreeMonths }}</span>
                <span class="original-price">{{ buyOnceThreeMonthsCAP }}</span>
              </div>
            </label>
          </div>
        </div>
      </div>

      <div class="option subscription">
        <label>
          <input type="radio" name="purchase-type" value="subscription">
          <span class="option-text">Purchase With Subscription</span>
          <span class="tag best-value-tag">Best Value<br>{{ buySubscriptionThreeMonthsDiscountPercentage }}% Off</span>
        </label>

        <div class="quantity-options">
          <div class="quantity-option" name="purchase-option-subscription-onemonth" data-product-id="{{ buySubscriptionOneMonthProductID }}" data-quantity="1" data-variant-id="{{ buySubscriptionOneMonthVariantID }}" data-subscription-plan-id="{{ buySubscriptionOneMonthPlanID }}">
            <input type="radio" name="subscription-quantity" id="sub-qty-1" value="1">
            <label for="sub-qty-1">
              <div class="left-wrapper">
                <span class="buy-text">1 Month</span>
                <span class="save-tag">Save {{ buySubscriptionOneMonthDiscountPercentage }}%</span>
              </div>

              <div class="price-wrapper">
                <span class="price">{{ buySubscriptionOneMonth }}</span>
                <span class="original-price">{{ buySubscriptionOneMonthCAP }}</span>
              </div>
            </label>
          </div>

          <div class="quantity-option" name="purchase-option-subscription-threemonths" data-product-id="{{ buySubscriptionThreeMonthsProductID }}" data-quantity="1" data-variant-id="{{ buySubscriptionThreeMonthsVariantID }}" data-subscription-plan-id="{{ buySubscriptionThreeMonthsPlanID }}">
            <input type="radio" name="subscription-quantity" id="sub-qty-3" value="1">
            <label for="sub-qty-3">
              <div class="left-wrapper">
                <span class="buy-text">3 Months</span>
                <span class="save-tag">Save {{ buySubscriptionThreeMonthsDiscountPercentage }}%</span>
              </div>

              <div class="price-wrapper">
                <span class="price">{{ buySubscriptionThreeMonths }}</span>
                <span class="original-price">{{ buySubscriptionThreeMonthsCAP }}</span>
              </div>
            </label>
          </div>
        </div>
      </div>
    </div>

    <button type="submit" class="submit-button">
      <span class="submit-button-text"><strong>Buy Now</strong> <span class="total-price"></span></span>
      <div class="loader" style="display: none;">
        <div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>
      </div>
    </button>
  </div>

  <div class="guarantee-wrapper flex flex-col gap-2 p-4">
    <img class="object-scale-down m-0" src="https://cdn.shopify.com/s/files/1/0452/2459/1511/files/cta-badges.png" alt="Secure Checkout" class="secure-checkout">
    <div class="guarantee text-center"><strong>60 Days Satisfaction Guarantee</strong><br>If our products aren't your cup of tea, just send it back within 60 days for a full refund. No hassle, just health.</div>
  </div>
</div>

  <script>$(".guarantee-wrapper").insertBefore(".product-image-wrapper");</script>

  <style>
    .uwy {
      display: none !important;
    }

    .cta-section {
      padding-bottom: 50px;
    }

    .cta-text li {
      width: 48% !important;
      font-size: 14px !important;

      @media (max-width: 768px) {
        font-size: 3.2vw !important;
        padding-left: 4vw;
      }

      &::before {
        top: 0;
      }
    }

    .product-container {
      grid-template-columns: 25% 40% 32% !important;
      grid-column-gap: 1rem !important;
    }

    .guarantee-wrapper {
      grid-column: 1;
      grid-row: 1/3;
      justify-content: center;
      font-size: 14px;
      line-height: 1.3;
      margin-top: 20px;

      img {
        max-width: 220px;
        margin-inline: auto;
        margin-top: unset;
      }
    }

    .product-image-wrapper {
      grid-column: 2;
    }

    .product-info {
      grid-area: 1 / 3 / 2 / 3 !important;
    }

    .product-info {
      max-width: 400px;

      h2 {
        font-size: 32px;
        font-weight: bold;
        font-style: normal;
      }
    }

    .product-actions {
      grid-column: 3;
      max-width: 400px;
    }

    @media (width <= 768px) {
      .product-container {
        grid-template-columns: 100% !important;
      }

      .guarantee-wrapper {
        grid-row: 4;
        grid-column: 1;
      }

      .product-info {
        grid-row: 2 !important;
        grid-column: 1 !important;
      }

      .product-image-wrapper {
        grid-row: 2;
        grid-column: 1;
      }

      .product-actions {
        grid-row: 3;
        grid-column: 1;
      }
    }
  </style>

  <style>
    .purchase-type {
      display: flex;
      flex-direction: column;
      gap: 10px;
      margin-bottom: 10px;
    }
    .option {
      background-color: white;
      border-radius: 15px;
      padding: 10px;
      transition: all 0.3s ease;
      min-height: 60px;
      display: grid;
      opacity: 0;
      transform: translateY(20px);
      animation: fadeInUp 0.5s forwards;
    }

    .option > label {
      display: flex;
      align-items: center;
      cursor: pointer;
    }

    .option input[type="radio"] {
      margin-right: 10px;
    }

    .option-text {
      padding-block: 0.5rem;
      font-size: 16px;
      font-weight: 600;

      @media (max-width: 768px) {
        font-size: 3.7vw;
      }
    }

    .tag {
      margin-left: auto;
      padding: 3px 6px;
      border-radius: 5px;
      font-size: 13px;
      font-weight: 600;

      @media screen and (max-width: 768px) {
        font-size: 3vw;
      }
    }

    .popular-tag { background-color: #FFEBCD; }
    .best-value-tag {
      background-color: #C8EAFF;
      text-align: center;
    }

    .quantity-options {
      display: none;
      gap: 10px;
      margin-top: 10px;
      opacity: 1;
      transition: opacity 0.3s ease;
    }
    .quantity-option {
      flex: 1;
      background-color: #f9f9f9;
      border: 1px solid #ddd;
      border-radius: 15px;
      overflow: hidden;
      transition: all 0.3s ease;
      transform: scale(0.95);
      opacity: 0;
      animation: fadeInScale 0.4s forwards;
      font-size: 16px !important;

      .left-wrapper {
        display: flex;
        flex-direction: column;
        align-items: start;
      }
    }
    .quantity-option.selected {
      box-shadow: inset 0px 0px 0px 2px var(--orange);
      transform: scale(1);
    }
    .quantity-option input[type="radio"] { display: none; }
    .quantity-option label {
      display: flex;
      align-items: center;
      padding: 10px;
      cursor: pointer;
      justify-content: space-between;
      height: 100%;
    }
    .buy-text {
      font-weight: bold;

      @media screen and (max-width: 768px) {
        font-size: 3.5vw;
      }
    }
    .price {
      font-weight: 500;
    }
    .price-wrapper {
      display: flex;
      flex-direction: column;
      align-items: end;
      gap:0.2rem;
    }
    .original-price {
      text-decoration: line-through;
      color: #b4b4b4;
      font-size: 12px;
    }
    .save-tag {
      background-color: var(--orange);
      padding: 2px 5px;
      border-radius: 15px;
      font-size: 0.8em;
      margin-top: 5px;
      font-weight: bold;
      text-align: center;

      @media screen and (max-width: 768px) {
        font-size: 3vw;
      }
    }
    .submit-button {
      width: 100%;
      background-color: var(--orange);
      color: black;
      border: none;
      font-size: 1em;
      cursor: pointer;
      transition: background-color 0.3s, transform 0.2s;
      padding: 1rem;
      border-radius: 15px;
    }
    .submit-button:hover {
      background-color: var(--dark-orange);
    }

    @keyframes fadeInUp {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }
    @keyframes fadeInScale {
      from { opacity: 0; transform: scale(0.95); }
      to { opacity: 1; transform: scale(1); }
    }
    .lds-ellipsis {
      display: inline-block;
      position: relative;
      width: 80px;
      top: -10px;
    }
    .lds-ellipsis div {
      position: absolute;
      width: 10px;
      height: 10px;
      border-radius: 50%;
      background: #fff;
      animation-timing-function: cubic-bezier(0, 1, 1, 0);
    }
    .lds-ellipsis div:nth-child(1) {
      left: 8px;
      animation: lds-ellipsis1 0.6s infinite;
    }
    .lds-ellipsis div:nth-child(2) {
      left: 8px;
      animation: lds-ellipsis2 0.6s infinite;
    }
    .lds-ellipsis div:nth-child(3) {
      left: 32px;
      animation: lds-ellipsis2 0.6s infinite;
    }
    .lds-ellipsis div:nth-child(4) {
      left: 56px;
      animation: lds-ellipsis3 0.6s infinite;
    }
    @keyframes lds-ellipsis1 {
      0% { transform: scale(0); }
      100% { transform: scale(1); }
    }
    @keyframes lds-ellipsis3 {
      0% { transform: scale(1); }
      100% { transform: scale(0); }
    }
    @keyframes lds-ellipsis2 {
      0% { transform: translate(0, 0); }
      100% { transform: translate(24px, 0); }
    }
  </style>

<style>
  #cta-section-{{ section.id }} .lds-ellipsis {
    display: inline-block;
    position: relative;
    width: 80px;
    top:-10px;
  }
  #cta-section-{{ section.id }} .lds-ellipsis div {
    position: absolute;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: #fff;
    animation-timing-function: cubic-bezier(0, 1, 1, 0);
  }
  #cta-section-{{ section.id }} .lds-ellipsis div:nth-child(1) {
    left: 8px;
    animation: lds-ellipsis1 0.6s infinite;
  }
  #cta-section-{{ section.id }} .lds-ellipsis div:nth-child(2) {
    left: 8px;
    animation: lds-ellipsis2 0.6s infinite;
  }
  #cta-section-{{ section.id }} .lds-ellipsis div:nth-child(3) {
    left: 32px;
    animation: lds-ellipsis2 0.6s infinite;
  }
  #cta-section-{{ section.id }} .lds-ellipsis div:nth-child(4) {
    left: 56px;
    animation: lds-ellipsis3 0.6s infinite;
  }
  @keyframes lds-ellipsis1 {
    0% {
      transform: scale(0);
    }
    100% {
      transform: scale(1);
    }
  }
  @keyframes lds-ellipsis3 {
    0% {
      transform: scale(1);
    }
    100% {
      transform: scale(0);
    }
  }
  @keyframes lds-ellipsis2 {
    0% {
      transform: translate(0, 0);
    }
    100% {
      transform: translate(24px, 0);
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const productActions = document.getElementById('product-actions');
    const purchaseTypeInputs = productActions.querySelectorAll('input[name="purchase-type"]');
    const submitButton = productActions.querySelector('.submit-button');
    const loader = submitButton.querySelector('.loader');
    const quantityOptions = productActions.querySelectorAll('.quantity-option input[type="radio"]');

    function init() {
        // Ensure the one-time purchase option is selected on load
        const oneTimePurchaseOption = document.querySelector('input[name="purchase-type"][value="one-time"]');
        if (oneTimePurchaseOption) {
            oneTimePurchaseOption.checked = true;
        }

        // Make the one-time purchase quantity options visible on load
        const oneTimeOptions = document.querySelector('.one-time-purchase .quantity-options');
        if (oneTimeOptions) {
            oneTimeOptions.style.display = 'flex';
        }

        // Automatically select the "Buy 3" option
        const buyThreeOption = document.querySelector('.one-time-purchase .quantity-option input[value="3"]');
        if (buyThreeOption) {
            buyThreeOption.checked = true;
            buyThreeOption.click();
            buyThreeOption.closest('.quantity-option').classList.add('selected');
        }

        // Update the submit button text
        updateSubmitButton();

        // Add event listeners
        purchaseTypeInputs.forEach(input => input.addEventListener('change', handlePurchaseTypeChange));
        quantityOptions.forEach(option => option.addEventListener('click', handleQuantitySelection));
        submitButton.addEventListener('click', handleSubmit);
    }

    function handlePurchaseTypeChange(event) {
        const purchaseType = event.target.value;
        updatePurchaseOptions(purchaseType);

        // Automatically select the first quantity option of the selected purchase type
        const firstOptionSelector = purchaseType === 'subscription' ? '.subscription .quantity-option input[type="radio"]' : '.one-time-purchase .quantity-option input[type="radio"]';
        const firstOption = productActions.querySelector(firstOptionSelector);

        if (firstOption) {
            firstOption.click();
        }

        updateSubmitButton();
    }

    function updatePurchaseOptions(purchaseType = 'one-time') {
        const isSubscription = purchaseType === 'subscription';
        const oneTimeOptions = productActions.querySelector('.one-time-purchase .quantity-options');
        const subscriptionOptions = productActions.querySelector('.subscription .quantity-options');

        oneTimeOptions.style.display = isSubscription ? 'none' : 'flex';
        subscriptionOptions.style.display = isSubscription ? 'flex' : 'none';
    }

    function handleQuantitySelection(event) {
        const selectedOption = event.target.closest('.quantity-option');

        quantityOptions.forEach(option => {
            option.closest('.quantity-option').classList.remove('selected');
        });

        selectedOption.classList.add('selected');
    }

    function updateSubmitButton() {
        const isSubscription = productActions.querySelector('input[name="purchase-type"]:checked').value === 'subscription';
        const buttonText = isSubscription ? 'Subscribe Now' : 'Buy Now';
        submitButton.querySelector('.submit-button-text').innerHTML = `<strong>${buttonText}</strong>`;
    }

    function handleSubmit(event) {
        event.preventDefault();
        const isSubscription = productActions.querySelector('input[name="purchase-type"]:checked').value === 'subscription';
        const selector = isSubscription ? 'input[name="subscription-quantity"]:checked' : 'input[name="quantity"]:checked';
        const selectedOption = productActions.querySelector(selector).closest('.quantity-option');
        const variantId = selectedOption.dataset.variantId;
        const quantity = selectedOption.dataset.quantity;
        const subscriptionPlanId = isSubscription ? selectedOption.dataset.subscriptionPlanId : null;

        toggleButtonLoading(true);
        clearCartAndAddItem(variantId, quantity, subscriptionPlanId);
    }

    function toggleButtonLoading(isLoading) {
        if (loader) {
            loader.style.display = isLoading ? 'block' : 'none';
        }
        const submitButtonText = submitButton.querySelector('.submit-button-text');
        if (submitButtonText) {
            submitButtonText.style.display = isLoading ? 'none' : 'block';
        }
    }

    function clearCartAndAddItem(variantId, quantity, sellingPlan = null) {
        const data = {
            items: [{
                id: variantId,
                quantity: quantity,
                selling_plan: sellingPlan
            }]
        };

        fetch('/cart/clear.js', { method: 'POST' })
            .then(() => fetch('/cart/add.js', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            }))
            .then(response => response.json())
            .then(() => {
                console.log('Item added to cart');
                window.location.href = '/checkout';
            })
            .catch((error) => {
                console.error('Error:', error);
                toggleButtonLoading(false);
            });
    }

    init();
});
</script>