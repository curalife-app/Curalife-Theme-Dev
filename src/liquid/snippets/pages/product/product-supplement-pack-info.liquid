{% comment %}
	Responsive Pack Info Section
	- Mobile (≤768px): Vertical tab navigation, only one panel visible at a time.
	- Desktop (≥800px): All panels are visible side‑by‑side with headers.
{% endcomment %}
<section class="pack-info-section instance-{{ index }}">
	<div class="container">
		<!-- Product Header -->
		<div class="header">
			<div class="titles">
				<h2 class="title">{{ product.title }}</h2>
				<div class="subtitle">{{ product.description }}</div>
				<ul class="highlights check-list">
					{% for highlight in product.metafields.custom['product-highlights'].value %}
						<li class="highlight">
							<strong>{{ highlight.title }}</strong><br>
							{{ highlight.subtitle }}
						</li>
					{% endfor %}
				</ul>
			</div>
			<img class="product-image" src="{{ product.metafields.custom.pill_image | img_url: 'original' }}" alt="{{ product.title }}" loading="lazy">
		</div>

		<!-- Tabbed Content -->
		<div class="tabbed-content">
			<nav class="tabs">
				<ul class="tab-links no-style">
					<li>
						<a href="#instructions-{{ index }}" data-tab="instructions" class="tab-link">Usage Instructions</a>
					</li>
					{% if product.metafields.custom.ingredients.value %}
						<li>
							<a href="#ingredients-{{ index }}" data-tab="ingredients" class="tab-link">Ingredients</a>
						</li>
					{% endif %}
					<li>
						<a href="#facts-{{ index }}" data-tab="facts" class="tab-link">Supplement Facts</a>
					</li>
				</ul>
			</nav>

			<!-- Panels / Tab Content -->
			<div class="tab-panels">
				<div id="instructions-{{ index }}" class="tab-panel" data-tab="instructions">
					<h3 class="panel-header">Usage Instructions</h3>
					<div class="instructions">
						{% for step in product.metafields.custom.instructions.value %}
							<div class="step">
								<div class="capsules">
									{% for i in (1..step.capsules) %}
										<img src="{{ 'icon-capsule.png' | asset_url }}" alt="Capsule Pill" width="20" height="31" style="min-width:35px">
									{% endfor %}
								</div>
								<div class="step-text">{{ step.subtitle }}</div>
							</div>
						{% endfor %}
					</div>
				</div>

				{% if product.metafields.custom.ingredients.value %}
					<!-- Ingredients Panel -->
					<div id="ingredients-{{ index }}" class="tab-panel" data-tab="ingredients">
						<h3 class="panel-header">Ingredients</h3>
						<div class="ingredients">
							{% for ingredient in product.metafields.custom.ingredients.value %}
								<div class="ingredient">
									{% assign ingredient_handle = ingredient | downcase | replace: ' ', '-' %}
									<img src="{{ 'product-supplement-pack-info-ingredient-icon-' | append: ingredient_handle | append: '.png' | asset_url }}" alt="{{ ingredient }}">
									<p>{{ ingredient }}</p>
								</div>
							{% endfor %}
						</div>
					</div>
				{% endif %}

				<!-- Supplement Facts Panel -->
				<div id="facts-{{ index }}" class="tab-panel" data-tab="facts">
					<h3 class="panel-header">Supplement Facts</h3>
					<div class="facts">
						<img src="{{ product.metafields.custom.supplement_fact | image_url }}" alt="Supplement Facts">
					</div>
				</div>
			</div>
		</div>
	</div>
</section>

<style>
	/* Base Styles */
	.pack-info-section {
		background: var(--primary-color-lightest);
		padding: 20px;
	}
	.pack-info-section .header {
		display: flex;
		flex-wrap: wrap;
		justify-content: space-between;
		margin-bottom: 20px;
	}
	.pack-info-section .titles {
		max-width: 60%;
	}
	.pack-info-section .check-list {
		list-style: none;
		padding: 0;
		margin: 10px 0 0;
	}
	.pack-info-section .highlight {
		margin-bottom: 10px;
	}
	.pack-info-section .product-image {
		max-width: 35%;
		height: auto;
	}

	/* Tabs Navigation – Mobile Vertical Alignment */
	.tabbed-content .tabs ul {
		list-style: none;
		margin: 0 0 10px;
		padding: 0;
	}
	.tabbed-content .tabs li {
		margin-bottom: 5px;
	}
	.tabbed-content .tabs a {
		display: block;
		padding: 10px;
		background: #f0f0f0;
		text-decoration: none;
		color: #333;
		border: 1px solid transparent;
		border-radius: 4px;
	}
	.tabbed-content .tabs a.active {
		background: var(--light-green);
		color: #fff;
		border-color: var(--light-green);
	}

	/* Tab Panels */
	.tab-panels .tab-panel {
		display: none;
	}
	.tab-panels .tab-panel.active {
		display: block;
	}

	/* Panel Headers (Desktop Only) */
	.panel-header {
		display: none;
		margin-bottom: 10px;
	}

	/* Mobile Styles (≤768px) */
	@media (max-width: 768px) {
		.tabbed-content .tabs {
			display: block;
		}
		.panel-header {
			display: none;
		}
	}

	/* Desktop Styles (≥800px) */
	@media (min-width: 800px) {
		.tabbed-content .tabs {
			display: none;
		}
		.tab-panels {
			display: flex;
			gap: 20px;
		}
		.tab-panels .tab-panel {
			display: block;
			flex: 1;
		}
		.panel-header {
			display: block;
			text-align: center;
			font-size: 1.5em;
			font-weight: bold;
			margin-bottom: 10px;
		}
	}
</style>

<script>
	document.addEventListener("DOMContentLoaded", function() {
		var instanceSelector = ".pack-info-section.instance-{{ index }}";
		var container = document.querySelector(instanceSelector);
		if (!container) return;

		var tabLinks = container.querySelectorAll(".tab-link");
		var tabPanels = container.querySelectorAll(".tab-panel");

		// Remove active classes from all tabs and panels.
		function clearActive() {
			tabLinks.forEach(function(link) {
				link.classList.remove("active");
			});
			tabPanels.forEach(function(panel) {
				panel.classList.remove("active");
			});
		}

		// Activate the given tab link and show its corresponding panel.
		function activateTab(tabLink) {
			var targetId = tabLink.getAttribute("href");
			clearActive();
			tabLink.classList.add("active");
			var targetPanel = container.querySelector(targetId);
			if (targetPanel) {
				targetPanel.classList.add("active");
			}
		}

		// Initialize mobile tabs
		function initTabs() {
			if (window.innerWidth <= 768) {
				// Bind click events on mobile if not already bound.
				tabLinks.forEach(function(link) {
					link.addEventListener("click", function(e) {
						e.preventDefault();
						activateTab(link);
					});
				});
				// Activate the first tab if none is active.
				if (tabLinks.length && !container.querySelector(".tab-link.active")) {
					activateTab(tabLinks[0]);
				}
			} else {
				// On desktop, show all panels.
				clearActive();
				tabPanels.forEach(function(panel) {
					panel.classList.add("active");
				});
			}
		}

		initTabs();

		// Reinitialize on window resize (debounced)
		window.addEventListener("resize", function() {
			clearTimeout(window.tabResizeTimer);
			window.tabResizeTimer = setTimeout(function() {
				initTabs();
			}, 250);
		});
	});
</script>
