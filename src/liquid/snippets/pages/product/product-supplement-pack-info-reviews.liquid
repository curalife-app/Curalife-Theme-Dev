<div class="container">
  <div class="reviews">
    <div class="quote-slider review-page">
      <div class="swiper swiper-loading" data-swiper-section="product-reviews">
        <div class="swiper-wrapper">
          {% for review in reviews %}
            <div class="swiper-slide">
              <div class="quote-card">
                <div class="info">
                  <div class="quote-author">
                    <h3>{{ review | split: "*" | last }}</h3>
                  </div>
                  <div class="quote-rating">
                    {% for i in (1..5) %}
                      <i class="fa-solid fa-star text-xs"></i>
                    {% endfor %}
                  </div>
                </div>
                <p class="quoted-text">{{ review | split: "*" | first }}</p>
              </div>
            </div>
          {% endfor %}
        </div>
        <div class="slider-control">
          <div class="prev-slide2"><span class="icon-arrow"></span></div>
          <div class="next-slide2"><span class="icon-arrow"></span></div>
        </div>

        <div class="swiper-loader">
          <div class="swiper-loader-spinner">
            <div class="swiper-loader-bounce1"></div>
            <div class="swiper-loader-bounce2"></div>
            <div class="swiper-loader-bounce3"></div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>

  .quote-slider {
    padding: unset;
    margin: unset;
  }

  .quote-slider .swiper {
    padding: unset;
  }

  .quote-slider .swiper-slide {
    padding: unset;
  }

  .quote-slider .quote-card {
    top: unset !important;
    background: rgba(232,	232,	176, .2);
    box-shadow: unset !important;
    justify-content: center;
    height: 260px;
    padding: 20px;
  }


  .quote-slider .slider-control {
    justify-content: space-between;
  }
  .quote-card .info .quote-rating p span {

    color: var(--light-green);
  }

  .quote-slider .prev-slide2 {
    background: unset;
    left: 20px;
  }

  .quote-slider .prev-slide2:hover {
    background: unset;
  }

  .quote-slider .next-slide2 {
    background: unset;
    right: 20px
  }

  .quote-slider .next-slide2:hover {
    background: unset;
  }

  .quote-slider .prev-slide2 span {
    font-size: 30px;
    background: unset;
  }

  .quote-slider .next-slide2 span {
    font-size: 30px;
    background: unset;
  }

  .quoted-text {
    font-style: italic;
    font-size: 18px;
    line-height: 24px;
    color: #424733;
    margin: unset;
  }

  .quote-rating p {
    margin: unset;
    margin-bottom: 20px;
  }

  @media screen and (max-width: 1130px) {

    .quote-slider .quote-card {
      padding: 5vw;
      height: unset;
    }

    .quote-slider .swiper-slide.swiper-slide-active .quote-card {
      height: unset;
    }

    .quote-slider .slider-control {
       display: none;

    }
  }

@media screen and (max-width: 629px) {
  .quoted-text {
    font-size: 3vw;
    line-height: unset;
  }
}
</style>

{% render 'layout.head.swiper-dynamic', selector: '.quote-slider.review-page .swiper' %}

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const swiperEl = document.querySelector(".quote-slider.review-page .swiper");
    if (!swiperEl) return;

    // Add data attributes for the Swiper options
    swiperEl.dataset.swiperOptions = JSON.stringify({
      slidesPerView: 'auto',
      spaceBetween: 0,
      grabCursor: true,
      loop: true,
      autoplay: {
        delay: 2500
      },
      navigation: {
        nextEl: ".next-slide2",
        prevEl: ".prev-slide2",
        disabledClass: 'disabled'
      },
      breakpoints: {
        0: {
          slidesPerView: 1
        },
        630: {
          slidesPerView: 1,
          centeredSlides: true
        },
        1131: {
          autoplay: {enabled: false},
          slidesPerView: 1,
          centeredSlides: true
        }
      }
    });

    // Let the observer handle initialization if element is not in viewport
    if (window.swiperObserver && !swiperEl.dataset.swiperObserved) {
      window.swiperObserver.observe(swiperEl);
      swiperEl.dataset.swiperObserved = 'pending';
    } else {
      // Fallback to manual initialization
      loadSwiper(() => {
        window.initializeSwiper(".quote-slider.review-page .swiper",
          JSON.parse(swiperEl.dataset.swiperOptions));
      });
    }
  });
</script>
