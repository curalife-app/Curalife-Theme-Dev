{% comment %}
	Block Width Styles Snippet

	Renders CSS to set the width of a block based on its block_width_percent setting.
	Adjusts the width to account for gaps between columns.

	Parameters:
	- block_id: The ID of the block
	- width_percent: The width percentage from block settings
	- mobile_width_percent: The width percentage from block settings for mobile (defaults to 100)
	- columns: Number of columns for desktop (default: 2)
	- columns_mobile: Number of columns for mobile (default: 1)
	- gap_width: Gap width in % (default: 2)
{% endcomment %}

{% assign columns = columns | default: 2 %}
{% assign columns_mobile = columns_mobile | default: 1 %}
{% assign gap_width = gap_width | default: 2 %}
{% assign mobile_width_percent = mobile_width_percent | default: 100 %}
{% assign total_gaps_desktop = columns | minus: 1 %}
{% assign total_gaps_mobile = columns_mobile | minus: 1 %}
{% assign total_gap_percent_desktop = gap_width | times: total_gaps_desktop %}
{% assign total_gap_percent_mobile = gap_width | times: total_gaps_mobile %}
{% assign available_space_desktop = 100 | minus: total_gap_percent_desktop %}
{% assign available_space_mobile = 100 | minus: total_gap_percent_mobile %}
{% assign actual_width_desktop = width_percent | times: available_space_desktop | divided_by: 100.0 %}
{% assign actual_width_mobile = mobile_width_percent | times: available_space_mobile | divided_by: 100.0 %}

{% if width_percent %}
	<style>
		/* Pre-calculated width accounting for gaps */
		#block-{{ block_id }} {
			width: {{ actual_width_desktop }}% !important;
			flex-basis: {{ actual_width_desktop }}% !important;
		}

		@media (max-width: 768px) {
			#block-{{ block_id }} {
				width: {{ actual_width_mobile }}% !important;
				flex-basis: {{ actual_width_mobile }}% !important;
				{% if mobile_width_percent == 100 %}
				--block-column-gap: 0%;
				{% endif %}
			}
		}
	</style>
{% endif %}
