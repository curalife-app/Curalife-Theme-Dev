<!-- Loader Overlay HTML -->
<div id="overlay">
  <div class="cv-spinner">
      <span class="spinner"></span>
  </div>
</div>

<!-- Loader Overlay CSS -->
<style>
  #overlay {
      position: fixed;
      top: 0;
      z-index: 100;
      width: 100%;
      height: 100%;
      display: none;
      background: rgba(0, 0, 0, 0.3);
  }
  .cv-spinner {
      height: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
  }
  .spinner {
      width: 40px;
      height: 40px;
      border: 4px rgb(255, 255, 255) solid;
      border-top: 4px var(--dark-green) solid;
      border-radius: 50%;
      animation: sp-anime 0.8s infinite linear;
  }
  @keyframes sp-anime {
      100% {
          transform: rotate(360deg);
      }
  }
  .is-hide {
      display: none;
  }
</style>

<script>
  async function updateQuantityOnServer(id, qty) {
    console.log('Updating Cart...')
    $("#overlay").fadeIn(300);ã€€
    $.ajax({
      type:"POST",
      url: "/cart/change.js",  // Send the login info to this page
      data: JSON.stringify({ id: id, quantity: qty }),
      dataType: "json",
      async: false,
      contentType: "application/json",
      timeout: 200000,
      success: function(result){
        console.log("Item Quantity Updated");
        window.UpdateStatus = true;
      },
      error: function(XMLHttpRequest, textStatus, errorThrown) {
        console.log("Error In Updating Item Quantity!", textStatus, errorThrown);
        window.UpdateStatus = false;
      },

    }).done(function() {
      setTimeout(function(){$("#overlay").fadeOut(300);},500);
    });
  }

  function updateQuantityOnHeaderIcon(updateValue) {
    var cartTotalCount = $('.header_cart_count').text();
    var cartRemainingCount = parseInt(cartTotalCount) + parseInt(updateValue);
    $('.header_cart_count').text(cartRemainingCount);
  }

  function updateTotalPrice(inputObject, updateValue) {
    var currencySymbol =  inputObject.attr("currency");

    if (inputObject.attr("cart-type") == "drawer") {
      // Cart Drawer Removal
      var itemPrice = inputObject.parent().parent().parent().find('.price').find("p").text().replace(currencySymbol, "").replace(",", "");
      var changePrice = updateValue * parseFloat(itemPrice);

      // Update Cart Total Price
      var cartPrice = $(".cstm_pric").text().replace(currencySymbol, "").replace(",", "");
      var finalCartPrice = parseFloat(cartPrice) + parseFloat(changePrice);
      $(".cstm_pric").text(currencySymbol + finalCartPrice.toFixed(2));
      if (finalCartPrice == 0) {
        $(".plc_order").attr("href", "/collections");
      }
    }
    else {
      // Cart Template Removal
      var itemPrice = inputObject.parent().parent().parent().parent().parent().find('.price').find("p").text().replace(currencySymbol, "").replace(",", "");
      var changePrice = updateValue * parseFloat(itemPrice);

      // Update Row Total Price
      var rowPriceObject = inputObject.parent().parent().parent().parent().parent().find('.total').find("p");
      var rowPrice = rowPriceObject.text().replace(currencySymbol, "").replace(",", "");
      var finalRowPrice = parseFloat(rowPrice) + parseFloat(changePrice);
      rowPriceObject.text(currencySymbol + finalRowPrice.toFixed(2).toString());

      // Update Cart Total Price
      var cartPriceObject = $(".cart-total .total-wrap .price p b");
      var cartPrice = cartPriceObject.text().replace(currencySymbol, "").replace(",", "");
      var finalCartPrice = parseFloat(cartPrice) + parseFloat(changePrice);
      cartPriceObject.text(currencySymbol + finalCartPrice.toFixed(2).toString());
    }
  }

  function updateQuantity(inputObject, updateValue) {
    var oldValue = inputObject.val();
    var newValue = parseInt(oldValue) + parseInt(updateValue);

    // Update Server
    updateQuantityOnServer(inputObject.attr('item-var-id'), updateValue > 1 ? 0 : newValue);

    if (window.UpdateStatus) {
      triggerAddOrRemoveToCart(inputObject, updateValue);

      // Remove Item If Quantity Is 0
      if (newValue == 0) {
        inputObject.parent().parent().parent().parent().parent().remove();
      }
      else {
        // Update Input Object Value
        inputObject.val(newValue);
      }

      updateTotalPrice(inputObject, updateValue);
      updateQuantityOnHeaderIcon(updateValue);
    }
  }

  function triggerAddOrRemoveToCart(inputObject, updateValue) {
    window.dataLayer = window.dataLayer || [];
    window.dataLayer.push({ecommerce:null});
    window.dataLayer.push({
      event: updateValue < 0 ? "remove_from_cart" : "add_to_cart",
      ecommerce: {
        items: [
          {
            item_name: inputObject.attr("title"),
            item_id: inputObject.attr("prod-id"),
            affiliation: inputObject.attr("shop-name"),
            price: inputObject.attr("price"),
            currency: inputObject.attr("currency-code"),
            item_brand: "CuraLife",
            item_category: "CuraLin",
            quantity: Math.abs(updateValue)
          }
        ]
      },
      email: "{{ customer.email }}",
      phone: "{{ customer.phone }}",
      name: "{{ customer.first_name }}",
      surname: "{{ customer.last_name }}",
      city: "{{ customer.customer_address.city }}",
      state: "{{ customer.customer_address.province }}",
      zip: "{{ customer.customer_address.zip }}",
      country: "{{ customer.customer_address.country_code | t }}",
      user_agent: navigator.userAgent
    });

    woopra.track('add to cart', {
      product_sku: inputObject.attr("prod-id"),
      product_name: inputObject.attr("title"),
      product_price: inputObject.attr("price"),
      currency: inputObject.attr("currency-code"),
      quantity: Math.abs(updateValue)
    });
  }
</script>