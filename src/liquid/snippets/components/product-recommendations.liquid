{% if article.metafields.custom.product_recommendations.value.size > 0 %}
  <div class="product-recommendations section">
    <h5>Take Control of Your Wellness</h5>

    <div class="swiper-container">
      <div class="swiper product-slider swiper-loading" data-swiper-section="product-recs">
        <div class="swiper-wrapper">
          {% for product in article.metafields.custom.product_recommendations.value %}
            <div class="swiper-slide product-item">
              <a href="{{ product.url }}" class="no-underline">
                <img src="{{ product.metafields.custom.bottle_image | img_url: '200x' }}" alt="{{ product.title }}" class="product-image">
              </a>

              <p class="product-name">{{ product.title }}</p>
              <p class="product-price">{{ product.price | money }}</p>
            </div>
          {% endfor %}
        </div>

        <div class="swiper-loader">
          <div class="swiper-loader-spinner">
            <div class="swiper-loader-bounce1"></div>
            <div class="swiper-loader-bounce2"></div>
            <div class="swiper-loader-bounce3"></div>
          </div>
        </div>
      </div>

      <div class="swiper-nav swiper-button-prev"></div>
      <div class="swiper-nav swiper-button-next"></div>
    </div>

    <a href="/collections/all"><button class="font-bold">Explore Our Supplements</button></a>
  </div>

  {% render 'layout.head.swiper-dynamic', selector: '.product-slider' %}

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const swiperEl = document.querySelector('.product-slider');
      if (!swiperEl) return;

      // Add data attributes for the Swiper options
      swiperEl.dataset.swiperOptions = JSON.stringify({
        slidesPerView: 1,
        spaceBetween: 10,
        centeredSlides: true,
        navigation: {
          nextEl: '.swiper-button-next',
          prevEl: '.swiper-button-prev',
        },
        breakpoints: {
          768: {
            slidesPerView: 3
          },
        }
      });

      // Let the observer handle initialization if element is not in viewport
      if (window.swiperObserver && !swiperEl.dataset.swiperObserved) {
        window.swiperObserver.observe(swiperEl);
        swiperEl.dataset.swiperObserved = 'pending';
      } else {
        // Fallback to manual initialization
        loadSwiper(() => {
          window.initializeSwiper('.product-slider',
            JSON.parse(swiperEl.dataset.swiperOptions));
        });
      }
    });
  </script>

  <style>
    .product-recommendations {
      padding: 2rem;
      margin-top: 2rem;
      text-align: center;
      border-radius: 15px;
      background-color: #EBF1F3;

      h5 {
        color: var(--curalin);

        @media (max-width: 768px) {
          font-size: 7vw;
        }
      }

      button {
        padding: 0.5rem 1rem;
        font-size: 18px;
      }
    }

    .swiper-container {
      position: relative;
      padding: 0 30px;
      margin: 1rem 0;
    }

    .product-slider {
      overflow: hidden;
    }

    .product-item {
      width: 180px;
    }

    .product-image {
      width: 100%;
      height: auto;
      border-radius: 8px;
      filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));
      background-color: white;
      padding: 0.5rem;
    }

    .product-name {
      margin-top: 1rem;
      margin-bottom: 0;
      font-size: 20px;
      font-weight: bold;
      color: var(--blue);
    }

    .product-price {
      color: #555;
    }

    .swiper-nav {
      margin-top: -75px !important;
    }

    .swiper-button-prev {
      left: 5px;

      @media (max-width: 768px) {
        left: -6vw
      }
    }

    .swiper-button-next {
      right: 5px;

      @media (max-width: 768px) {
        right: -6vw
      }
    }

    .swiper-button-prev::after,
    .swiper-button-next::after {
      font-size: 18px;
    }
  </style>
{% endif %}