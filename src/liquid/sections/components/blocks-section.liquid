{% comment %}
	Section that provides a flexible block layout.
	Merchants add 'Blocks Group' blocks, which then accept nested content blocks.
{% endcomment %}

{% assign section_id = section.id %}
{% assign column_gap = section.settings.column_gap | default: 5 %}
{% assign row_gap_rem = section.settings.row_gap_rem | default: 1 %}
{% assign columns = section.settings.columns | default: 2 %}
{% assign columns_mobile = section.settings.columns_mobile | default: 1 %}
{% assign max_width = section.settings.max_width | default: 1200 %}
{% assign content_width = section.settings.content_width | default: 100 %}

{% assign total_gaps_desktop = columns | minus: 1 %}
{% assign total_gaps_mobile = columns_mobile | minus: 1 %}
{% assign total_gap_percent_desktop = column_gap | times: total_gaps_desktop %}
{% assign total_gap_percent_mobile = column_gap | times: total_gaps_mobile %}
{% assign default_width_desktop = 100 | minus: total_gap_percent_desktop | divided_by: columns %}
{% assign default_width_mobile = 100 | minus: total_gap_percent_mobile | divided_by: columns_mobile %}

<style>
	#section-{{ section_id }} {
		--column-gap: {{ column_gap }}%;
		--row-gap: {{ row_gap_rem }}rem;
		--columns: {{ columns }};
		--columns-mobile: {{ columns_mobile }};
		--alignment: {{ section.settings.vertical_alignment | default: 'flex-start' }};
		--max-width: {{ max_width }}px;
		--content-width: {{ content_width }}%;
		--default-width-desktop: {{ default_width_desktop }}%;
		--default-width-mobile: {{ default_width_mobile }}%;

		/* Desktop padding settings */
		{% if section.settings.section_padding_top != blank %}
		padding-top: {{ section.settings.section_padding_top }}px;
		{% endif %}

		{% if section.settings.section_padding_bottom != blank %}
		padding-bottom: {{ section.settings.section_padding_bottom }}px;
		{% endif %}
	}

	/*
	 * Use flex layout with gap to create proper spacing
	 */
	#section-{{ section_id }} .blocks-section-flex {
		display: flex;
		flex-wrap: wrap;
		column-gap: var(--column-gap);
		row-gap: var(--row-gap);
		align-items: var(--alignment);
		width: var(--content-width);
		margin: 0 auto;
	}

	/* Use pre-calculated width for default blocks that are direct children only */
	#section-{{ section_id }} .blocks-section-flex > .shopify-block:not(.blocks-group) {
		width: {{ default_width_desktop }}%;
		flex-basis: {{ default_width_desktop }}%;
		flex-grow: 0;
		flex-shrink: 0;
	}

	/* Apply the width from the block width style, if set */
	#section-{{ section_id }} .blocks-section-flex > .shopify-block[style*="width"] {
		flex-grow: 0;
		flex-shrink: 0;
	}

	/* Special case for blocks-group to respect its own settings */
	#section-{{ section_id }} .blocks-section-flex > .blocks-group {
		flex-grow: 0;
		flex-shrink: 0;
	}

	@media (max-width: 768px) {
		#section-{{ section_id }} .blocks-section-flex {
			width: 100%;
		}

		/* Reset block width on mobile with simplified calculation - only for direct children */
		#section-{{ section_id }} .blocks-section-flex > .shopify-block:not(.blocks-group) {
			width: {{ default_width_mobile }}%;
			flex-basis: {{ default_width_mobile }}%;
		}

		/* Container mobile styles */
		#section-{{ section_id }} .container {
			width: unset;
			margin: 0 15px;
		}

		/* Apply mobile-specific padding if defined */
		{% if section.settings.section_padding_top_mobile != blank %}
		#section-{{ section_id }} {
			padding-top: {{ section.settings.section_padding_top_mobile }}vw;
		}
		{% endif %}

		{% if section.settings.section_padding_bottom_mobile != blank %}
		#section-{{ section_id }} {
			padding-bottom: {{ section.settings.section_padding_bottom_mobile }}vw;
		}
		{% endif %}
	}

	@media (max-width: 480px) {
		#section-{{ section_id }} .blocks-section-flex {
			flex-direction: column;
			row-gap: calc(var(--row-gap) * 1.5);
		}

		#section-{{ section_id }} .blocks-section-flex > .shopify-block:not(.blocks-group) {
			width: 100% !important;
			flex-basis: 100% !important;
		}
	}

	#section-{{ section_id }} .blocks-section-block {
		display: flex;
		flex-direction: column;
		gap: 1rem;
		width: 100%;
	}

	@media (max-width: 768px) {
		#section-{{ section_id }} .container {
			width: unset;
			margin: 0 15px;
		}
	}

	@media (max-width: 480px) {
		#section-{{ section_id }} .blocks-section-flex {
			flex-direction: column;
		}

		#section-{{ section_id }} .blocks-section-flex > .shopify-block:not(.blocks-group) {
			width: 100% !important;
			flex-basis: 100% !important;
		}
	}
</style>

<section
	id="section-{{ section_id }}"
	class="blocks-section {% if section.settings.section_classes %}{{ section.settings.section_classes }}{% endif %}"
	data-section-id="{{ section_id }}"
	data-section-type="blocks-section"
	style="
		{% if section.settings.bg_color %}background-color: {{ section.settings.bg_color }};{% endif %}
		{% if section.settings.bg_image %}background-image: url('{{ section.settings.bg_image | image_url }}'); background-size: cover; background-position: center; background-repeat: no-repeat;{% endif %}
	">
	<div
		class="container mx-auto px-4 {% if section.settings.container_bg_color %}px-8 mbl:px-4{% endif %}"
		style="
			max-width: var(--max-width);
			{% if section.settings.container_bg_color %}background-color: {{ section.settings.container_bg_color }};{% endif %}
			{% if section.settings.container_bg_color %}border-radius: {{ section.settings.container_border_radius | default: 5 }}px;{% endif %}
			{% if section.settings.border_color and section.settings.border_color != 'rgba(0,0,0,0)' %}border: 1px solid {{ section.settings.border_color | default: 'transparent' }};{% endif %}
			padding-top: {{ section.settings.container_padding_top | default: 30 }}px;
			padding-bottom: {{ section.settings.container_padding_bottom | default: 30 }}px;
		">
		{% if section.settings.title != blank %}
			<{{ section.settings.title_tag | default: 'h2' }} class="section-title {% if section.settings.title_alignment %}text-{{ section.settings.title_alignment }}{% else %}text-center{% endif %} text-2xl mb-6 {% if section.settings.title_color %}text-[{{ section.settings.title_color }}]{% endif %}">
				{{ section.settings.title }}
			</{{ section.settings.title_tag | default: 'h2' }}>
		{% endif %}

		{% if section.settings.subtitle != blank %}
			<div class="section-subtitle {% if section.settings.title_alignment %}text-{{ section.settings.title_alignment }}{% else %}text-center{% endif %} mb-6 {% if section.settings.subtitle_color %}text-[{{ section.settings.subtitle_color }}]{% endif %}">
				{{ section.settings.subtitle }}
			</div>
		{% endif %}

		{% if section.settings.is_slider %}
			<div
				class="swiper blocks-section-swiper !overflow-visible z-10 {% if section.settings.is_dots or section.settings.is_scrollbar %}!pb-12{% endif %}"
				id="blocks-swiper-{{ section_id }}"
				{% if section.settings.animation %}
					data-aos="{{ section.settings.animation }}"
				{% endif %}>
				<div class="swiper-wrapper">
		{% else %}
			<div class="blocks-section-flex">
		{% endif %}

		{% for block in section.blocks %}
			{% if section.settings.is_slider %}
				<div class="swiper-slide blocks-section-block">
					{% render block %}
				</div>
			{% else %}
				{% comment %} Render block directly without wrapper when not a slider {% endcomment %}
				{% render block %}
			{% endif %}
		{% endfor %}

		{% if section.settings.is_slider %}
			</div>
			<div class="swiper-navigations">
				{% if section.settings.is_arrows %}
					<div class="swiper-nav swiper-button-next" name="track:Slider Arrow - Next"></div>
					<div class="swiper-nav swiper-button-prev" name="track:Slider Arrow - Preview"></div>
				{% endif %}

				{% if section.settings.is_dots %}
					<div class="swiper-pagination"></div>
				{% endif %}

				{% if section.settings.is_scrollbar %}
					<div class="swiper-scrollbar"></div>
				{% endif %}
			</div>
			</div>
		{% else %}
			</div>
		{% endif %}
	</div>
</section>

{% if section.settings.is_slider %}
	<script defer>
		// Define functions outside of DOMContentLoaded to avoid duplicate function creation
		window.blocksSwiperFunctions = window.blocksSwiperFunctions || {
			initSwiper: function(swiperContainer) {
				requestAnimationFrame(() => {
					loadSwiper(() => {
						let swiper = initializeSwiper('#blocks-swiper-{{ section_id }}', {
							spaceBetween: 15,
							grabCursor: true,
							watchSlidesVisibility: true,
							slidesPerView: 'auto',
							autoHeight: {{ section.settings.is_auto_height | default: false }},
							{% if section.settings.is_arrows %}
							navigation: {
								nextEl: '#blocks-swiper-{{ section_id }} .swiper-button-next',
								prevEl: '#blocks-swiper-{{ section_id }} .swiper-button-prev',
							},
							{% endif %}
							{% if section.settings.is_dots %}
							pagination: {
								el: '#blocks-swiper-{{ section_id }} .swiper-pagination',
								clickable: true
							},
							{% endif %}
							{% if section.settings.is_scrollbar %}
							scrollbar: {
								el: '#blocks-swiper-{{ section_id }} .swiper-scrollbar'
							},
							{% endif %}
							{% if section.settings.is_ticker %}
							loop: true,
							speed: 1500,
							autoplay: {
								delay: 0,
								disableOnInteraction: false
							},
							{% elsif section.settings.slider_autoplay_speed > 0 %}
							loop: true,
							speed: {{ section.settings.slider_autoplay_speed }},
							autoplay: {
								delay: {{ section.settings.slider_autoplay_speed }},
							},
							{% endif %}
							lazy: true,
							breakpoints: {
								768: {
									slidesPerView: {{ section.settings.slides_per_view_mobile | default: 1 }},
								},
								1200: {
									slidesPerView: {% if section.settings.slides_per_view != 'all' %}{{ section.settings.slides_per_view | default: 3 }}{% else %}'auto'{% endif %}
								}
							}
						});
					});
				});
			}
		};

		// Create a debounce function for resize events
		window.debounce = window.debounce || ((func, delay) => {
			let timeout;
			return function(...args) {
				clearTimeout(timeout);
				timeout = setTimeout(() => func.apply(this, args), delay);
			};
		});

		// Use "load" event to initialize UI after content is fully loaded
		window.addEventListener('load', function() {
			const swiperContainer = document.getElementById('blocks-swiper-{{ section_id }}');
			if (!swiperContainer) return;

			blocksSwiperFunctions.initSwiper(swiperContainer);
		});
	</script>

	<style>
		{% if section.settings.is_ticker %}
			:root {
				--swiper-transition-timing-function: linear;
			}
		{% endif %}

		#section-{{ section_id }} .swiper-slide {
			opacity: 0;
			transition: opacity 1s ease;
		}

		#section-{{ section_id }} .swiper-slide-active {
			opacity: 1;
		}

		{% if section.settings.slides_per_view == 'all' %}
			{% assign slides_per_view = section.blocks.size %}
		{% else %}
			{% assign slides_per_view = section.settings.slides_per_view | minus: 1 | default: 2 %}
		{% endif %}

		{% for i in (1..slides_per_view) %}
			#section-{{ section_id }} .swiper-slide-active{% for j in (1..i) %} + .swiper-slide{% endfor %} {
				opacity: 1;
			}
		{% endfor %}

		@media (max-width: 768px) {
			#section-{{ section_id }} .swiper-slide-active {
				opacity: 1;
			}

			{% if section.settings.slides_per_view_mobile == 'all' %}
				{% assign slides_per_view_mobile = section.blocks.size %}
			{% else %}
				{% assign slides_per_view_mobile = section.settings.slides_per_view_mobile | minus: 1 | default: 0 %}
			{% endif %}

			{% for i in (1..slides_per_view_mobile) %}
				#section-{{ section_id }} .swiper-slide-active{% for j in (1..i) %} + .swiper-slide{% endfor %} {
					opacity: 1;
				}
			{% endfor %}
		}

		{% if section.settings.is_arrows_bottom %}
			#section-{{ section_id }} {
				--swiper-navigation-top-offset: 98% !important;
				--swiper-navigation-sides-offset: 370px;

				.swiper {
					padding-bottom: 50px !important;
				}

				@media (width < 768px) {
					--swiper-navigation-sides-offset: 15vw !important;
					--swiper-navigation-top-offset: 105vw !important;

					.swiper {
						padding-bottom: 13vw !important;
					}
				}
			}
		{% endif %}
	</style>
{% endif %}

{% if section.settings.bg_image_mobile %}
	<style>
		@media (max-width: 768px) {
			#section-{{ section_id }} {
				background-image: url('{{ section.settings.bg_image_mobile | image_url }}');
			}
		}
	</style>
{% endif %}

{% if section.settings.is_remove_container_padding_mobile %}
	<style>
		@media (max-width: 768px) {
			#section-{{ section_id }} .container {
				padding-inline: 0;
			}
		}
	</style>
{% endif %}

{% schema %}
	{
		"name": "Blocks Section",
		"tag": "section",
		"blocks": [{ "type": "@theme" }, { "type": "@app" }],
		"class": "blocks-section",
		"settings": [
			{
				"type": "header",
				"content": "Section Header"
			},
			{
				"type": "text",
				"id": "title",
				"label": "Section Title (Optional)"
			},
			{
				"type": "select",
				"id": "title_tag",
				"label": "Title Tag",
				"options": [
					{
						"value": "h1",
						"label": "H1"
					},
					{
						"value": "h2",
						"label": "H2"
					},
					{
						"value": "h3",
						"label": "H3"
					}
				],
				"default": "h2"
			},
			{
				"type": "color",
				"id": "title_color",
				"label": "Title Color"
			},
			{
				"type": "select",
				"id": "title_alignment",
				"label": "Title Alignment",
				"options": [
					{
						"value": "left",
						"label": "Left"
					},
					{
						"value": "center",
						"label": "Center"
					},
					{
						"value": "right",
						"label": "Right"
					}
				],
				"default": "center"
			},
			{
				"type": "richtext",
				"id": "subtitle",
				"label": "Section Subtitle"
			},
			{
				"type": "color",
				"id": "subtitle_color",
				"label": "Subtitle Color"
			},
			{
				"type": "header",
				"content": "Block Layout"
			},
			{
				"type": "range",
				"id": "columns",
				"label": "Columns (Desktop)",
				"min": 1,
				"max": 6,
				"step": 1,
				"default": 2
			},
			{
				"type": "select",
				"id": "columns_mobile",
				"label": "Columns (Mobile)",
				"options": [
					{ "value": "1", "label": "1 column" },
					{ "value": "2", "label": "2 columns" }
				],
				"default": "1"
			},
			{
				"type": "range",
				"id": "column_gap",
				"label": "Column Gap",
				"min": 0,
				"max": 20,
				"step": 1,
				"unit": "%",
				"default": 5
			},
			{
				"type": "range",
				"id": "row_gap_rem",
				"label": "Row Gap",
				"min": 0,
				"max": 5,
				"step": 0.1,
				"unit": "rem",
				"default": 1
			},
			{
				"type": "checkbox",
				"id": "is_wrap_columns",
				"label": "Wrap blocks (Desktop)",
				"default": false
			},
			{
				"type": "checkbox",
				"id": "is_wrap_columns_mobile",
				"label": "Wrap blocks (Mobile)",
				"default": false
			},
			{
				"type": "select",
				"id": "vertical_alignment",
				"label": "Vertical Alignment",
				"options": [
					{
						"value": "flex-start",
						"label": "Top"
					},
					{
						"value": "center",
						"label": "Middle"
					},
					{
						"value": "flex-end",
						"label": "Bottom"
					}
				],
				"default": "flex-start"
			},
			{
				"type": "header",
				"content": "Container Settings"
			},
			{
				"type": "range",
				"id": "max_width",
				"label": "Maximum Container Width",
				"min": 600,
				"max": 1600,
				"step": 10,
				"unit": "px",
				"default": 1200
			},
			{
				"type": "range",
				"id": "content_width",
				"label": "Content Width",
				"min": 50,
				"max": 100,
				"step": 1,
				"unit": "%",
				"default": 100
			},
			{
				"type": "range",
				"id": "container_border_radius",
				"label": "Container Border Radius",
				"min": 0,
				"max": 30,
				"step": 1,
				"unit": "px",
				"default": 5
			},
			{
				"type": "number",
				"id": "container_padding_top",
				"label": "Container Padding Top",
				"default": 30
			},
			{
				"type": "number",
				"id": "container_padding_bottom",
				"label": "Container Padding Bottom",
				"default": 30
			},
			{
				"type": "color",
				"id": "container_bg_color",
				"label": "Container Background Color"
			},
			{
				"type": "color",
				"id": "border_color",
				"label": "Border Color"
			},
			{
				"type": "checkbox",
				"id": "is_remove_container_padding_mobile",
				"label": "Remove container padding on mobile"
			},
			{
				"type": "header",
				"content": "Slider Settings"
			},
			{
				"type": "checkbox",
				"id": "is_slider",
				"label": "Enable Slider",
				"default": false
			},
			{
				"type": "range",
				"id": "slider_autoplay_speed",
				"label": "Autoplay Speed",
				"min": 0,
				"max": 5000,
				"step": 100,
				"unit": "ms",
				"default": 0
			},
			{
				"type": "checkbox",
				"id": "is_ticker",
				"label": "Slider Ticker Animation"
			},
			{
				"type": "checkbox",
				"id": "is_arrows",
				"label": "Show Arrows",
				"default": true
			},
			{
				"type": "checkbox",
				"id": "is_dots",
				"label": "Show Dots",
				"default": true
			},
			{
				"type": "checkbox",
				"id": "is_scrollbar",
				"label": "Show ScrollBar"
			},
			{
				"type": "checkbox",
				"id": "is_arrows_bottom",
				"label": "Arrows On Bottom"
			},
			{
				"type": "checkbox",
				"id": "is_auto_height",
				"label": "Auto Height"
			},
			{
				"type": "select",
				"id": "slides_per_view",
				"label": "Slides Per View (Desktop)",
				"options": [
					{ "value": "1", "label": "1 slide" },
					{ "value": "2", "label": "2 slides" },
					{ "value": "3", "label": "3 slides" },
					{ "value": "4", "label": "4 slides" },
					{ "value": "all", "label": "All slides" }
				],
				"default": "3"
			},
			{
				"type": "select",
				"id": "slides_per_view_mobile",
				"label": "Slides Per View (Mobile)",
				"options": [
					{ "value": "1", "label": "1 slide" },
					{ "value": "2", "label": "2 slides" },
					{ "value": "all", "label": "All slides" }
				],
				"default": "1"
			},
			{
				"type": "header",
				"content": "Section Styling"
			},
			{
				"type": "color",
				"id": "bg_color",
				"label": "Background Color"
			},
			{
				"type": "image_picker",
				"id": "bg_image",
				"label": "Background Image"
			},
			{
				"type": "image_picker",
				"id": "bg_image_mobile",
				"label": "Background Image on Mobile"
			},
			{
				"type": "number",
				"id": "section_padding_top",
				"label": "Section Padding Top",
				"default": 50
			},
			{
				"type": "number",
				"id": "section_padding_bottom",
				"label": "Section Padding Bottom",
				"default": 50
			},
			{
				"type": "number",
				"id": "section_padding_top_mobile",
				"label": "Section Padding Top on Mobile (vw unit)"
			},
			{
				"type": "number",
				"id": "section_padding_bottom_mobile",
				"label": "Section Padding Bottom on Mobile (vw unit)"
			},
			{
				"type": "text",
				"id": "section_classes",
				"label": "Additional Section Classes"
			},
			{
				"type": "text",
				"id": "anchor_id",
				"label": "Anchor ID"
			},
			{
				"type": "html",
				"id": "additional_code",
				"label": "Additional Code"
			},
			{
				"type": "select",
				"id": "animation",
				"label": "Animation",
				"options": [
					{
						"value": "none",
						"label": "None"
					},
					{
						"value": "fade-zoom-in",
						"label": "Fade"
					},
					{
						"value": "fade-up",
						"label": "Fade Up"
					},
					{
						"value": "fade-down",
						"label": "Fade Down"
					},
					{
						"value": "fade-left",
						"label": "Fade Left"
					},
					{
						"value": "fade-right",
						"label": "Fade Right"
					},
					{
						"value": "zoom-in",
						"label": "Zoom In"
					},
					{
						"value": "zoom-out",
						"label": "Zoom Out"
					}
				],
				"default": "none"
			}
		],
		"presets": [
			{
				"name": "Blocks Section",
				"blocks": [{ "type": "blocks-group" }, { "type": "blocks-group" }],
				"settings": {
					"columns": 2,
					"column_gap": 5,
					"row_gap_rem": 1
				}
			}
		]
	}
{% endschema %}
