{% assign buttonURL = page.metafields.custom.next_page_link | default: section.settings.button_link %}

<!-- Sticky Button -->
{% if section.settings.is_sticky %}
  <a id="sticky-bar" href="{{ buttonURL }}">
    <button class="sticky-button" name="{{ section.settings.button_element_name }}">{{ section.settings.button_text }}</button>
  </a>
{% else %}
  <section id="button-section-{{ section.id }}" class="button-section {{ section.settings.section_additional_classes }} {% if section.settings.is_sticky %}hidden mbl:w-full{% endif %}">
    <div class="container flex justify-center">
      {% render 'button',
        button_text: section.settings.button_text,
        button_url: buttonURL,
        button_url_global: buttonURL,
        button_icon: "",
        button_style: "",
        button_text_color: section.settings.button_title_color,
        button_bg_color: section.settings.button_bg_color,
        button_is_new_tab: section.settings.button_is_new_tab,
        button_is_link_to_top: false,
        button_is_chatbot: false,
        button_is_prerender_link: false,
        button_under_title: section.settings.button_under_title,
        button_under_title_color: section.settings.button_under_title_color,
        button_under_title_classes: section.settings.button_under_title_classes,
        button_element_name: section.settings.button_element_name,
        button_id: section.id
      %}
    </div>
  </section>
{% endif %}

{% if section.settings.is_pass_url_parameters %}
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      var baseLink = document.getElementById('button-link').href;
      var params = new URLSearchParams(window.location.search);
      document.getElementById('button-link').href = baseLink + '?' + params.toString();
    });
  </script>
{% endif %}

<!-- JavaScript for Sticky Button Behavior -->
{% if section.settings.is_sticky %}
  <script>
    document.addEventListener("DOMContentLoaded", function() {
      var stickyBar = document.getElementById("sticky-bar");
      var stickyHideSetting = "{{ section.settings.sticky_hide | default: '' | strip }}";
      var hideOnElements = stickyHideSetting.split(',').map(function(s) { return s.trim(); }).filter(function(s) { return s !== ''; });

      function checkStickyVisibility() {
        var shouldHide = false;

        if (hideOnElements.length > 0) {
          hideOnElements.forEach(function(selector) {
            if (selector) {
              var elements = document.querySelectorAll(selector);
              elements.forEach(function(element) {
                var rect = element.getBoundingClientRect();
                if (rect.top < window.innerHeight && rect.bottom > 0) {
                  shouldHide = true;
                }
              });
            }
          });
        }

        if (shouldHide) {
          stickyBar.classList.remove("visible");
        } else {
          stickyBar.classList.add("visible");
        }
      }

      window.addEventListener("scroll", checkStickyVisibility);
      window.addEventListener("resize", checkStickyVisibility);
      checkStickyVisibility();
    });
  </script>
{% endif %}

<!-- CSS Styles -->
<style>
  .button-section-{{ section.id }} {
    background: {{ section.settings.bg_color }};
    {% if section.settings.remove_padding_top %}padding-top: 0;{% endif %}
    {% if section.settings.remove_padding_bottom %}padding-bottom: 0;{% endif %}
  }

  .button-section .container {
    display: flex;
    justify-content: center;
  }

  .button-section-{{ section.id }} button {
    border: none;
    background: {{ section.settings.button_bg_color }};
    border-radius: 0;
    color: {{ section.settings.button_title_color }};
    font-weight: 700;
    font-size: 33px;
    box-shadow: 8.26531px 8.26531px 8.26531px rgba(0, 0, 0, 0.2);
    transition: all var(--transition);
    border-radius: 17px;
    min-width: 500px;
  }

  .button-section-{{ section.id }} button:hover {
    {% if section.settings.button_bg_hover != blank %}background: {{ section.settings.button_bg_hover }};{% endif %}
    {% if section.settings.button_title_color_hover != blank %}color: {{ section.settings.button_title_color_hover }};{% endif %}
  }

  @media screen and ( max-width: 768px) {
    .button-section button {
      min-width: 300px;
      font-size: 25px;
    }
  }
</style>

{% schema %}
{
  "name": "Button",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "text",
      "id": "button_text",
      "label": "Button Text"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button Link"
    },
    {
      "type": "checkbox",
      "id": "is_pass_url_parameters",
      "label": "Pass URL Parameters"
    },
    {
      "type": "checkbox",
      "id": "is_link_to_next_page",
      "label": "Link to Next Page (Metafield)"
    },
    {
      "type": "checkbox",
      "id": "is_sticky",
      "label": "Make Button Sticky (Float at Bottom)"
    },
    {
      "type": "text",
      "id": "sticky_hide",
      "label": "Hide Button When Scrolled Over Elements (CSS Selectors)"
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "Background Color"
    },
    {
      "type": "color",
      "id": "button_bg_color",
      "label": "Button Background Color"
    },
    {
      "type": "color",
      "id": "button_title_color",
      "label": "Button Title Color"
    },
    {
      "type": "color",
      "id": "button_bg_hover",
      "label": "Button Hover Background Color"
    },
    {
      "type": "color",
      "id": "button_title_color_hover",
      "label": "Button Hover Title Color"
    },
    {
      "type": "header",
      "content": "Under Title Settings"
    },
    {
      "type": "text",
      "id": "button_under_title",
      "label": "Under Title"
    },
    {
      "type": "color",
      "id": "button_under_title_color",
      "label": "Under Title Color"
    },
    {
      "type": "text",
      "id": "button_under_title_classes",
      "label": "Under Title Additional Classes"
    },
    {
      "type": "header",
      "content": "Padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "label": "Padding Top (px unit)",
      "min": 0,
      "max": 200,
      "step": 10,
      "unit": "px",
      "default": 50
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "label": "Padding Bottom (px unit)",
      "min": 0,
      "max": 200,
      "step": 10,
      "unit": "px",
      "default": 50
    },
    {
      "type": "range",
      "id": "padding_top_mobile",
      "label": "Padding Top on Mobile (vw unit)",
      "min": 0,
      "max": 30,
      "step": 1,
      "unit": "vw",
      "default": 10
    },
    {
      "type": "range",
      "id": "padding_bottom_mobile",
      "label": "Padding Bottom on Mobile (vw unit)",
      "min": 0,
      "max": 30,
      "step": 1,
      "unit": "vw",
      "default": 10
    },
    {
      "type": "checkbox",
      "id": "remove_padding_top",
      "label": "Remove Top Padding"
    },
    {
      "type": "checkbox",
      "id": "remove_padding_bottom",
      "label": "Remove Bottom Padding"
    },
    {
      "type": "text",
      "id": "section_additional_classes",
      "label": "Additional Classes"
    },
    {
      "type": "text",
      "id": "button_element_name",
      "label": "Element Name (for tracking)"
    },
    {
      "type": "select",
      "id": "animation",
      "label": "Animation",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "fade-zoom-in",
          "label": "Fade"
        },
        {
          "value": "fade-up",
          "label": "Fade Up"
        },
        {
          "value": "fade-down",
          "label": "Fade Down"
        },
        {
          "value": "fade-left",
          "label": "Fade Left"
        },
        {
          "value": "fade-right",
          "label": "Fade Right"
        },
        {
          "value": "fade-up-right",
          "label": "Fade Up Right"
        },
        {
          "value": "fade-up-left",
          "label": "Fade Up Left"
        },
        {
          "value": "fade-down-right",
          "label": "Fade Down Right"
        },
        {
          "value": "fade-down-left",
          "label": "Fade Down Left"
        },
        {
          "value": "flip-up",
          "label": "Flip Up"
        },
        {
          "value": "flip-down",
          "label": "Flip Down"
        },
        {
          "value": "flip-left",
          "label": "Flip Left"
        },
        {
          "value": "flip-right",
          "label": "Flip Right"
        },
        {
          "value": "slide-up",
          "label": "Slide Up"
        },
        {
          "value": "slide-down",
          "label": "Slide Down"
        },
        {
          "value": "slide-left",
          "label": "Slide Left"
        },
        {
          "value": "slide-right",
          "label": "Slide Right"
        },
        {
          "value": "zoom-in",
          "label": "Zoom In"
        },
        {
          "value": "zoom-in-up",
          "label": "Zoom In Up"
        },
        {
          "value": "zoom-in-down",
          "label": "Zoom In Down"
        },
        {
          "value": "zoom-in-left",
          "label": "Zoom In Left"
        },
        {
          "value": "zoom-in-right",
          "label": "Zoom In Right"
        },
        {
          "value": "zoom-out",
          "label": "Zoom Out"
        },
        {
          "value": "zoom-out-up",
          "label": "Zoom Out Up"
        },
        {
          "value": "zoom-out-down",
          "label": "Zoom Out Down"
        },
        {
          "value": "zoom-out-left",
          "label": "Zoom Out Left"
        },
        {
          "value": "zoom-out-right",
          "label": "Zoom Out Right"
        }
      ],
      "default": "none"
    }
  ],
  "presets": [
    {
      "name": "Button"
    }
  ]
}
{% endschema %}