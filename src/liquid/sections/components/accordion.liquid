{% comment %}
		SECTION: accordion-component.liquid
		Purpose: Displays a full-width background image with an overlay heading,
						 with either an Accordion or List layout based on user selection.
{% endcomment %}

<style>
#accordion-component {
	position: relative;
	width: 100%;
	min-height: 400px;
	padding: 4rem;
	border-radius: 15px;
	background-size: cover;
	background-position: center;
	{% if section.settings.background_image != blank %}
	background-image: url('{{ section.settings.background_image | image_url: width:2000 }}');
	{% endif %}
}

.image-overlay-heading {
	position: absolute;
	z-index: 2;
	color: #fff;
	left: 4rem;
	bottom: 4rem;
	max-width: 50%;
}

/* Accordion widget styling */
.accordion-widget {
	background: #fff;
	padding: 3rem;
	box-shadow: 0 2px 10px rgba(0,0,0,0.1);
	border-radius: 8px;
	max-width: 50%;
	justify-self: end;
}

.accordion-item {
	border-bottom: 1px solid #ccc;
	padding: 1rem 0;
}

.accordion-header {
	cursor: pointer;
	display: flex;
	justify-content: space-between;
	align-items: center;
	color: var(--primary-color);
	font-style: italic;
	font-weight: 100;
}

.accordion-content {
	overflow: hidden;
	max-height: 0;
	transition: max-height 0.3s ease;
	margin-top: 0.5rem;
}

/* List layout styling */
.list-widget {
	background: #fff;
	box-shadow: 0 2px 10px rgba(0,0,0,0.1);
	border-radius: 8px;
	max-width: 40%;
	justify-self: end;
}

.list-item {
	display: flex;
	gap: 1rem;
	border-bottom: 1px solid #B7C8CC;
}

.list-item h5,
.list-item .content {
	padding: 1rem;
}

.list-item:last-child {
	border-bottom: none;
}

.list-item h5 {
	color: var(--primary-color);
	text-wrap-mode: nowrap;
}

/* Responsive adjustments */
@media (max-width: 768px) {
	#accordion-component {
		min-height: auto; /* Will be set dynamically */
		padding: 1rem;
	}
	.image-overlay-heading {
		position: static;
		margin-bottom: 1rem;
		margin-top: 2rem;
		max-width: 100%;
		text-align: center;
	}
	.accordion-widget,
	.list-widget {
		max-width: 100%;
		margin: 0 auto;
	}
	.accordion-header {
		font-size: 1rem;
	}
	h5 {
		padding-bottom: 0 !important;
	}
	.content {
		padding-top: 0 !important;
	}
	.list-item {
		flex-direction: column;
		gap: 0;
	}
	.accordion-content,
	.list-item p {
		font-size: 0.9rem;
	}
}
</style>

<section class="accordion-component-section">
	<div class="container">
		<div id="accordion-component">

			{% if section.settings.heading != blank %}
				<div class="image-overlay-heading">
					{{ section.settings.heading }}
				</div>
			{% endif %}

			{%- comment -%}
				We check the layout setting:
				- If "accordion", render the accordion widget + JS
				- If "list", render a simple list version
			{%- endcomment -%}

			{% if section.settings.layout == 'accordion' %}
				<!-- Accordion Widget -->
				<div class="accordion-widget">
					{% for block in section.blocks %}
						{% if block.type == 'accordion_item' %}
							<div class="accordion-item">
								<h5 class="accordion-header">
									<span style="font-weight: bold;">{{ block.settings.month_title }}</span>
									<span class="accordion-icon" style="margin-left: 1rem;">+</span>
								</h5>
								<div class="accordion-content">
									{% if block.settings.subtitle != blank %}
										<h4>{{ block.settings.subtitle }}</h4>
									{% endif %}
									<p style="margin: 0;">{{ block.settings.description }}</p>
								</div>
							</div>
						{% endif %}
					{% endfor %}
				</div>
			{% elsif section.settings.layout == 'list' %}
				<!-- List Widget -->
				<div class="list-widget">
					{% for block in section.blocks %}
						{% if block.type == 'accordion_item' %}
							<div class="list-item">
								<h5 class="italic font-thin">{{ block.settings.month_title }}</h5>
								<div class="content">
									{% if block.settings.subtitle != blank %}
										<h4 class="text-[18px] font-bold">{{ block.settings.subtitle }}</h4>
									{% endif %}
									<p class="m-0 text-[14px]">{{ block.settings.description }}</p>
								</div>
							</div>
						{% endif %}
					{% endfor %}
				</div>
			{% endif %}
		</div>
	</div>
</section>

<!-- JavaScript for dynamic mobile min-height and accordion toggle -->
<script>
document.addEventListener('DOMContentLoaded', function() {

	// Function to update the component's min-height on mobile
	function updateComponentMinHeight() {
		var component = document.getElementById('accordion-component');
		if (window.innerWidth <= 768) {
			// Find either the accordion or list widget
			var widget = component.querySelector('.accordion-widget') || component.querySelector('.list-widget');
			if (widget) {
				// Include the height of the heading if it exists
				var heading = component.querySelector('.image-overlay-heading');
				var headingHeight = heading ? heading.offsetHeight : 0;
				var totalHeight = widget.offsetHeight + headingHeight;
				component.style.minHeight = totalHeight + 'px';
			}
		} else {
			// Reset to the default on larger screens
			component.style.minHeight = "";
		}
	}

	// Run on initial load and window resize
	updateComponentMinHeight();
	window.addEventListener('resize', updateComponentMinHeight);

	// Only add accordion toggle if the accordion layout is active
	var accordionHeaders = document.querySelectorAll('#accordion-component .accordion-header');
	accordionHeaders.forEach(function(header) {
		header.addEventListener('click', function() {
			var parentItem = header.parentElement;
			var content = parentItem.querySelector('.accordion-content');
			var icon = header.querySelector('.accordion-icon');

			// Close other open accordion items
			document.querySelectorAll('#accordion-component .accordion-content').forEach(function(otherContent) {
				if (otherContent !== content) {
					otherContent.style.maxHeight = "0px";
					otherContent.parentElement.querySelector('.accordion-icon').textContent = '+';
				}
			});

			// Toggle the clicked accordion item
			if (content.style.maxHeight && content.style.maxHeight !== "0px") {
				content.style.maxHeight = "0px";
				icon.textContent = '+';
			} else {
				content.style.maxHeight = content.scrollHeight + 'px';
				icon.textContent = '-';
			}
			// Recalculate the component height after toggling
			updateComponentMinHeight();
		});
	});
});
</script>

{% schema %}
{
	"name": "Accordion",
	"settings": [
		{
			"type": "richtext",
			"id": "heading",
			"label": "Overlay Heading",
			"default": "<h2>Your Journey: Shed Pounds &amp; Feel Great</h2>"
		},
		{
			"type": "image_picker",
			"id": "background_image",
			"label": "Background Image"
		},
		{
			"type": "select",
			"id": "layout",
			"label": "Layout",
			"default": "accordion",
			"options": [
				{ "value": "accordion", "label": "Accordion" },
				{ "value": "list", "label": "List" }
			]
		}
	],
	"blocks": [
		{
			"type": "accordion_item",
			"name": "Accordion Item",
			"settings": [
				{
					"type": "text",
					"id": "month_title",
					"label": "Month Title",
					"default": "Month 3"
				},
				{
					"type": "text",
					"id": "subtitle",
					"label": "Subtitle",
					"default": "Getting Started"
				},
				{
					"type": "textarea",
					"id": "description",
					"label": "Description",
					"default": "Take the product twice a day to establish a routine. Consistent use will help reduce cravings and build healthy habits."
				}
			]
		}
	],
	"max_blocks": 12,
	"presets": [
		{
			"name": "Accordion",
			"category": "Custom"
		}
	]
}
{% endschema %}
