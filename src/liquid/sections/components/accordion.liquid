{% comment %}
		SECTION: accordion-component.liquid
		Purpose: Displays a full-width background image with an overlay heading,
						 with either an Accordion or List layout based on user selection.
{% endcomment %}

<style>
#accordion-component {
	position: relative;
	width: 100%;
	min-height: 400px;
	padding: 4rem;
	border-radius: 15px;
	background-size: cover;
	background-position: center;
	{% if section.settings.background_image != blank %}
	background-image: url('{{ section.settings.background_image | image_url: width:2000 }}');
	{% endif %}
}

.image-overlay-heading {
	position: absolute;
	z-index: 2;
	color: #fff;
	left: 4rem;
	bottom: 4rem;
	max-width: 40%;
}

/* Accordion widget styling */
.accordion-widget {
	background: #fff;
	padding: 3rem;
	box-shadow: 0 2px 10px rgba(0,0,0,0.1);
	border-radius: 8px;
	max-width: 50%;
	justify-self: end;
}

.accordion-item {
	border-bottom: 1px solid #ccc;
	padding: 1rem 0;
}

.accordion-header {
	cursor: pointer;
	display: flex;
	justify-content: space-between;
	align-items: center;
	color: var(--primary-color);
	font-style: italic;
	font-weight: 100;
	padding: 0.5rem 0;
	transition: all 0.3s ease;
}

.accordion-header.active {
	color: var(--primary-color);
	opacity: 0.9;
}

.accordion-content {
	overflow: hidden;
	max-height: 0;
	transition: max-height 0.3s ease-out;
	margin-top: 0.5rem;
	opacity: 0;
}

.accordion-content.active {
	opacity: 1;
	transition: opacity 0.5s ease-in;
}

/* List layout styling */
.list-widget {
	background: #fff;
	box-shadow: 0 2px 10px rgba(0,0,0,0.1);
	border-radius: 8px;
	max-width: 50%;
	justify-self: end;
}

.list-item {
	display: flex;
	gap: 1rem;
	border-bottom: 1px solid #B7C8CC;
}

.list-item h5,
.list-item .content {
	padding: 1rem;
}

.list-item:last-child {
	border-bottom: none;
}

.list-item h5 {
	color: var(--primary-color);
	text-wrap-mode: nowrap;
}

/* Responsive adjustments */
@media (max-width: 768px) {
	#accordion-component {
		min-height: auto; /* Will be set dynamically */
		padding: 1.5rem;
		display: flex;
		flex-direction: column;
		gap: 1.5rem;
	}
	.image-overlay-heading {
		position: static;
		margin-bottom: 0;
		margin-top: 0;
		max-width: 100%;
		text-align: center;
		color: #fff;
	}
	.accordion-widget,
	.list-widget {
		max-width: 100%;
		margin: 0 auto;
		width: 100%;
	}
	.accordion-header {
		font-size: 1rem;
		padding: 0.75rem 0;
	}
	h5 {
		padding-bottom: 0 !important;
		margin-top: 0;
		margin-bottom: 0.5rem;
	}
	.content {
		padding-top: 0 !important;
	}
	.list-item {
		flex-direction: column;
		gap: 0;
		padding: 1rem;
	}
	.accordion-content,
	.list-item p {
		font-size: 16px;
	}
}

@media (max-width: 480px) {
	#accordion-component {
		padding: 1rem;
	}
	.accordion-widget {
		padding: 1.5rem;
	}
	.image-overlay-heading h2 {
		font-size: 1.75rem;
	}
}
</style>


<section class="accordion-component-section {{ section.settings.additional_classes }}">
	<div class="container">
		<div id="accordion-component">

			{% if section.settings.heading != blank %}
				<div class="image-overlay-heading">
					{{ section.settings.heading }}
				</div>
			{% endif %}

			{%- comment -%}
				We check the layout setting:
				- If "accordion", render the accordion widget + JS
				- If "list", render a simple list version
			{%- endcomment -%}

			{% if section.settings.layout == 'accordion' %}
				<!-- Accordion Widget -->
				<div class="accordion-widget">
					{% for block in section.blocks %}
						{% if block.type == 'accordion_item' %}
							<div class="accordion-item">
								<h5 class="accordion-header" aria-expanded="false" aria-controls="accordion-content-{{ forloop.index }}">
									<span style="font-weight: bold;">{{ block.settings.month_title }}</span>
									<span class="accordion-icon" style="margin-left: 1rem;" aria-hidden="true">+</span>
								</h5>
								<div id="accordion-content-{{ forloop.index }}" class="accordion-content" aria-hidden="true">
									{% if block.settings.subtitle != blank %}
										<h4>{{ block.settings.subtitle }}</h4>
									{% endif %}
									<p style="margin: 0;">{{ block.settings.description }}</p>
								</div>
							</div>
						{% endif %}
					{% endfor %}
				</div>
			{% elsif section.settings.layout == 'list' %}
				<!-- List Widget -->
				<div class="list-widget">
					{% for block in section.blocks %}
						{% if block.type == 'accordion_item' %}
							<div class="list-item">
								<h5 class="italic font-thin">{{ block.settings.month_title }}</h5>
								<div class="content">
									{% if block.settings.subtitle != blank %}
										<h4 class="text-[18px] font-bold">{{ block.settings.subtitle }}</h4>
									{% endif %}
									<p class="m-0 text-[16px]">{{ block.settings.description }}</p>
								</div>
							</div>
						{% endif %}
					{% endfor %}
				</div>
			{% endif %}
		</div>
	</div>
</section>

{% schema %}
{
	"name": "Accordion",
	"settings": [
		{
			"type": "richtext",
			"id": "heading",
			"label": "Overlay Heading",
			"default": "<h2>Your Journey: Shed Pounds &amp; Feel Great</h2>"
		},
		{
			"type": "image_picker",
			"id": "background_image",
			"label": "Background Image"
		},
		{
			"type": "select",
			"id": "layout",
			"label": "Layout",
			"default": "accordion",
			"options": [
				{ "value": "accordion", "label": "Accordion" },
				{ "value": "list", "label": "List" }
			]
		},
		{
			"type": "text",
			"id": "additional_classes",
			"label": "Additional Classes"
		}
	],
	"blocks": [
		{
			"type": "accordion_item",
			"name": "Accordion Item",
			"settings": [
				{
					"type": "text",
					"id": "month_title",
					"label": "Month Title",
					"default": "Month 3"
				},
				{
					"type": "text",
					"id": "subtitle",
					"label": "Subtitle",
					"default": "Getting Started"
				},
				{
					"type": "textarea",
					"id": "description",
					"label": "Description",
					"default": "Take the product twice a day to establish a routine. Consistent use will help reduce cravings and build healthy habits."
				}
			]
		}
	],
	"max_blocks": 12,
	"presets": [
		{
			"name": "Accordion",
			"category": "Custom"
		}
	]
}
{% endschema %}

{% if section.settings.layout == 'accordion' %}
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const accordionHeaders = document.querySelectorAll('.accordion-header');

    accordionHeaders.forEach(header => {
      header.addEventListener('click', function() {
        const content = this.nextElementSibling;
        const icon = this.querySelector('.accordion-icon');
        const isExpanded = this.getAttribute('aria-expanded') === 'true';

        // Toggle active class
        this.classList.toggle('active');
        content.classList.toggle('active');

        // Update ARIA attributes
        this.setAttribute('aria-expanded', !isExpanded);
        content.setAttribute('aria-hidden', isExpanded);

        // Toggle content visibility
        if (content.style.maxHeight) {
          content.style.maxHeight = null;
          icon.textContent = '+';
        } else {
          content.style.maxHeight = content.scrollHeight + 'px';
          icon.textContent = '-';
        }
      });
    });

    // Ensure proper initialization for keyboard navigation
    accordionHeaders.forEach(header => {
      header.setAttribute('tabindex', '0');

      // Handle keyboard interaction
      header.addEventListener('keydown', function(e) {
        if (e.key === 'Enter' || e.key === ' ') {
          e.preventDefault();
          this.click();
        }
      });
    });
  });
</script>
{% endif %}
