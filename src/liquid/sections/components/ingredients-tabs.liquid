{% comment %}
	INGREDIENT TABS SECTION
	This section replicates the "blue box" layout with tabs on the left and an image on the right.
{% endcomment %}

<section id="ingredient-tabs-section" class="ingredient-tabs-section">
	<div class="container">
		<!-- Blue Box Container -->
		<div class="blue-box">
			<div class="left-column">
				<!-- Tab Buttons -->
				<ul class="ingredient-tab-buttons no-style">
					{% for block in section.blocks %}
						<li class="tab-button"
							data-tab="tab-{{ block.id }}"
							role="button"
							aria-controls="tab-{{ block.id }}"
							aria-selected="false">
							{{ block.settings.ingredient_title }}
						</li>
					{% endfor %}
				</ul>

				<!-- Ingredient Text Container -->
				<div class="ingredient-text-container">
					{% for block in section.blocks %}
						<div class="ingredient-text" id="tab-{{ block.id }}">
							<h3>{{ block.settings.ingredient_title }}</h3>
							<p>{{ block.settings.ingredient_description }}</p>
						</div>
					{% endfor %}
				</div>
			</div>

			<!-- Image Area on the Right -->
			<div class="right-column">
				{% for block in section.blocks %}
					{% if block.settings.ingredient_image %}
						<div class="ingredient-image" id="img-{{ block.id }}">
							<img src="{{ block.settings.ingredient_image | img_url: 'master' }}"
								 alt="{{ block.settings.ingredient_title | escape }}" />
						</div>
					{% endif %}
				{% endfor %}
			</div>
		</div>
	</div>

	<style>
		/* ============= DESKTOP STYLES ============= */
		.blue-box {
			background-color: var(--primary-color);
			display: flex;
			flex-wrap: wrap;
			padding: 40px;
			gap: 20px;
			height: 580px;
			border-radius: 15px;
		}

		.left-column {
			flex: 1 1 300px;
			display: flex;
			flex-direction: column;
			justify-content: space-between;
		}

		/* Tab Buttons */
		.ingredient-tab-buttons {
			display: flex;
			flex-wrap: wrap;
			list-style: none;
			padding: 0;
			margin: 0 0 15px;
			gap: 10px;
		}

		.tab-button {
			background-color: var(--bg-color);
			color: var(--primary-color);
			padding: 14px 18px;
			border-radius: 5px;
			cursor: pointer;
			border: none;
			transition: background-color 0.2s, color 0.2s;
		}

		.tab-button:hover {
			background-color: white;
		}

		.tab-button.active {
			background-color: white;
			font-weight: bold;
		}

		/* Ingredient Text Container (Desktop) */
		.ingredient-text-container {
			position: relative;
			min-height: 200px; /* Adjust if needed */
		}

		/* Text Blocks: absolutely positioned & anchored at the bottom */
		.ingredient-text {
			position: absolute;
			bottom: 0;
			left: 0;
			width: 100%;
			opacity: 0;
			transform: translateY(20px);
			transition: opacity 0.5s ease, transform 0.5s ease;
			pointer-events: none;
		}

		.ingredient-text.visible {
			opacity: 1;
			transform: translateY(0);
			pointer-events: auto;
		}

		.ingredient-text h3 {
			margin: 0 0 8px;
			font-size: 28px;
			color: {{ page.metafields.custom.product.metafields.custom.secondary_color | default: "var(--orange)" }};
		}

		.ingredient-text p {
			color: white;
			line-height: 1.4em;
		}

		/* Right Column & Image (Desktop) */
		.right-column {
			flex: 1 1 300px;
			position: relative;
			display: flex;
			justify-content: center;
			align-items: center;
		}

		/* Position images absolutely so that only the active one shows */
		.ingredient-image {
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			opacity: 0;
			transform: scale(0.95);
			transition: opacity 0.5s ease, transform 0.5s ease;
			pointer-events: none;
		}

		.ingredient-image.visible {
			opacity: 1;
			transform: scale(1);
			pointer-events: auto;
		}

		.ingredient-image img {
			width: 100%;
			height: 100%;
			object-fit: cover;
			border-radius: 15px;
		}

		/* ============= MOBILE STYLES ============= */
		@media (max-width: 768px) {
			.blue-box {
				flex-direction: column;
				height: auto;
				gap: 0;
				padding: 5vw;
			}

			.tab-button {
				padding: 2vw;
				font-size: 4vw;
			}

			.left-column,
			.right-column {
				position: static;
				max-width: 100%;
				gap: 1rem;
				flex: unset;
			}

			/* For text, use a smooth max-height transition to accommodate dynamic content */
			.ingredient-text-container {
				position: static;
				min-height: auto;
			}

			.ingredient-text {
				position: static;
				opacity: 0;
				transform: translateY(20px);
				max-height: 0;
				overflow: hidden;
				transition: max-height 0.5s ease, opacity 0.5s ease, transform 0.5s ease;
			}

			.ingredient-text.visible {
				opacity: 1;
				transform: translateY(0);
				max-height: 500px; /* Adjust to a value high enough for your content */
				margin-bottom: 20px;
			}

			/* For images, prevent inactive ones from reserving space */
			.ingredient-image {
				display: none;
			}

			.ingredient-image.visible {
				display: block;
				opacity: 0;
				transform: scale(0.95);
				animation: fadeInImage 0.5s forwards;
			}

			@keyframes fadeInImage {
				to {
					opacity: 1;
					transform: scale(1);
				}
			}

			.ingredient-image img {
				width: 100%;
				height: auto;
				object-fit: cover;
				border-radius: 15px;
			}
		}
	</style>

	<!-- JavaScript for Tab Behavior with Animation -->
	<script>
		document.addEventListener('DOMContentLoaded', function() {
			const tabButtons = document.querySelectorAll('#ingredient-tabs-section .tab-button');
			const textBlocks = document.querySelectorAll('#ingredient-tabs-section .ingredient-text');
			const imageBlocks = document.querySelectorAll('#ingredient-tabs-section .ingredient-image');

			function showTab(tabId) {
				// Remove "visible" class from all text blocks and images
				textBlocks.forEach(text => text.classList.remove('visible'));
				imageBlocks.forEach(img => img.classList.remove('visible'));

				// Activate the corresponding text block
				const activeText = document.getElementById(tabId);
				if (activeText) {
					activeText.classList.add('visible');
				}

				// Activate the corresponding image block
				const imageId = 'img-' + tabId.split('tab-')[1];
				const activeImage = document.getElementById(imageId);
				if (activeImage) {
					activeImage.classList.add('visible');
				}
			}

			// Click handler for each tab button
			tabButtons.forEach(button => {
				button.addEventListener('click', () => {
					tabButtons.forEach(btn => btn.classList.remove('active'));
					button.classList.add('active');

					const targetTab = button.getAttribute('data-tab');
					showTab(targetTab);
				});
			});

			// Activate the first tab by default
			if (tabButtons.length > 0) {
				tabButtons[0].classList.add('active');
				showTab(tabButtons[0].getAttribute('data-tab'));
			}
		});
	</script>
</section>

{% schema %}
{
	"name": "Ingredients Tabs Section",
	"settings": [],
	"blocks": [
		{
			"type": "ingredient",
			"name": "Ingredient",
			"settings": [
				{
					"type": "text",
					"id": "ingredient_title",
					"label": "Ingredient Title"
				},
				{
					"type": "richtext",
					"id": "ingredient_description",
					"label": "Ingredient Description"
				},
				{
					"type": "image_picker",
					"id": "ingredient_image",
					"label": "Ingredient Image"
				}
			]
		}
	],
	"presets": [
		{
			"name": "Ingredients Tabs Section"
		}
	]
}
{% endschema %}
