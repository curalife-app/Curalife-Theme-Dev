{% assign tabs_amount = section.blocks.size %}

<section id="tab-box-{{ section.id }}" class="tabs-box-section admin-hidden text-center">
  <div class="container pt-4">
    <div class="tabbed-content tabs-side">
      <nav class="tabs min-w-[300px] xl:min-w-fit">
        {% for tab_block in section.blocks %}
          <div class="tab xl:min-w-[20vw]"><a href="#item-{{ forloop.index }}" {% if forloop.first %}class="active"{% endif %}>{{ tab_block.settings.tab_name }}</a></div>
        {% endfor %}
      </nav>

      <div class="content">
        {% for tab_block in section.blocks %}
          <div id="item-{{ forloop.index }}" class="item {% if forloop.first %}active always-active{% endif %}" data-title="{{ tab_block.settings.tab_name }}">
            <div class="item-content flex items-center">
              {% render 'responsive-image', img: tab_block.settings.tab_image, img_mobile: tab_block.settings.tab_image_mobile, classes: "min-w-1/2 max-w-1/2 mbl:max-w-full mbl:w-[90%] mbl:mt-[5vw]" %}

              <div class="content mbl:p-4 p-8">
                <p class="h5 font-bold text-[--blue]">How we help</p>
                <p class="mbl:text-[4.5vw]">{{ tab_block.settings.tab_description }}</p>
                <a href="{{ tab_block.settings.tab_link }}" class="font-bold underline">Learn More</a>
              </div>
            </div>
          </div>
        {% endfor %}
      </div>
    </div>
  </div>
</section>

<style>
  .tabs-box-section .tabbed-content {
    display: flex;
    overflow: hidden;
  }

  .tabs-box-section .tabbed-content .tabs {
    box-shadow: 0 25px 54px -35px rgb(0 0 0 / .25);
    background: white;
    z-index: 20;
    margin-bottom: unset;
  }

  .tabs-box-section .tabs .tab {
    text-align: center;
    height: calc(400px / {% if tabs_amount > 0 %}{{ tabs_amount }}{% else %}5{% endif %});
    background: var(--light-blue);
    border-radius: 10px;
    margin: 0px 10px 10px 0px;
  }

  .tabs-box-section .tabs .tab a {
    height: 100%;
    align-items: center;
    display: flex;
    justify-content: center;
    transition: all 0.2s;
    border-radius: 10px;
    font-size: 24px;
  }

  .tabs-box-section .tabs .tab a:hover,
  .tabs-box-section .tabs .tab a.active {
    color: white;
    background: var(--blue);
  }

  .tabs-box-section .item {
    position: relative;
    z-index: 10px;
  }

  .tabs-box-section .item.active .item-content {
    background-color: var(--light-blue);
    transition: opacity 0.8s ease-in-out;
  }

  .tabs-box-section .tabbed-content .item .item-content {
    opacity: 0;
    visibility: hidden;
    height: 0;
  }

  .tabs-box-section .tabbed-content .item.active .item-content {
    opacity: 1;
    visibility: visible;
    height: 440px;
    text-align: start;
    border-radius: 10px;
  }

  @media all and (min-width: 768px) {
    .tabs-box-section .item-content {
      transition: transform 0.8s ease-out, opacity 0.8s ease-out;
    }

    .tabs-box-section .item {
      transition: transform 0.8s ease-out;
      z-index: 1;
    }

    .tabs-box-section .item.active {
      z-index: 10;
    }

    /* Apply 3D acceleration for smoother animations */
    .tabs-box-section .item-content,
    .tabs-box-section .item,
    .tabs-box-section .arrow {
      transform: translate3d(0, 0, 0);
      backface-visibility: hidden;
      perspective: 1000px;
    }

    .tabs-box-section .item.active .item-content {
      padding-top: 0;
    }

    .tabs-box-section .tabbed-content .tabs .tab {
      display: inline-block;
    }

    .tabs-box-section .tabbed-content .tabs .tab a {
      display: flex;
    }

    .tabs-box-section .tabbed-content .item {
      min-height: 0;
    }
  }

  @media all and (max-width: 768px) {
    .tabs-box-section .tabbed-content .item.active .item-content {
      flex-direction: column;
      height: auto;
      text-align: center;
    }

    .tabs-box-section .tabbed-content .tabs .tab a {
      min-width: unset;
      width: 25vw;
      font-size: 4vw;
    }

    .tabs-box-section .tabs .tab a.active {
      font-weight: bold;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const tabBox = document.querySelector('#tab-box-{{ section.id }}');
    if (!tabBox) return;

    tabBox.addEventListener('click', function(event) {
      const target = event.target;
      if (target.tagName !== 'A') return;

      event.preventDefault();
      const href = target.getAttribute('href');
      const targetItem = document.querySelector(href);
      if (!targetItem) return;

      const tabs = tabBox.querySelectorAll('.tabs a');
      const items = tabBox.querySelectorAll('.item');

      tabs.forEach(tab => tab.classList.remove('active'));
      items.forEach(item => item.classList.remove('active'));

      target.classList.add('active');
      targetItem.classList.add('active');
    });
  });
</script>

{% schema %}
  {
    "name": "Tabs Box",
    "class": "tabs-box-section",
    "settings": [],
    "blocks": [
      {
        "name": "Tab",
        "type": "tab",
        "settings": [
          {
            "type": "text",
            "id": "tab_name",
            "label": "Tab Name"
          },
          {
            "type": "image_picker",
            "id": "tab_image",
            "label": "Tab Image"
          },
          {
            "type": "image_picker",
            "id": "tab_image_mobile",
            "label": "Tab Image - Mobile"
          },
          {
            "type": "text",
            "id": "tab_description",
            "label": "Tab Description"
          },
          {
            "type": "url",
            "id": "tab_link",
            "label": "Tab Link URL"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Tabs Box"
      }
    ]
  }
{% endschema %}