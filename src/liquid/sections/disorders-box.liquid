{% unless customer.email == 'ana@curalife.com' %}
	{%- liquid
		assign disorders_amount = section.blocks.size
		assign bg_color = collection.metafields.custom.collection_bg_color | default: '#F5F5F5'
	-%}

	<section id="disorders-box-section-{{ section.id }}" class="disorders-box-section text-center">
		<div class="container pt-4">
			<div class="tabbed-content tabs-side shadow-2xl">
				<nav class="tabs min-w-[300px] xl:min-w-fit">
					{%- for block in section.blocks -%}
						{%- if block.type == 'disorder' -%}
							<div class="tab xl:min-w-[20vw]" {{ block.shopify_attributes }}>
								<a
									href="#item-{{ forloop.index }}"
									{% if forloop.first %}
										class="active"
									{% endif %}>
									{{- block.settings.disorder_name | escape -}}
								</a>
							</div>
						{%- endif -%}
					{%- endfor -%}
				</nav>

				<div class="content">
					{%- for block in section.blocks -%}
						{%- if block.type == 'disorder' -%}
							<div
								id="item-{{ forloop.index }}"
								class="item {% if forload.first %}active always-active{% endif %} {{ block.settings.additional_css }}"
								data-title="{{ block.settings.disorder_name | escape }}"
								{{ block.shopify_attributes }}>
								<div class="item-content flex">
									<div class="content-column disorder-info">
										{%- if block.settings.disorder_image -%}
											{{ block.settings.disorder_image | image_url: width: 800 | image_tag: loading: 'lazy', alt: block.settings.disorder_name, class: 'disorder-image' }}
										{%- endif -%}
										<p>{{ block.settings.disorder_description | escape }}</p>
									</div>

									<div class="arrow" aria-hidden="true">
										<i class="fa-duotone fa-angles-right"></i>
									</div>

									<div class="content-column ingredient-info">
										<p class="h5 font-bold">{{ block.settings.solution_name }}</p>
										<p>{{ block.settings.solution_name | escape }}</p>
										{%- if block.settings.solution_image -%}
											{{ block.settings.solution_image | image_url: width: 600 | image_tag: loading: 'lazy', alt: block.settings.solution_name, class: 'solution-image' }}
										{%- endif -%}
										<p class="font-bold">{{ block.settings.solution_description | escape }}</p>
									</div>
								</div>
							</div>
						{%- endif -%}
					{%- endfor -%}
				</div>
			</div>
		</div>
	</section>

	<style>
		.disorders-box-section {
			padding: 50px 0 70px;
		}

		.disorders-box-section .tabbed-content {
			display: flex;
			align-items: center;
			border-radius: 20px;
			overflow: hidden;
		}

		.disorders-box-section .tabbed-content .content {
			background-color: {{ bg_color }};
		}

		.disorders-box-section .tabbed-content .tabs {
			box-shadow: 0 25px 54px -35px rgba(0, 0, 0, 0.25);
			background: white;
			display: none;
			z-index: 20;
			margin-bottom: 0;
		}

		.disorders-box-section .tabs .tab {
			text-align: center;
			height: calc(550px / {{ disorders_amount | default: 5 }});
			border-bottom: 1px solid #d2d2d2;
			padding-left: 0;
			margin-bottom: 0;
		}

		.disorders-box-section .tabs .tab a {
			height: 100%;
			align-items: center;
			display: flex;
			justify-content: center;
			transition: all 0.2s ease;
			font-size: 24px;
			text-decoration: none;
			color: inherit;
		}

		.disorders-box-section .tabs .tab a:hover,
		.disorders-box-section .tabs .tab a.active {
			box-shadow: 0 10px 30px -10px rgba(0, 0, 0, 0.1) inset;
			color: var(--blue);
			background: #fdfdfd;
		}

		.disorders-box-section .item {
			position: relative;
			z-index: 1;
		}

		.disorders-box-section .item::before {
			content: attr(data-title);
			border-top: 1px solid var(--blue);
			cursor: pointer;
			font-weight: bold;
			padding: 0.5em;
			display: block;
			text-align: center;
		}

		.disorders-box-section .item:first-child::before {
			border-top: none;
		}

		.disorders-box-section .item.active .item-content {
			transition: opacity 0.8s ease-in-out;
		}

		.disorders-box-section .arrow {
			width: 50px;
			height: 50px;
			font-size: 40px;
			border-radius: 50%;
			position: absolute;
			left: calc(50% - 25px);
			top: calc(50% - 25px);
			z-index: 10;
			background: white;
			display: flex;
			align-items: center;
			justify-content: center;
			opacity: 0;
			transition: opacity 0.5s ease-in-out;
		}

		.disorders-box-section .item.active .arrow {
			opacity: 1;
			transition-delay: 0.75s;
		}

		.disorders-box-section .item-content .content-column {
			width: 50%;
			text-align: center;
			padding: 20px;
			height: 550px;
		}

		.disorders-box-section .item-content .content-column.disorder-info {
			background-color: white;
			z-index: 9;
		}

		.disorders-box-section .disorder-image {
			height: 330px;
			margin-bottom: 20px;
			object-fit: contain;
			object-position: bottom;
			width: auto;
		}

		.disorders-box-section .item-content .content-column.ingredient-info {
			background-color: {{ bg_color }};
			box-shadow: inset 12px 1px 20px 0 rgba(0, 0, 0, 0.02);
			z-index: 8;
		}

		.disorders-box-section .solution-image {
			height: 250px;
			object-fit: contain;
			object-position: bottom;
			margin-bottom: 30px;
			width: auto;
		}

		.disorders-box-section .tabbed-content .item {
			min-height: 2em;
		}

		.disorders-box-section .tabbed-content .item .item-content {
			opacity: 0;
			visibility: hidden;
			height: 0;
		}

		.disorders-box-section .tabbed-content .item.active .item-content {
			opacity: 1;
			visibility: visible;
			height: auto;
		}

		@media screen and (min-width: 768px) {
			.disorders-box-section .item-content {
				transition: transform 0.8s ease-out, opacity 0.8s ease-out;
				will-change: transform, opacity;
			}

			.disorders-box-section .item {
				transition: transform 0.8s ease-out;
				z-index: 1;
			}

			.disorders-box-section .item.active {
				z-index: 10;
			}

			.disorders-box-section .arrow {
				transition: transform 0.5s ease-out, opacity 0.5s ease-out;
				will-change: transform, opacity;
			}

			.disorders-box-section .item .content-column {
				transform: translateX(-100%);
				opacity: 0;
				visibility: hidden;
				transition: transform 0.5s ease-in-out, opacity 0.5s ease-in-out, visibility 0.5s ease-in-out;
				will-change: transform, opacity, visibility;
			}

			.disorders-box-section .item.active .content-column {
				opacity: 1;
				transform: translateX(0);
				visibility: visible;
			}

			.disorders-box-section .item.active .content-column.ingredient-info {
				transition-delay: 0.25s;
			}

			.disorders-box-section .item.active .item-content {
				padding-top: 0;
			}

			.disorders-box-section .tabbed-content .tabs {
				display: block;
			}

			.disorders-box-section .tabbed-content .tabs .tab {
				display: inline-block;
			}

			.disorders-box-section .tabbed-content .tabs .tab:last-child {
				border-bottom: none;
			}

			.disorders-box-section .tabbed-content .item {
				min-height: 0;
			}

			.disorders-box-section .tabbed-content .item::before {
				display: none;
			}

			.disorders-box-section .tabbed-content.tabs-side .tabs .tab {
				display: block;
			}
		}

		@media screen and (max-width: 767px) {
			.disorders-box-section .tabbed-content {
				display: block;
				margin-left: 0 !important;
			}

			.disorders-box-section .item::after {
				content: "+";
				position: absolute;
				top: 5px;
				right: 2vw;
				border: 2px solid var(--blue);
				border-radius: 50%;
				width: 5vw;
				height: 5vw;
				font-size: 5vw;
				display: flex;
				align-items: center;
				justify-content: center;
				color: var(--blue);
			}

			.disorders-box-section .item.active::after {
				content: "-";
			}

			.disorders-box-section .tabbed-content .item.active .item-content {
				flex-direction: column;
			}

			.disorders-box-section .item-content .content-column {
				height: auto;
				width: 100%;
			}

			.disorders-box-section .arrow {
				display: none;
			}

			.disorders-box-section .solution-image,
			.disorders-box-section .disorder-image {
				height: auto;
				max-width: 100%;
			}
		}

		@media screen and (max-width: 500px) {
			.disorders-box-section .item::after {
				top: 4vw;
			}
		}
	</style>

	<script>
		document.addEventListener('DOMContentLoaded', function () {
			const section = document.getElementById('disorders-box-section-{{ section.id }}');
			if (!section) return;

			function handleTabClick(event) {
				event.preventDefault();
				const target = event.target.closest('a');
				if (!target) return;

				const targetId = target.getAttribute('href');
				const tabs = section.querySelectorAll('.tabs a');
				const items = section.querySelectorAll('.item');

				tabs.forEach(tab => tab.classList.remove('active'));
				items.forEach(item => item.classList.remove('active'));

				target.classList.add('active');
				section.querySelector(targetId)?.classList.add('active');
			}

			function handleItemClick(event) {
				const item = event.target.closest('.item');
				if (!item || window.innerWidth >= 768) return;

				const container = item.closest('.tabbed-content');
				const itemId = item.id;
				const tabs = container.querySelectorAll('.tabs a');
				const items = container.querySelectorAll('.item');

				tabs.forEach(tab => tab.classList.remove('active'));
				items.forEach(item => item.classList.remove('active'));

				item.classList.add('active');
				container.querySelector(`a[href="#${itemId}"]`)?.classList.add('active');

				item.scrollIntoView({ behavior: 'smooth', block: 'start' });
			}

			section.querySelector('.tabs')?.addEventListener('click', handleTabClick);
			section.querySelector('.content')?.addEventListener('click', handleItemClick);

			let resizeTimer;
			function handleResize() {
				clearTimeout(resizeTimer);
				resizeTimer = setTimeout(() => {
					const tabs = section.querySelector('.tabs');
					if (tabs) {
						tabs.classList.toggle('visible', window.getComputedStyle(tabs).display !== 'none');
					}
				}, 250);
			}

			window.addEventListener('resize', handleResize);
			handleResize();
		});
	</script>
{% endunless %}

{% schema %}
	{
		"name": "Disorders Box",
		"class": "disorders-box-section",
		"settings": [
			{
				"type": "header",
				"content": "Section Settings"
			}
		],
		"blocks": [
			{
				"name": "Disorder",
				"type": "disorder",
				"settings": [
					{
						"type": "text",
						"id": "disorder_name",
						"label": "Disorder Name",
						"info": "Name of the disorder to display"
					},
					{
						"type": "image_picker",
						"id": "disorder_image",
						"label": "Disorder Image",
						"info": "Recommended size: 800x800px"
					},
					{
						"type": "textarea",
						"id": "disorder_description",
						"label": "Disorder Description",
						"info": "Brief description of the disorder"
					},
					{
						"type": "text",
						"id": "solution_name",
						"label": "Solution Name",
						"info": "Name of the Curalife solution"
					},
					{
						"type": "image_picker",
						"id": "solution_image",
						"label": "Solution Image",
						"info": "Recommended size: 600x600px"
					},
					{
						"type": "textarea",
						"id": "solution_description",
						"label": "Solution Description",
						"info": "Brief description of how the solution helps"
					},
					{
						"type": "text",
						"id": "additional_css",
						"label": "Additional CSS Classes",
						"info": "Add additional CSS classes to the block"
					}
				]
			}
		],
		"presets": [
			{
				"name": "Disorders Box",
				"blocks": [
					{
						"type": "disorder"
					}
				]
			}
		]
	}
{% endschema %}
