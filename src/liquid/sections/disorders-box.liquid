{% unless customer.email == 'ana@curalife.com' %}

  {% assign disorders_amount = section.blocks.size %}

  <section id="disorders-box-section-{{ section.id }}" class="disorders-box-section text-center">
    <div class="container pt-4">
      <div class="tabbed-content tabs-side shadow-2xl">
        <nav class="tabs min-w-[300px] xl:min-w-fit">
          {% for disorder_block in section.blocks %}
            <div class="tab xl:min-w-[20vw]"><a href="#item-{{ forloop.index }}" {% if forloop.first %}class="active"{% endif %}>{{ disorder_block.settings.disorder_name }}</a></div>
          {% endfor %}
        </nav>

        <div class="content">
          {% for disorder_block in section.blocks %}
            <div id="item-{{ forloop.index }}" class="item {% if forloop.first %}active always-active{% endif %}" data-title="{{ disorder_block.settings.disorder_name }}">
              <div class="item-content flex">
                <div class="content-column disorder-info">
                  <img src="{{ disorder_block.settings.disorder_image.src | image_url }}" alt="{{ disorder_block.settings.disorder_name }}" loading="lazy">
                  <p>{{ disorder_block.settings.disorder_description  }}</p>
                </div>

                <div class="arrow"><i class="fa-duotone fa-angles-right"></i></div>

                <div class="content-column ingredient-info">
                  <p class="h5 font-bold">How Curalife Helps</p>
                  <p>{{ disorder_block.settings.solution_name }}</p>
                  <img src="{{ disorder_block.settings.solution_image.src | image_url }}" alt="{{ disorder_block.settings.solution_name }}" loading="lazy">
                  <p class="font-bold">{{ disorder_block.settings.solution_description }}</p>
                </div>
              </div>
            </div>
          {% endfor %}
        </div>
      </div>
    </div>
  </section>

  <style>
    .disorders-box-section {
      padding: 50px 0 70px;
    }

    .disorders-box-section .tabbed-content {
      display: flex;
      align-items: center;
      border-radius: 20px;
      overflow: hidden;
    }

    .disorders-box-section .tabbed-content .content {
      background-color: var(--light-blue);
      background-color: {{ collection.metafields.custom.collection_bg_color }};
    }

    .disorders-box-section .tabbed-content .tabs {
      box-shadow: 0 25px 54px -35px rgb(0 0 0 / .25);
      background: white;
      display: none;
      z-index: 20;
      margin-bottom: unset;
    }

    .disorders-box-section .tabs .tab {
      text-align: center;
      height: calc(550px / {% if disorders_amount > 0 %}{{ disorders_amount }}{% else %}5{% endif %});
      border-bottom: 1px solid #d2d2d2;
      padding-left: unset;
      margin-bottom: unset;
    }

    .disorders-box-section .tabs .tab a {
      height: 100%;
      align-items: center;
      display: flex;
      justify-content: center;
      transition: all 0.2s;
      font-size: 24px;
    }

    .disorders-box-section .tabs .tab a:hover,
    .disorders-box-section .tabs .tab a.active {
      box-shadow: 0px 10px 30px -10px rgba(0,0,0,0.1) inset;
      color: var(--blue);
      background: #fdfdfd;
    }

    .disorders-box-section .item {
      position: relative;
      z-index: 10px;
    }

    .disorders-box-section .item::before {
      content: attr(data-title);
      border-top: 1px solid var(--blue);
      cursor: pointer;
      font-weight: bold;
      padding: 0.5em;
      display: block;
      text-align: center;
    }

    .disorders-box-section .item:first-child::before {
      border-top: unset;
    }

    .disorders-box-section .item.active .item-content {
      transition: opacity 0.8s ease-in-out;
    }

    .disorders-box-section .arrow {
      width: 50px;
      height: 50px;
      font-size: 40px;
      border-radius: 50%;
      position: absolute;
      left: calc(50% - 25px);
      top: calc(50% - 25px);
      z-index: 10;
      background: white;
      display: flex;
      align-items: center;
      justify-content: center;
      opacity: 0;
      transition: opacity 0.5s ease-in-out;
    }

    .disorders-box-section .item.active .arrow {
      opacity: 1;
      transition-delay: 0.75s;
    }

    .disorders-box-section .item-content .content-column {
      width: 50%;
      text-align: center;
      padding: 20px;
      height: 550px;
    }

    .disorders-box-section .item-content .content-column.disorder-info {
      background-color: white;
      z-index: 9;
    }

    .disorders-box-section .item-content .content-column.disorder-info img {
      height: 330px;
      margin-bottom: 20px;
      object-fit: contain;
      object-position: bottom;
    }

    .disorders-box-section .item-content .content-column.ingredient-info {
      background-color: var(--light-blue);
      background-color: {{ collection.metafields.custom.collection_bg_color }};
      box-shadow: inset 12px 1px 20px 0px rgb(0 0 0 / .02);
      z-index: 8;
    }

    .disorders-box-section .item-content .content-column.ingredient-info img {
      height: 250px;
      object-fit: contain;
      object-position: bottom;
      margin-bottom: 30px;
    }

    .disorders-box-section .tabbed-content .item {
      min-height: 2em;
    }

    .disorders-box-section .tabbed-content .item .item-content {
      opacity: 0;
      visibility: hidden;
      height: 0;
    }

    .disorders-box-section .tabbed-content .item.active .item-content {
      opacity: 1;
      visibility: visible;
      height: auto;
    }

    @media all and (min-width: 768px) {
      .disorders-box-section .item-content {
        transition: transform 0.8s ease-out, opacity 0.8s ease-out;
      }

      .disorders-box-section .item {
        transition: transform 0.8s ease-out;
        z-index: 1;
      }

      .disorders-box-section .item.active {
        z-index: 10;
      }

      .disorders-box-section .arrow {
        transition: transform 0.5s ease-out, opacity 0.5s ease-out;
      }

      /* Apply 3D acceleration for smoother animations */
      .disorders-box-section .item-content,
      .disorders-box-section .item,
      .disorders-box-section .arrow {
        transform: translate3d(0, 0, 0);
        backface-visibility: hidden;
        perspective: 1000px;
      }

      .disorders-box-section .item .content-column {
        transform: translateX(-100%);
        opacity: 0;
        visibility: hidden;
        transition: transform 0.5s ease-in-out, opacity 0.5s ease-in-out, visibility 0.5s ease-in-out;
      }

      .disorders-box-section .item.active .content-column {
        opacity: 1;
        transform: translateX(0);
        visibility: visible;
      }

      .disorders-box-section .item.active .content-column.ingredient-info {
        transition-delay: 0.25s;
      }

      .disorders-box-section .item.active .item-content {
        padding-top: 0;
      }

      .disorders-box-section .tabbed-content .tabs {
        display: block;
      }

      .disorders-box-section .tabbed-content .tabs .tab {
        display: inline-block;
      }

      .disorders-box-section .tabbed-content .tabs .tab:last-child {
        border-bottom: unset;
      }

      .disorders-box-section .tabbed-content .tabs .tab a {
        display: flex;
      }

      .disorders-box-section .tabbed-content .item {
        min-height: 0;
      }

      .disorders-box-section .tabbed-content .item::before {
        display: none;
      }

      .disorders-box-section .tabbed-content.tabs-side .tabs .tab {
        display: block;
      }
    }

    @media all and (max-width: 768px) {
      .disorders-box-section .tabbed-content {
        display: block;
        margin-left: unset !important;
      }

      .disorders-box-section .item::after {
        content: "+";
        font-size: 30px;
        position: absolute;
        top: 5px;
        right: 2vw;
        border: 2px solid var(--blue);
        border-radius: 50%;
        width: 5vw;
        height: 5vw;
        font-size: 5vw;
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--blue);
      }

      .disorders-box-section .item.active::after {
        content: "-";
      }

      .disorders-box-section .tabbed-content .item.active .item-content {
        flex-direction: column;
      }

      .disorders-box-section .item-content .content-column {
        height: unset;
      }

      .disorders-box-section .arrow {
        display: none;
      }

      .disorders-box-section .tabbed-content .item.active .item-content .content-column {
        width: 100%
      }

      .disorders-box-section .item-content .content-column.ingredient-info img {
        height: unset;
      }
    }

    @media screen and (max-width: 500px) {
      .disorders-box-section .item::after {
        top: 4vw;
      }
    }
  </style>

  <script>
    $(document).ready(function() {
      var resizeTimer;

      $('#disorders-box-section-{{ section.id }}').on('click', '.tabs a', function(event) {
        event.preventDefault();
        var $this = $(this),
            target = $this.attr('href'),
            $tabs = $this.closest('.tabs'),
            $items = $this.closest('#disorders-box-section-{{ section.id }}').find('.item');

        $tabs.find('a').removeClass('active');
        $items.removeClass('active');
        $this.addClass('active');
        $(target).addClass('active');
      });

      $('#disorders-box-section-{{ section.id }}').on('click', '.item', function() {
        var $this = $(this),
            container = $this.closest('.tabbed-content'),
            currId = $this.attr('id'),
            $tabs = container.find('.tabs a'),
            $items = container.find('.item');
        $tabs.removeClass('active');
        $items.removeClass('active');
        $this.addClass('active');
        container.find('.tabs a[href$="#' + currId + '"]').addClass('active');
        $('html, body').animate({
            scrollTop: $this.offset().top
        }, 200);
      });

      function tabControl() {
        var tabs = $('#disorders-box-section-{{ section.id }} .tabbed-content').find('.tabs');
        tabs.toggleClass('visible', tabs.is(':visible'));
      }

      $(window).on('resize', function() {
        clearTimeout(resizeTimer);
        resizeTimer = setTimeout(tabControl, 250);
      });

      tabControl();
    });
  </script>
{% endunless %}

{% schema %}
  {
    "name": "Disorders Box",
    "class": "disorers-box-section",
    "settings": [],
    "blocks": [
      {
        "name": "Disorder",
        "type": "disorder",
        "settings": [
          {
            "type": "text",
            "id": "disorder_name",
            "label": "Disorder Name"
          },
          {
            "type": "image_picker",
            "id": "disorder_image",
            "label": "Disorder Image"
          },
          {
            "type": "text",
            "id": "disorder_description",
            "label": "Disorder Description"
          },
          {
            "type": "text",
            "id": "solution_name",
            "label": "Solution Name"
          },
          {
            "type": "image_picker",
            "id": "solution_image",
            "label": "Solution Image"
          },
          {
            "type": "text",
            "id": "solution_description",
            "label": "Solution Description"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Disorders Box"
      }
    ]
  }
{% endschema %}