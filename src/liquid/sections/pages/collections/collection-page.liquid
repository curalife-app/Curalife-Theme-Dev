{% if collection.handle == 'all' %}{% assign heroTitle = 'Explore Our Products' %}{% else %}{% assign heroTitle = collection.title %}{% endif %}

<div class="collection-page">
  <div class="collection-hero">
    <div class="container flex items-center justify-between h-full">
      <img class="left-img desktop" src="{{ collection.metafields.hero.left_img | image_url }}" alt="{{ collection.metafields.hero.left_img.alt | escape }}" />

      <div class="titles w-f flex flex-col text-center">
        <h1>{{ heroTitle }}</h1>
        <div class="subtitle">{{ collection.metafields.hero.subtitle }}</div>
      </div>

      <img class="right-img desktop" src="{{ collection.metafields.hero.right_img | image_url }}" alt="{{ collection.metafields.hero.right_img.alt | escape }}" />
    </div>
  </div>

  <section class="collection-page-wrapper">
    <div class="mbl:flex-col container flex gap-4">
      {% unless customer.b2b? %}
        <div class="collections-menu side-menu desktop">
					{% if customer.email contains 'yotam' %}
						<div class="menu-item"><a href="/collections/black-friday">Black Friday</a></div>
					{% endif %}
          {% for link in linklists.collections-menu.links %}
            <div class="menu-item {% if link.active %}active{% endif %}"><a href="{{ link.url }}">{{ link.title }}</a></div>
          {% endfor %}
        </div>


        <div class="account-menu-mobile-dropdown mobile w-full">
          <select id="mobile-dropdown">
            {% for link in linklists.collections-menu.links %}
              <option value="{{ link.url }}" {% if link.active %}selected{% endif %}>{{ link.title }}</option>
            {% endfor %}
          </select>
        </div>
      {% endunless %}

      {% render 'collection', collection_handle: collection.handle, isDescription: false, isNoTitle: true, isNoPrices: false, isCentered: customer.b2b?, isNoBundles: false, isLastCollectionRender: isLastCollectionRender %}
    </div>
  </section>
</div>

{% if customer.email == 'yotam@curalife.com' and false %}
  <div class="container">
    <div id="map" style="width: 100%; height: 600px;"></div>
  </div>
  <script>
    var data = '{{ 'leaflet_data.csv' | asset_url }}';
    var lines = data.split("\n");
    var markers = [];

    for (var i = 1; i < lines.length; i++) {
        var row = lines[i].split(",");
        var marker = L.marker([parseFloat(row[1]), parseFloat(row[2])])
            .bindPopup(row[0]);
        markers.push(marker);
    }

    // const map = L.map('map').setView([32.07590875446296, 34.81429050162211], 13);

    // const tiles = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
    //   maxZoom: 19,
    //   attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
    // }).addTo(map);

    // const marker = L.marker([32.07590875446296, 34.81429050162211]).addTo(map)
    //   .bindPopup('<b>Hello world!</b><br />I am a popup.').openPopup();

    // const popup = L.popup()
    //   .setLatLng([51.513, -0.09])
    //   .setContent('I am a standalone popup.')
    //   .openOn(map);

    // map.on('click', onMapClick);

  </script>
{% endif %}

<script>
  document.getElementById("mobile-dropdown").addEventListener('change', event => {
    window.location.href = event.target.value;
  });
</script>

<style>
  .breadcrumbs {
    position: relative;
    top: 150px;
  }

  #mobile-dropdown {
    width: 100%;
    background: var(--light-blue);
    border: 2px solid var(--blue);
    border-radius: 10px;
    color: var(--blue);
    text-align: center;
    padding: 10px;
    font-weight: bold;
    box-shadow: 1px 4px 18px -16px rgba(0,0,0,0.75);
  }

  .collection-hero {
    background-color: {{ collection.metafields.hero.bg_color }};
    color: {{ collection.metafields.hero.text_color }};
    height: 150px;
    align-content: center;

    .titles {
      width: -webkit-fill-available;

      h1 {
        color: inherit;
        font-size: 36px;
        margin-bottom: 0.25rem;
      }

      .subtitle {
        font-size: 20px;
      }
    }
  }
</style>

{% schema %}
  {
      "name": "Collection Page",
      "disabled_on": {
        "groups": [
          "header",
          "footer"
        ]
      },
      "settings": [],
      "presets": [
      {
        "name": "Collection Page"
      }
    ]
  }
  {% endschema %}