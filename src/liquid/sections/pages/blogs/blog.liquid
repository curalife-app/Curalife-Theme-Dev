{% assign showOnTag = blog.metafields.custom.show_on_tag %}
{% if showOnTag != blank %}
  {% if customer %}
    {% if customer.tags contains showOnTag %}
      {% assign hideForTag = false %}
    {% else %}
      {% assign hideForTag = true %}
    {% endif %}
  {% else %}
    {% assign hideForTag = true %}
  {% endif %}
{% endif %}

{% if blog.metafields.custom.is_show_to_p1 %}
  {% if customer %}
    {% if customer.orders_count > 0 %}
      {% assign hideForTag = false %}
    {% else %}
      {% assign hideForTag = true %}
    {% endif %}
  {% else %}
    {% assign hideForTag = true %}
  {% endif %}
{% endif %}

{% if hideForTag != true or true %}
  {% assign filters_data = blog.metafields.custom.filters %}

  <section class="blog-page pt-0">
    <div class="container">
      {% paginate blog.articles by 9 %}
        <div id="dynamic-filters" class="flex flex-wrap items-center justify-center gap-4 min-h-[100px]" data-active="{{ current_tags.first | replace: ' ', '-' | downcase }}"></div>

        <div id="articles-container" class="article-list">
          {% for article in blog.articles %}
            {% if forloop.index <= 2 %}
              {% assign desc = true %}
            {% else %}
              {% assign desc = false %}
            {% endif %}
            {% render 'blog-card-grid', article: article, description: desc, blog_categories: blog_categories %}
          {% endfor %}
        </div>

        {%- if paginate.pages > 1 -%}
        {% assign totalPage = paginate.pages %}
            {% render 'blog-pagination', paginate: paginate, totalPage: totalPage %}
          {%- endif -%}
        {% endpaginate %}
    </div>
  </div>

  {% render 'newsletter-form' %}

  {% if filters_data %}
    {% assign allTags = '' %}
    {% for tag in blog.all_tags %}
      {% assign tag = tag | downcase %}
      {% assign allTags = allTags | append: tag | append: ',' %}
    {% endfor %}
    {% assign allTags = allTags | remove: "'" %}

    <script>
      const toTitleCase = str =>
        str.toLowerCase().split(' ')
          .map(word => word[0].toUpperCase() + word.slice(1))
          .join(' ');

      const generateFilterHTML = (filtersData, allTags) => {
        const normalizedTags = new Set(
          allTags.toLowerCase().split(',').map(tag => tag.trim().replace(/\s+/g, '-'))
        );

        return Object.entries(filtersData).reduce((html, [key, values]) => {
          const titleHTML = key ? `<h4>${toTitleCase(key.replace('-', ' '))}</h4>` : '';
          const listItems = values.reduce((listHtml, value) => {
            const normalizedValue = value.toLowerCase().replace(/\s+/g, '-');
            return `${listHtml}<div class="tab"><a href="${normalizedTags.has(normalizedValue) ? `/blogs/{{ blog.handle }}/tagged/${normalizedValue}` : '#'}"
                    data-category="${key}" data-value="${normalizedValue}"
                    class="${normalizedTags.has(normalizedValue) ? '' : 'disabled'}">${toTitleCase(value.replace('-', ' '))}</a></div>`;
          }, '');
          return `${html}<div class="filter-group p-4">${titleHTML}<div class="tabs">${listItems}</div></div>`;
        }, '');
      };

      document.addEventListener("DOMContentLoaded", () => {
        try {
          const filtersData = JSON.parse('{{ filters_data }}');
          const dynamicFilters = document.getElementById("dynamic-filters");
          dynamicFilters.innerHTML = generateFilterHTML(filtersData, "{{ allTags }}");

          const activeValue = dynamicFilters.dataset.active;
          const activeElement = dynamicFilters.querySelector(`[data-value="${activeValue}"]`);
          if (activeElement) {
            activeElement.parentElement.classList.add('active');
          }
        } catch (error) {
          console.error('Error generating filters:', error);
        }
      });
    </script>
  {% endif %}

  <style>
    #dynamic-filters .filter-group .tabs {
      display: flex;
      gap: 1rem;
      justify-content: center;
    }

    #dynamic-filters .filter-group .tabs .tab {
      border-radius: 30px;
      border: 1px solid var(--blue);
      padding: 0.5rem 1rem;
      margin-bottom: unset;
    }

    #dynamic-filters .filter-group .tabs .tab::before {
      content: "";
    }

    #dynamic-filters .filter-group .tabs .tab.active {
      background: var(--blue);
      color: white;
    }

    #dynamic-filters .filter-group .tabs .tab:has(.disabled) {
      border-color: #dedede;
      pointer-events: none;
      cursor: default;
    }

    @media screen and (max-width: 768px) {
      #dynamic-filters .filter-group .tabs {
        padding: unset;
        font-size: 3vw;
        flex-wrap: wrap;
      }
    }
  </style>

  <style>
    .article-list {
        display: flex;
        justify-content: center;
        flex-wrap: wrap;
    }

    .article-card {
        width: 30%;
        display: flex;
        flex-direction: column;
        padding: 10px;
    }

    .article-card a.admin-edit-link {
      position: absolute;
      right: 20px;
      top: 20px;
      background: white;
      padding: 5px;
      border-radius: 50%;
      width: 40px;
      height: 40px;
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 10;
    }

    .article-card .picture {
      overflow: hidden;
      position: relative;
      border-radius: 5px;
      width: 331px;
      height: 275px;

      @media screen and (max-width: 768px) {
        width: 100%;
        height: unset;
      }
    }

    .article-card .picture:before {
        content: "";
        display: block;
        padding-bottom: 83%;
        pointer-events: none;
    }

    .article-card .picture .main-link {
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: 3;
    }
    .article-card .picture img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        position: absolute;
        top: 0;
        left: 0;
        will-change: transform;
        transition: transform .7s ease-in-out;
    }

    .article-card .picture .category {
        max-width: 100%;
        padding: 17px 20px;
        background: var(--blue);
        border-radius: 0 2px 2px 0;
        position: absolute;
        left: 0;
        bottom: 20px;
        z-index: 3;
        min-width:140px;
        text-align: center;;
    }
    .article-card .picture .category p {
        margin: 0;
        font-size: 16px;
        color: #fff;
    }
    .article-card .info {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        flex: 1;
    }

    .article-card .info .main-info .title {
        padding-top: 15px;
    }
    .article-card .info .main-info .title h3 {
        font-size: 22px;
          line-height: 1.2;
          margin:0;
          color: black;
    }

    .article-card .info .main-info .offer p {
        margin: 0;
        font-weight: 400;
        font-size: 18px;
        line-height: 1.33;
        color: var(--dark);
    }

    .article-card .info .main-info .description {
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
        display: none;
    }
    .article-card .info .main-info .description p {
        margin: 0;
        font-weight: 400;
        font-size: 18px;
        line-height: 1.57;
        color: var(--dark);
    }

      .article-card .info .article-author {
          display: flex;
          align-items: center;
      }
    .article-author .photo {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        overflow: hidden;
    }
    .article-author .photo img {
        width: 100%;
        height: 100%;
        -o-object-fit: cover;
        object-fit: cover;
    }
    .article-author .details {
        width: calc(100% - 60px);
        color: grey !important;
    }
    .article-author .details h4 {
        margin: 0;
        font-weight: 400;
        font-size: 16px;
        line-height: 1.5;
    }

    @media screen and (max-width: 768px) {
      .blog-page {
          padding-bottom: 100px;
      }

      .article-card {
          width: 100%;
      }

      .article-list .article-card .picture:before {
          padding-bottom: 67.7%;
      }

      .article-card .info .main-info .title {
          padding-top: 12px;
      }

      .article-card .info .article-author {
          padding-top: 22px;
          display: none;
      }
      .article-author .details {
          width: calc(100% - 60px);
          padding-left: 20px;
      }
      .article-author .details h4 {
          font-size: 16px;
      }
    }

  </style>
{% else %}
  <div class="container">
    <div class="article-list">
      <div class="article-card">
        <div class="info">
          <div class="main-info">
            <div class="title">
              <h3 class="text-center">No Articles Available</h3>
            </div>
          </div>
        </div>
      </div>
    </div>
{% endif %}

{% schema %}
  {
    "name": "Blog",
    "settings": [
      {
        "type": "text",
        "id": "blg_des",
        "label": "Blog Description",
        "default": "Enter Blog Description"
      },
      {
        "type": "image_picker",
        "id": "authr_blgimg",
        "label": "Select Author Image"
      }
    ]
  }
{% endschema %}