<section class="pb-0">
  <div class="container text-center">
    <div class="h2 text-black">Your current weight is <span id="wgt"></span>lbs</div>

    <div class="goals-wrapper bg-[#FFF1E8] rounded-md p-8 mb-4">
      <h5 class="text-black">Your Goals:</h5>
      <ul class="goals m-0" id="goals">
        <li class="goal">Weight loss <span id="wls"></span>lbs</li>
      </ul>
    </div>

    <p><b>That's an within-reach goal,</b><br>and with us by your side, you can achieve it without exhausting routines.</p>

    <div class="h2 text-black">You can reach at least <span id="can"></span>lbs in 3 months with Curaslim</div>

  </div>
</section>

<style>
  article ul li, section ul li {
    margin-bottom: .25em;
    padding-left: 1.5em;

    &:before {
      top: 0.5rem;
    }
  }
</style>

<script>
  function processGeneralUrlParams() {
      console.log("Processing general URL parameters...");
      const urlParams = new URLSearchParams(window.location.search);

      urlParams.forEach((value, key) => {
          console.log(`Processing parameter: ${key} with value: ${value}`);
          const element = document.getElementById(key);
          if (element) {
              console.log(`Found element with ID: ${key}. Setting text content to: ${value}`);
              element.textContent = value;
          } else {
              console.warn(`No element found with ID: ${key}`);
          }
      });

      console.log("Finished processing general URL parameters.");
  }

  function processCanParam() {
      console.log("Processing 'can' URL parameter...");
      const urlParams = new URLSearchParams(window.location.search);
      const canValue = urlParams.get('wgt');

      if (canValue !== null) {
          const element = document.getElementById('can');
          if (element) {
              const processedValue = parseFloat(canValue) * 0.75;
              console.log(`Original value of 'wgt': ${canValue}, Processed value: ${processedValue}`);
              element.textContent = processedValue.toFixed(0); // Adjust to 2 decimal places
          } else {
              console.warn(`No element found with ID: can`);
          }
      }

      console.log("Finished processing 'can' URL parameter.");
  }

  function processGoalsParam() {
      console.log("Processing 'gls' URL parameter...");
      const urlParams = new URLSearchParams(window.location.search);
      const goalsValue = urlParams.get('gls');

      if (goalsValue !== null) {
          const goalsElement = document.getElementById('goals');
          const goalsArray = goalsValue.split(','); // Assuming goals are comma-separated

          goalsArray.forEach(goal => {
              const listItem = document.createElement('li');
              listItem.className = 'goal';
              listItem.textContent = goal.trim();
              goalsElement.appendChild(listItem);
          });

          console.log(`Added goals: ${goalsArray}`);
      } else {
          console.warn(`No 'gls' parameter found in the URL.`);
      }

      console.log("Finished processing 'gls' URL parameter.");
  }

  // Immediately run the functions
  processGeneralUrlParams();
  processCanParam();
  processGoalsParam();
</script>

{% schema %}
  {
    "name": "Quiz Results",
    "class": "quiz-results-section",
    "settings": [

    ],
    "presets": [
      {
        "name": "Quiz Results"
      }
    ]
  }
{% endschema %}