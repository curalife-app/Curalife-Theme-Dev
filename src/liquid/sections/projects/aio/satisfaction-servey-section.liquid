
<section class="satisfaction-survey">
  <div class="satisfaction-survey-bg">
    <div class="container">
      <div class="sub-title"><h3>{{ section.settings.title }}</h3></div>
      
      <div class="success-list">
        <ul>
          {% for block in section.blocks %}
            <li>
              <div class="percentage">
                <p><span data-count="{{ block.settings.data_count_text }}">0</span>%</p>
              </div>

              <div class="title">
                <h4>{{ block.settings.people_text }}</h4>
              </div>

              <div class="line">
                <span></span>
              </div>
            </li>
          {% endfor %}
        </ul>
      </div>
    </div>
  </div>
</section>

<style>
  .satisfaction-survey .satisfaction-survey-bg {
    position: relative;
    padding-top: 2rem;
    padding-bottom: 10rem;
    overflow: hidden
  }

  .satisfaction-survey .sub-title {
    padding-bottom: 3.5rem
  }

  .satisfaction-survey .survey-button {
    width: 100%;
    max-width: 100%;
    text-align: center
  }

  .satisfaction-survey .success-list {
    max-width: 49rem;
    margin: 0 auto
  }

  .satisfaction-survey .success-list ul li {
    padding-left: 10rem;
    margin-bottom: 3rem;
    position: relative;
    z-index: 1
  }

  .satisfaction-survey .success-list ul li:last-child {
    margin-bottom: 0
  }

  .satisfaction-survey .success-list ul li .percentage {
    display: flex;
    align-items: center;
    position: absolute;
    top: .5rem;
    left: 0;
    bottom: 0;
    overflow: hidden
  }

  .satisfaction-survey .success-list ul li .percentage p {
    margin: 0;
    font-size: 2.8rem;
  }

  .satisfaction-survey .success-list ul li .title h4 {
    margin-bottom: 0.5rem;
    font-weight: 500;
    font-size: 1.5rem;
  }

  .satisfaction-survey .success-list ul li .line {
    height: 1.4rem;
    position: relative;
    overflow: hidden
  }

  .satisfaction-survey .success-list ul li .line span {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    background: {{ section.settings.servey_background }};
    border-radius: 0 1rem 1rem 0;
    transition: width 1s ease-in-out;
  }

  @media screen and (max-width: 768px) {
    .satisfaction-survey .satisfaction-survey-bg {
      padding-top: 0
    }

    .satisfaction-survey {
      margin-top: .6875rem;
    }

    .satisfaction-survey .success-list ul li .percentage p {
      font-size: 1.25rem;
    }

    .satisfaction-survey .success-list ul li .percentage {
      position: static;
      min-width: 4.375rem;
    }

    .satisfaction-survey .success-list ul li {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      padding-left: .8125rem;
      margin-bottom: 2.4375rem
    }

    .satisfaction-survey .success-list ul li .title {
      padding-bottom: 0
    }

    .satisfaction-survey .success-list ul li .title h4 {
      font-size: .875rem;
      font-weight: 400
    }

    .satisfaction-survey .success-list ul li .line {
      width: 100%;
      height: 1rem;
      margin-top: .375rem
    }

    .satisfaction-survey .success-list {
      margin-right: -.9375rem
    }

    .satisfaction-survey .sub-title {
      padding-bottom: 1.375rem
    }

    .satisfaction-survey .satisfaction-survey-bg {
      padding-bottom: 0.375rem;
    } 
  }
</style>

<script>
  const counters = document.querySelectorAll('.satisfaction-survey .success-list ul li .percentage p span');
  const countingSpeed = 6000;
  let animateCounters = true;

  window.addEventListener('scroll', (e) => {
    let last_known_scroll_position = window.scrollY;
      if (counters && animateCounters && window.innerHeight > document.querySelector('.satisfaction-survey').getBoundingClientRect().top && window.innerHeight < document.querySelector('.satisfaction-survey').getBoundingClientRect().top + document.querySelector('.satisfaction-survey').getBoundingClientRect().top) {
      animateCounters = false;
      counters.forEach(counter => {
        const animate = () => {
          const value = parseFloat(+counter.getAttribute('data-count'));
          const dataLine = counter.closest('li').querySelector('.line span');
          const data = +counter.innerText;
          const time = value / countingSpeed;

          if (data < value) {
            counter.innerText = Math.ceil(data + time);
            dataLine.style.width = Math.ceil(data + time) + '%';
            setTimeout(animate, 0.1);
          } else {
            counter.innerText = value;
            dataLine.style.width = value + '%';
          }
        }
        animate();
      });
    }
  });
</script>

{% schema %}
{
  "name": "Satisfaction Servey",
  "tag": "section",
  "class": "satisfaction no-padding",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "color",
      "id": "bg_color",
      "label": "Background Color"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title"
    },
    {
      "type": "color_background",
      "id": "servey_background",
      "label": "Servey Background",
      "default": "linear-gradient(90.05deg ,rgba(238,208,195,.5) 0%,rgba(208,125,91,.5) 100%)"
    }
  ],
  "blocks": [
    {
      "type": "slide",
      "name": "Slide",
      "settings": [
        {
          "type": "text",
          "id": "data_count_text",
          "label": "Data Count Text"
        },
        {
          "type": "text",
          "id": "people_text",
          "label": "People Text"
        }      
      ]
    }
  ],
  "presets": [
    {
      "name": "Satisfaction Servey"
    }
  ]
}
{% endschema %}