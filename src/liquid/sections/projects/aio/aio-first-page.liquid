{% layout 'theme.lps' %}


{% comment %} {% render 'aio-first-page-hero-section', isLogo: true %} {% endcomment %}
{% comment %} {% render 'partnerships-featured' %} {% endcomment %}
{% comment %} {% render 'aio-first-page-meet-curalin', meetCuralins: meetCuralins %} {% endcomment %}
{% comment %} {% render 'aio-first-page-life-changes' %} {% endcomment %}
{% comment %} {% render 'aio-first-page-body-formula' %} {% endcomment %}
{% comment %} {% render 'aio-first-page-real-changes', realChanges: realChanges %} {% endcomment %}
{% comment %} {% render 'aio-first-page-trusted-doctors', doctors: doctors %} {% endcomment %}
{% comment %} {% render 'aio-first-page-testimonials-section' %} {% endcomment %}
{% render 'aio-first-page-natural-ingredients', natural_ingredients: natural_ingredients %}
{% render 'aio-first-page-cta-button' %}
{% render 'aio-first-page-why-curalife' %}
{% render 'aio-first-page-supported-community' %}
{% render 'aio-first-page-satisfaction-survey' %}
{% comment %} {% render 'faq-section', faqItems: faqItems, isAllowOneOpen: true, titleVersion: "complex" %} {% endcomment %}

<script>
  function LinkToProduct(element, url) {
    woopra.track('Click CTA', {
      button_title: element.innerText
    });

    window.location.href = url + window.location.search;
  }
</script>

// This code replaces the product name in the URL of all links on the page with the product name in the URL of the page. This means that when a user clicks on a link, they will be taken to the same page, but with the product name in the URL of the page replaced with the product name in the URL of the link. This is useful for SEO purposes, as it allows search engines to index the page with the product name in the URL of the page, which is better for SEO than having the product name in the URL of the link, as it allows search engines to index the page with the product name in the URL of the page, which is better for SEO than having the product name in the URL of the link.

<script>
  function replaceProductInCurrentUrl(targetUrl) {
    const currentUrl = window.location.href;
    const urlParams = new URLSearchParams(currentUrl.split('?')[1]);
    const productValue = urlParams.get("product");

    if (!productValue) {
      console.log('No product parameter found');
      return;
    }

    const baseUrl = targetUrl.split('?')[0];
    const queryString = targetUrl.split('?')[1];
    const productSegment = baseUrl.split('/').pop();
    const newUrl = baseUrl.replace(productSegment, productValue) + '?' + queryString + '&product=' + productValue;

    console.log('new url:', newUrl);
    return newUrl;
  }

  let urlParams = new URLSearchParams(window.location.search);
  let productReplacement = urlParams.get('product');

  console.log('Product Replacement:', productReplacement);
  if (productReplacement) {
    $('a').each(function () {
      var currLink = $(this).attr('href');
      let newURL = replaceProductInCurrentUrl(currLink);
      if (currLink) { $(this).attr('href', newURL) };
    });
  }
</script>

{% comment %} <!-- This script is taking the URL parameter and replacing all the links on the page with the URL parameter and the addition. -->
<script>
  let urlParams = new URLSearchParams(window.location.search);
  let linksAddition = urlParams.get('add');

  if (linksAddition) {
    $('a').each(function () {
      var currLink = $(this).attr('href');
      if (currLink) { $(this).attr('href', currLink + linksAddition) };
    });
  }
</script> {% endcomment %}

<script>
  function runAfterElementExists(jquery_selector, callback) {
    var checker = window.setInterval(function () {
      if ($(jquery_selector).length) {
        clearInterval(checker);
        callback();
      }
    }, 200);
  }
</script>

<!-- RAF -->
<script>
  let utmParam = new URLSearchParams(window.location.search).get('utm_campaign');

  if (utmParam == 'referral_program') {
    console.log("Referral program");
    function runAfterElementExists(jquery_selector, callback) {
      var checker = window.setInterval(function () {
        if ($(jquery_selector).length) {
          clearInterval(checker);
          callback();
        }
      }, 200);
    }

    // Wisepop Event!
    $(document).ready(function () {
      runAfterElementExists(".yotpo-copy-code-icon", function () {
        wisepops('properties', {rafCodeReceived: true});
        wisepops("pageview");
      })
    });
  }
</script>

<!-- Woopra Events -->
<script>
  $(document).ready(function () {
    // Play Video
    runAfterElementExists(".video-player", function () {
      $(".video-player").click(function() {
        woopra.track('Play Video', {
          video_id: $(this).find("lite-vimeo").attr("videoid"),
          video_title: $(this).siblings(".video-headline").find("p").text(),
          video_order: $(this).parents(".video-block-item-overlay-col").index() + 1
        });
      })
    })

    runAfterElementExists(".testimonials_iframe", function () {
      $(".testimonials_iframe").click(function() {
        woopra.track('Play Video', {
          video_id: $(this).find("lite-vimeo").attr("videoid"),
          video_title: $(this).siblings(".testimonial-headline").find("h2").text(),
        });
      })
    })

    // Open FAQ
    $('.question').click(function() {
      woopra.track('Open FAQ', {
        question_display_text: $(this).children("h4").text(),
        question_order:  $(this).parents("li").index() + 1
      })
    });
  })
</script>

<style>
  #wisepops-root {
    transition: opacity 0.5s;
  }
</style>