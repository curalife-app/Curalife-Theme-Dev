{% layout 'theme.lps' %}


{% comment %} {% render 'aio-first-page-hero-section', isLogo: true %} {% endcomment %}
{% comment %} {% render 'partnerships-featured' %} {% endcomment %}
{% comment %} {% render 'aio-first-page-meet-curalin', meetCuralins: meetCuralins %} {% endcomment %}
{% comment %} {% render 'aio-first-page-life-changes' %} {% endcomment %}
{% comment %} {% render 'aio-first-page-body-formula' %} {% endcomment %}
{% comment %} {% render 'aio-first-page-real-changes', realChanges: realChanges %} {% endcomment %}
{% comment %} {% render 'aio-first-page-trusted-doctors', doctors: doctors %} {% endcomment %}
{% comment %} {% render 'aio-first-page-testimonials-section' %} {% endcomment %}
{% render 'aio-first-page-natural-ingredients', natural_ingredients: natural_ingredients %}
{% render 'aio-first-page-cta-button' %}
{% render 'aio-first-page-why-curalife' %}
{% render 'aio-first-page-supported-community' %}
{% render 'aio-first-page-satisfaction-survey' %}
{% comment %} {% render 'faq-section', faqItems: faqItems, isAllowOneOpen: true, titleVersion: "complex" %} {% endcomment %}

<script>
  function LinkToProduct(element, url) {
    window.location.href = url + window.location.search;
  }
</script>

<script>
  function replaceProductInCurrentUrl(targetUrl) {
    const currentUrl = window.location.href;
    const urlParams = new URLSearchParams(currentUrl.split('?')[1]);
    const productValue = urlParams.get("product");

    if (!productValue) {
      console.log('No product parameter found');
      return;
    }

    const baseUrl = targetUrl.split('?')[0];
    const queryString = targetUrl.split('?')[1];
    const productSegment = baseUrl.split('/').pop();
    const newUrl = baseUrl.replace(productSegment, productValue) + '?' + queryString + '&product=' + productValue;

    console.log('new url:', newUrl);
    return newUrl;
  }

  let urlParams = new URLSearchParams(window.location.search);
  let productReplacement = urlParams.get('product');

  console.log('Product Replacement:', productReplacement);
  if (productReplacement) {
    $('a').each(function () {
      var currLink = $(this).attr('href');
      let newURL = replaceProductInCurrentUrl(currLink);
      if (currLink) { $(this).attr('href', newURL) };
    });
  }
</script>

{% comment %} <!-- This script is taking the URL parameter and replacing all the links on the page with the URL parameter and the addition. -->
<script>
  let urlParams = new URLSearchParams(window.location.search);
  let linksAddition = urlParams.get('add');

  if (linksAddition) {
    $('a').each(function () {
      var currLink = $(this).attr('href');
      if (currLink) { $(this).attr('href', currLink + linksAddition) };
    });
  }
</script> {% endcomment %}

<script>
  function runAfterElementExists(jquery_selector, callback) {
    var checker = window.setInterval(function () {
      if ($(jquery_selector).length) {
        clearInterval(checker);
        callback();
      }
    }, 200);
  }
</script>

<!-- RAF -->
<script>
  let utmParam = new URLSearchParams(window.location.search).get('utm_campaign');

  if (utmParam == 'referral_program') {
    console.log("Referral program");
    function runAfterElementExists(jquery_selector, callback) {
      var checker = window.setInterval(function () {
        if ($(jquery_selector).length) {
          clearInterval(checker);
          callback();
        }
      }, 200);
    }
  }
</script>