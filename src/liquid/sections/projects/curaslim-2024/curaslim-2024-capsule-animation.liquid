<section class="capsule-animation-section">
  <div class="container">
    <div class="view capsule-animation">
      <div class="pill relative flex justify-center">
        <img class="pill-half left mbl:w-2/3 m-0" src="https://cdn.shopify.com/s/files/1/0452/2459/1511/files/pill-half.png" alt="Curaslim 2024 Capsule Animation Pill Half">
        <img class="pill-half right mbl:w-2/3 m-0" src="https://cdn.shopify.com/s/files/1/0452/2459/1511/files/pill_R.png" alt="Curaslim 2024 Capsule Animation Pill Half">
      </div>

      <div class="fallen-items">
        <picture class="fallen-item">
            <source media="(max-width: 768px)" srcset="https://cdn.shopify.com/s/files/1/0452/2459/1511/files/3_Control_Craving_Portion_Mobile.png">
            <img src="https://cdn.shopify.com/s/files/1/0452/2459/1511/files/3_Control_Craving_Portion.png" alt="curaslim ingredients benefits">
        </picture>
        <picture class="fallen-item">
            <source media="(max-width: 768px)" srcset="https://cdn.shopify.com/s/files/1/0452/2459/1511/files/3_Control_Craving_Portion3_Mobile.png">
            <img src="https://cdn.shopify.com/s/files/1/0452/2459/1511/files/3_Control_Craving_Portion3.png" alt="curaslim ingredients benefits">
        </picture>
        <picture class="fallen-item">
            <source media="(max-width: 768px)" srcset="https://cdn.shopify.com/s/files/1/0452/2459/1511/files/3_Control_Craving_Portion2_Mobile.png">
            <img src="https://cdn.shopify.com/s/files/1/0452/2459/1511/files/3_Control_Craving_Portion2.png" alt="curaslim ingredients benefits">
        </picture>
      </div>

      <img class="powder" src="https://cdn.shopify.com/s/files/1/0452/2459/1511/files/powder.png" alt="Curaslim 2024 Capsule Animation Powder">
    </div>
  </div>
</section>

<style>
    main {
        overflow: clip !important;
    }

    .capsule-animation-section {
        overflow: clip !important;
    }

    .capsule-animation {
        position: relative;
        display: flex;
        justify-content: center;
        align-items: start;
        min-height: 800px;
    }

    .pill {
        position: relative;
        z-index: 2;
    }

    .pill-half {
        transition: transform 0.8s cubic-bezier(0.25, 0.1, 0.25, 1);
        will-change: transform;
        max-width: 300px;

        @media (max-width: 768px) {
            max-width: 50vw;
        }
    }

    .pill-half.left {
        transform: translateX(5px) rotate(0deg);
    }

    .pill-half.right {
        transform: translateX(-5px) rotate(0deg);
    }

    .powder {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        max-width: 350px;
        z-index: -1;
        opacity: 0;
        transition: opacity 0.8s cubic-bezier(0.25, 0.1, 0.25, 1);

        @media (max-width: 768px) {
            max-width: 65vw;
            top: 80vw;
        }
    }

    .fallen-items {
        position: absolute;
        top: 30%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 1;
        width: 300px;
        height: 300px;
    }

    .fallen-item {
        position: absolute;
        opacity: 0;
        transition: all 1.2s cubic-bezier(0.25, 0.1, 0.25, 1);
        will-change: transform, opacity;
    }

    .confetti-container {
        position: absolute;
        top: 30%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 300px;
        height: 300px;
        pointer-events: none;
    }

    .confetti {
        position: absolute;
        width: 10px;
        height: 10px;
        background-color: #f0f0f0;
        opacity: 0;
        will-change: transform, opacity;
    }

    @media (max-width: 768px) {
        .capsule-animation {
            min-height: 600px;
        }
    }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const section = document.querySelector('.capsule-animation-section');
    const pillLeft = section.querySelector('.pill-half.left');
    const pillRight = section.querySelector('.pill-half.right');
    const powder = section.querySelector('.powder');
    const fallenItems = section.querySelectorAll('.fallen-item');

    let maxOpeningPercentage = 0;
    let animationCompleted = false;

    // Set initial positions of capsule halves
    pillLeft.style.transform = 'translateX(0) rotate(0deg)';
    pillRight.style.transform = 'translateX(-10px) rotate(0deg)';

    function animateOnScroll() {
        if (animationCompleted) return;

        const rect = section.getBoundingClientRect();
        const sectionTop = rect.top;
        const windowHeight = window.innerHeight;

        // Adjust this value to control how quickly the animation completes
        const animationTriggerPoint = windowHeight * 0.7;

        if (sectionTop < animationTriggerPoint) {
            let openingPercentage = Math.min(1, (animationTriggerPoint - sectionTop) / (animationTriggerPoint * 0.5));

            // Ensure the opening percentage never decreases
            maxOpeningPercentage = Math.max(maxOpeningPercentage, openingPercentage);
            openingPercentage = maxOpeningPercentage;

            // Reduce the rotation and translation for a more elegant opening
            const rotateAngle = 20 * openingPercentage; // Reduced from 30 to 20
            const translateX = 30 * openingPercentage; // Reduced from 50 to 30

            pillLeft.style.transform = `translateX(${-translateX}%) rotate(${rotateAngle}deg)`;
            pillRight.style.transform = `translateX(calc(-10px + ${translateX}%)) rotate(${-rotateAngle}deg)`;
            powder.style.opacity = openingPercentage;

            const isMobile = window.innerWidth <= 768;
            const finalPositions = isMobile
                ? [
                    { x: '0%', y: '200px' },
                    { x: '0%', y: '300px' },
                    { x: '0%', y: '420px' }
                  ]
                : [
                    { x: '-60%', y: '330px' },
                    { x: '0%', y: '450px' },
                    { x: '50%', y: '200px' }
                  ];

            fallenItems.forEach((item, index) => {
                const { x, y } = finalPositions[index];
                item.style.transform = `translate(${x}, ${y})`;
                item.style.opacity = openingPercentage;
            });

            if (openingPercentage >= 1) {
                animationCompleted = true;
                window.removeEventListener('scroll', animateOnScroll);
            }
        }
    }

    window.addEventListener('scroll', animateOnScroll);
    animateOnScroll(); // Initial call to set starting positions

    // Re-run animation on window resize to adjust for mobile/desktop layouts
    window.addEventListener('resize', () => {
        animationCompleted = false;
        maxOpeningPercentage = 0;
        animateOnScroll();
    });
});
</script>

{% schema %}
  {
    "name": "Capsule Animation",
    "settings": [],
    "presets": [
      {
        "category": "Page",
        "name": "Capsule Animation"
      }
    ]
  }
{% endschema %}