{{ 'customer.css' | asset_url | stylesheet_tag }}

<script src="{{ 'customer.js' | asset_url }}" defer></script>

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

{%- comment -%} If store is US {%- endcomment -%}
{% if shop.name == 'CuraLife' %}
  {% assign invoice_id = "51da85a3c3dfa1f360b48852b64218b2" %}
{% elsif shop.name == "CuraLife Global" %}
  {% assign invoice_id = "656f0dbf9392657eed7feefc486781fb" %}
{% endif %}

<section class="account-page">
  <div class="container">
    <h1 class="hidden text-center mb-[30px]">My Addresses</h1>

    <div class="account-content">
      <div class="account-menu desktop">
        <div class="menu-list">
          <div class="tabs">
            <div class="tab"><a href="/account">My Profile</a></div>
            <div class="tab"><a href="/account#b">Orders</a></div>
            <div class="tab"><a href="/account#e">Loyalty</a></div>
            <div class="tab"><a href="/account#f">Change password</a></div>
            <a id="subscription-tab" href="{{ manage_subscription_url }}"><div class="tab">Subscriptions</div></a>
            <a class="logout lgoutlnk" href="/account/logout/"><div class="tab">Logout</div></a>
          </div>
        </div>
      </div>

      <div class="account-data">
        <div class="data-row active">
          <div class="data-wrap with-border">
            <div class="data-title">
              <h5 class="m-0">My Addresses</h5>
            </div>

            <div class="data-content">
              {%- paginate customer.addresses by 5 -%}
                <div class="addresses-list">
                  <button type="button" class="main-btn" data-address-toggle>
                    Add New Address
                  </button>

                  <div id="AddAddress" class="address-form" style="display: none;">
                    <h2>Add New Address</h2>
                    {%- form 'customer_address', customer.new_address -%}
                      <div class="form-grid">
                        <div class="field">
                          <input type="text" id="AddressFirstNameNew" name="address[first_name]" value="{{ form.first_name }}" autocomplete="given-name">
                          <label for="AddressFirstNameNew">First Name</label>
                        </div>
                        <div class="field">
                          <input type="text" id="AddressLastNameNew" name="address[last_name]" value="{{ form.last_name }}" autocomplete="family-name">
                          <label for="AddressLastNameNew">Last Name</label>
                        </div>
                        <div class="field">
                          <input type="text" id="AddressCompanyNew" name="address[company]" value="{{ form.company }}" autocomplete="organization">
                          <label for="AddressCompanyNew">Company</label>
                        </div>
                        <div class="field">
                          <input type="text" id="AddressAddress1New" name="address[address1]" value="{{ form.address1 }}" autocomplete="street-address">
                          <label for="AddressAddress1New">Address</label>
                        </div>
                        <div class="field">
                          <input type="text" id="AddressAddress2New" name="address[address2]" value="{{ form.address2 }}" autocomplete="street-address">
                          <label for="AddressAddress2New">Apartment, suite, etc.</label>
                        </div>
                        <div class="field">
                          <input type="text" id="AddressCityNew" name="address[city]" value="{{ form.city }}" autocomplete="address-level2">
                          <label for="AddressCityNew">City</label>
                        </div>
                        <div class="field">
                          <select id="AddressCountryNew" name="address[country]" data-default="{{ form.country }}" autocomplete="country">
                            {{ all_country_option_tags }}
                          </select>
                          <label for="AddressCountryNew">Country</label>
                        </div>
                        <div class="field">
                          <input type="text" id="AddressZipNew" name="address[zip]" value="{{ form.zip }}" autocomplete="postal-code">
                          <label for="AddressZipNew">ZIP Code</label>
                        </div>
                        <div class="field">
                          <input type="tel" id="AddressPhoneNew" name="address[phone]" value="{{ form.phone }}" autocomplete="tel">
                          <label for="AddressPhoneNew">Phone</label>
                        </div>
                      </div>
                      <div class="form-actions">
                        <button type="submit" class="main-btn">Add Address</button>
                        <button type="reset" class="main-btn blank" data-address-toggle>Cancel</button>
                      </div>
                    {%- endform -%}
                  </div>

                  <div class="addresses-grid">
                    {%- for address in customer.addresses -%}
                      <div class="address-card">
                        {%- if address == customer.default_address -%}
                          <div class="default-badge">Default</div>
                        {%- endif -%}
                        <div class="address-content">
                          <h3>{{ address.first_name }} {{ address.last_name }}</h3>
                          {%- if address.company -%}
                            <p>{{ address.company }}</p>
                          {%- endif -%}
                          <p>{{ address.address1 }}</p>
                          {%- if address.address2 -%}
                            <p>{{ address.address2 }}</p>
                          {%- endif -%}
                          <p>{{ address.city }}, {{ address.province_code }} {{ address.zip }}</p>
                          <p>{{ address.country }}</p>
                          {%- if address.phone -%}
                            <p>{{ address.phone }}</p>
                          {%- endif -%}
                        </div>
                        <div class="address-actions">
                          <button type="button" class="main-btn blank" data-address-id="{{ address.id }}">
                            Edit
                          </button>
                          <button type="button" class="main-btn blank delete" data-address-id="{{ address.id }}">
                            Delete
                          </button>
                        </div>
                      </div>
                    {%- endfor -%}
                  </div>

                  {%- if paginate.pages > 1 -%}
                    <div class="pagination">
                      {{ paginate | default_pagination }}
                    </div>
                  {%- endif -%}
                </div>
              {%- endpaginate -%}
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  main {
    background: var(--beige);
    min-height: 100vh;
    padding: 40px 0;
  }

  .account-page {
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .account-content {
    display: flex;
    gap: 40px;
  }

  .account-menu {
    width: 320px;
    flex-shrink: 0;
  }

  .account-menu .menu-list .tabs {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .account-menu .menu-list .tabs .tab a,
  .account-menu .menu-list .tabs .tab:last-child {
    display: flex;
    align-items: center;
    color: var(--dark);
    transition: all 0.3s ease;
    gap: 12px;
    background: white;
    padding: 16px 20px;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.08);
    border: 1px solid rgba(0,0,0,0.1);
    font-weight: 500;
  }

  .account-menu .menu-list .tabs .tab a:hover,
  .account-menu .menu-list .tabs .tab.active a {
    background: var(--blue);
    color: white;
    transform: translateX(5px);
  }

  .account-data {
    flex: 1;
  }

  .data-wrap {
    background: white;
    border-radius: 16px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.08);
    border: 1px solid rgba(0,0,0,0.1);
    overflow: hidden;
  }

  .data-title {
    padding: 20px;
    text-align: center;
    border-bottom: 1px solid rgba(0,0,0,0.1);
  }

  .data-title h5 {
    margin: 0;
    font-weight: 600;
    font-size: 22px;
    color: var(--dark);
  }

  .data-content {
    padding: 30px;
  }

  .addresses-list {
    display: flex;
    flex-direction: column;
    gap: 24px;
  }

  .addresses-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 24px;
    margin-top: 24px;
  }

  .address-card {
    background: white;
    border: 1px solid rgba(0,0,0,0.08);
    border-radius: 12px;
    padding: 24px;
    position: relative;
    transition: all 0.3s ease;
  }

  .address-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 24px rgba(0,0,0,0.12);
  }

  .default-badge {
    position: absolute;
    top: 12px;
    right: 12px;
    background: var(--blue);
    color: white;
    padding: 4px 12px;
    border-radius: 20px;
    font-size: 12px;
    font-weight: 600;
  }

  .address-content {
    margin-bottom: 20px;
  }

  .address-content h3 {
    margin: 0 0 12px;
    font-size: 18px;
    font-weight: 600;
    color: var(--dark);
  }

  .address-content p {
    margin: 0 0 8px;
    font-size: 14px;
    line-height: 1.5;
    color: var(--dark);
  }

  .address-actions {
    display: flex;
    gap: 12px;
  }

  .address-form {
    background: white;
    border: 1px solid rgba(0,0,0,0.08);
    border-radius: 12px;
    padding: 24px;
    margin-top: 24px;
  }

  .address-form h2 {
    margin: 0 0 24px;
    font-size: 20px;
    font-weight: 600;
    color: var(--dark);
  }

  .form-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 20px;
    margin-bottom: 24px;
  }

  .field {
    position: relative;
  }

  .field input,
  .field select {
    width: 100%;
    padding: 12px;
    border: 1px solid rgba(0,0,0,0.1);
    border-radius: 8px;
    font-size: 14px;
    transition: all 0.3s ease;
  }

  .field input:focus,
  .field select:focus {
    border-color: var(--blue);
    outline: none;
    box-shadow: 0 0 0 2px rgba(var(--blue-rgb), 0.1);
  }

  .field label {
    position: absolute;
    left: 12px;
    top: 50%;
    transform: translateY(-50%);
    background: white;
    padding: 0 4px;
    font-size: 12px;
    color: #666;
    transition: all 0.3s ease;
    pointer-events: none;
  }

  .field input:focus + label,
  .field input:not(:placeholder-shown) + label {
    top: 0;
    font-size: 10px;
    color: var(--blue);
  }

  .form-actions {
    display: flex;
    gap: 12px;
    justify-content: flex-end;
  }

	.address-actions button {
		width: 50%;
	}


  .main-btn {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    padding: 12px 24px;
    border-radius: 8px;
    font-weight: 600;
		max-width: unset;
    transition: all 0.3s ease;
    cursor: pointer;
  }

  .main-btn:not(.blank) {
    background: var(--blue);
    color: white;
    border: none;
  }

  .main-btn.blank {
    background: transparent;
    color: var(--blue);
    border: 2px solid var(--blue);
  }

  .main-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
  }

  .main-btn.blank:hover {
    background: var(--blue);
    color: white;
  }

  .pagination {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: 32px;
  }

  .pagination .page {
    padding: 8px 16px;
    border: 1px solid rgba(0,0,0,0.1);
    border-radius: 8px;
    font-weight: 500;
    transition: all 0.3s ease;
  }

  .pagination .page.current {
    background: var(--blue);
    color: white;
    border-color: var(--blue);
  }

  .pagination .page:hover:not(.current) {
    background: rgba(var(--blue-rgb), 0.1);
    border-color: var(--blue);
    color: var(--blue);
  }

  @media screen and (max-width: 1200px) {
    .account-content {
      gap: 30px;
    }

    .account-menu {
      width: 280px;
    }
  }

  @media screen and (max-width: 768px) {
    main {
      padding: 20px 0;
    }

    .account-content {
      flex-direction: column;
    }

    .account-menu {
      width: 100%;
    }

    .account-menu .menu-list .tabs .tab a,
    .account-menu .menu-list .tabs .tab:last-child {
      padding: 14px 16px;
      font-size: 15px;
    }

    .data-content {
      padding: 20px;
    }

    .form-grid {
      grid-template-columns: 1fr;
    }

    .addresses-grid {
      grid-template-columns: 1fr;
    }

    .address-card {
      padding: 20px;
    }

    .address-actions {
      flex-direction: column;
    }

    .main-btn {
      width: 100%;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const addressToggle = document.querySelector('[data-address-toggle]');
    const addAddressForm = document.getElementById('AddAddress');
    const addressCards = document.querySelectorAll('.address-card');

    if (addressToggle && addAddressForm) {
      addressToggle.addEventListener('click', function() {
        addAddressForm.style.display = addAddressForm.style.display === 'none' ? 'block' : 'none';
      });
    }

    addressCards.forEach(card => {
      const editBtn = card.querySelector('[data-address-id]');
      const deleteBtn = card.querySelector('.delete');

      if (editBtn) {
        editBtn.addEventListener('click', function() {
          const addressId = this.dataset.addressId;
          // Handle edit functionality
        });
      }

      if (deleteBtn) {
        deleteBtn.addEventListener('click', function() {
          const addressId = this.dataset.addressId;
          if (confirm('Are you sure you want to delete this address?')) {
            // Handle delete functionality
          }
        });
      }
    });
  });
</script>

{% schema %}
{
  "name": "Addresses",
  "settings": [
    {
      "type": "header",
      "content": "Addresses Settings"
    }
  ],
  "presets": [
    {
      "name": "Addresses"
    }
  ]
}
{% endschema %}
