{{ 'customer.css' | asset_url | stylesheet_tag }}

<script src="{{ 'customer.js' | asset_url }}" defer></script>

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

{%- comment -%} If store is US {%- endcomment -%}
{% if shop.name == 'CuraLife' %}
  {% assign invoice_id = "51da85a3c3dfa1f360b48852b64218b2" %}
{% elsif shop.name == "CuraLife Global" %}
  {% assign invoice_id = "656f0dbf9392657eed7feefc486781fb" %}
{% endif %}

<section class="account-page">
  <div class="container">
    <h1 class="hidden text-center mb-[30px]">My Addresses</h1>

    <div class="account-content">
      <div class="account-menu desktop">
        <div class="menu-list">
          <div class="tabs">
            <div class="tab"><a href="/account">My Profile</a></div>
            <div class="tab"><a href="/account#b">Orders</a></div>
            <div class="tab"><a href="/account#e">Loyalty</a></div>
            <div class="tab"><a href="/account#f">Change password</a></div>
            <a id="subscription-tab" href="{{ manage_subscription_url }}"><div class="tab">Subscriptions</div></a>
            <a class="logout lgoutlnk" href="/account/logout/"><div class="tab">Logout</div></a>
          </div>
        </div>
      </div>

      <div class="account-menu-mobile mobile">
        <select id="mobile-dropdown">
          <option value="/account">My Profile</option>
          <option value="/account#b">Orders</option>
          <option value="/account#e">Loyalty</option>
          <option value="/account#f">Change password</option>
          <option value="/account/addresses" selected>Addresses</option>
          <option value="{{ manage_subscription_url }}">Subscriptions</option>
          <option value="/account/logout">Logout</option>
        </select>
      </div>

      <div class="account-data">
        <div class="data-row active">
          <div class="data-wrap with-border">
            <div class="data-title">
              <h5 class="m-0">My Addresses</h5>
            </div>

            <div class="data-content">
              {%- paginate customer.addresses by 5 -%}
                <div class="addresses-list">
                  <button type="button" class="main-btn" data-address-toggle>
                    Add New Address
                  </button>

                  <div id="AddAddress" class="address-form" style="display: none;">
                    <h2>Add New Address</h2>
                    {%- form 'customer_address', customer.new_address -%}
                      <div class="form-grid">
                        <div class="field">
                          <input type="text" id="AddressFirstNameNew" name="address[first_name]" value="{{ form.first_name }}" autocomplete="given-name">
                          <label for="AddressFirstNameNew">First Name</label>
                        </div>
                        <div class="field">
                          <input type="text" id="AddressLastNameNew" name="address[last_name]" value="{{ form.last_name }}" autocomplete="family-name">
                          <label for="AddressLastNameNew">Last Name</label>
                        </div>
                        <div class="field">
                          <input type="text" id="AddressCompanyNew" name="address[company]" value="{{ form.company }}" autocomplete="organization">
                          <label for="AddressCompanyNew">Company</label>
                        </div>
                        <div class="field">
                          <input type="text" id="AddressAddress1New" name="address[address1]" value="{{ form.address1 }}" autocomplete="street-address">
                          <label for="AddressAddress1New">Address</label>
                        </div>
                        <div class="field">
                          <input type="text" id="AddressAddress2New" name="address[address2]" value="{{ form.address2 }}" autocomplete="street-address">
                          <label for="AddressAddress2New">Apartment, suite, etc.</label>
                        </div>
                        <div class="field">
                          <input type="text" id="AddressCityNew" name="address[city]" value="{{ form.city }}" autocomplete="address-level2">
                          <label for="AddressCityNew">City</label>
                        </div>
                        <div class="field">
                          <select id="AddressCountryNew" name="address[country]" data-default="{{ form.country }}" autocomplete="country">
                            {{ all_country_option_tags }}
                          </select>
                          <label for="AddressCountryNew">Country</label>
                        </div>
                        <div class="field">
                          <input type="text" id="AddressZipNew" name="address[zip]" value="{{ form.zip }}" autocomplete="postal-code">
                          <label for="AddressZipNew">ZIP Code</label>
                        </div>
                        <div class="field">
                          <input type="tel" id="AddressPhoneNew" name="address[phone]" value="{{ form.phone }}" autocomplete="tel">
                          <label for="AddressPhoneNew">Phone</label>
                        </div>
                      </div>
                      <div class="form-actions">
                        <button type="submit" class="main-btn">Add Address</button>
                        <button type="reset" class="main-btn blank" data-address-toggle>Cancel</button>
                      </div>
                    {%- endform -%}
                  </div>

                  <div class="addresses-grid">
                    {%- for address in customer.addresses -%}
                      <div class="address-card" data-address-id="{{ address.id }}">
                        <div class="address-header">
                          <div class="address-title">
                            <h3>{{ address.first_name }} {{ address.last_name }}</h3>
                            {%- if address == customer.default_address -%}
                              <span class="default-badge">Default</span>
                            {%- endif -%}
                          </div>
                          <div class="address-actions">
                            <button type="button" class="icon-btn edit-address" data-address-id="{{ address.id }}" title="Edit Address">
                              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M3 17.25V21H6.75L17.81 9.94L14.06 6.19L3 17.25ZM20.71 7.05C21.1 6.66 21.1 6.02 20.71 5.63L18.37 3.29C17.98 2.9 17.34 2.9 16.95 3.29L15.66 4.58L19.42 8.34L20.71 7.05Z" fill="currentColor"/>
                              </svg>
                            </button>
                            <form method="post" action="/account/addresses/{{ address.id }}" class="delete-address-form" style="display: inline;">
                              <input type="hidden" name="_method" value="delete">
                              <button type="submit" class="icon-btn delete" data-address-id="{{ address.id }}" title="Delete Address">
                                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                  <path d="M6 19C6 20.1 6.9 21 8 21H16C17.1 21 18 20.1 18 19V7H6V19ZM19 4H15.5L14.5 3H9.5L8.5 4H5V6H19V4Z" fill="currentColor"/>
                                </svg>
                              </button>
                            </form>
                          </div>
                        </div>
                        <div class="address-content">
                          {%- if address.company -%}
                            <p class="company">{{ address.company }}</p>
                          {%- endif -%}
                          <p class="street">{{ address.address1 }}</p>
                          {%- if address.address2 -%}
                            <p class="street">{{ address.address2 }}</p>
                          {%- endif -%}
                          <p class="location">{{ address.city }}, {{ address.province_code }} {{ address.zip }}</p>
                          <p class="country">{{ address.country }}</p>
                          {%- if address.phone -%}
                            <p class="phone">{{ address.phone }}</p>
                          {%- endif -%}
                        </div>

                        <div id="EditAddress_{{ address.id }}" class="address-form edit-form" style="display: none;">
                          <div class="form-header">
                            <h2>Edit Address</h2>
                            <button type="button" class="icon-btn cancel-edit" data-address-id="{{ address.id }}" title="Cancel">
                              <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12L19 6.41Z" fill="currentColor"/>
                              </svg>
                            </button>
                          </div>
                          {%- form 'customer_address', address -%}
                            <div class="form-grid">
                              <div class="field">
                                <input type="text" id="AddressFirstName_{{ form.id }}" name="address[first_name]" value="{{ form.first_name }}" autocomplete="given-name">
                                <label for="AddressFirstName_{{ form.id }}">First Name</label>
                              </div>
                              <div class="field">
                                <input type="text" id="AddressLastName_{{ form.id }}" name="address[last_name]" value="{{ form.last_name }}" autocomplete="family-name">
                                <label for="AddressLastName_{{ form.id }}">Last Name</label>
                              </div>
                              <div class="field">
                                <input type="text" id="AddressCompany_{{ form.id }}" name="address[company]" value="{{ form.company }}" autocomplete="organization">
                                <label for="AddressCompany_{{ form.id }}">Company</label>
                              </div>
                              <div class="field">
                                <input type="text" id="AddressAddress1_{{ form.id }}" name="address[address1]" value="{{ form.address1 }}" autocomplete="street-address">
                                <label for="AddressAddress1_{{ form.id }}">Address</label>
                              </div>
                              <div class="field">
                                <input type="text" id="AddressAddress2_{{ form.id }}" name="address[address2]" value="{{ form.address2 }}" autocomplete="street-address">
                                <label for="AddressAddress2_{{ form.id }}">Apartment, suite, etc.</label>
                              </div>
                              <div class="field">
                                <input type="text" id="AddressCity_{{ form.id }}" name="address[city]" value="{{ form.city }}" autocomplete="address-level2">
                                <label for="AddressCity_{{ form.id }}">City</label>
                              </div>
                              <div class="field">
                                <select id="AddressCountry_{{ form.id }}" name="address[country]" data-default="{{ form.country }}" autocomplete="country">
                                  {{ all_country_option_tags }}
                                </select>
                                <label for="AddressCountry_{{ form.id }}">Country</label>
                              </div>
                              <div class="field">
                                <input type="text" id="AddressZip_{{ form.id }}" name="address[zip]" value="{{ form.zip }}" autocomplete="postal-code">
                                <label for="AddressZip_{{ form.id }}">ZIP Code</label>
                              </div>
                              <div class="field">
                                <input type="tel" id="AddressPhone_{{ form.id }}" name="address[phone]" value="{{ form.phone }}" autocomplete="tel">
                                <label for="AddressPhone_{{ form.id }}">Phone</label>
                              </div>
                            </div>
                            <div class="form-actions">
                              <button type="submit" class="main-btn">
                                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                  <path d="M9 16.17L4.83 12L3.41 13.41L9 19L21 7L19.59 5.59L9 16.17Z" fill="currentColor"/>
                                </svg>
                                <span>Save Changes</span>
                              </button>
                            </div>
                          {%- endform -%}
                        </div>
                      </div>
                    {%- endfor -%}
                  </div>

                  {%- if paginate.pages > 1 -%}
                    <div class="pagination">
                      {{ paginate | default_pagination }}
                    </div>
                  {%- endif -%}
                </div>
              {%- endpaginate -%}
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  main {
    background: var(--beige);
    min-height: 100vh;
    padding: 60px 0;
  }

  .account-page {
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .account-content {
    display: flex;
    gap: 40px;
  }

  .account-menu {
    width: 320px;
    flex-shrink: 0;
  }

  .account-menu .menu-list .tabs {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .account-menu .menu-list .tabs .tab a,
  .account-menu .menu-list .tabs .tab:last-child {
    display: flex;
    align-items: center;
    color: var(--dark);
    transition: all 0.3s ease;
    gap: 12px;
    background: white;
    padding: 16px 20px;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.08);
    border: 1px solid rgba(0,0,0,0.1);
    font-weight: 500;
  }

  .account-menu .menu-list .tabs .tab a:hover,
  .account-menu .menu-list .tabs .tab.active a {
    background: var(--blue);
    color: white;
    transform: translateX(5px);
  }

  .account-data {
    flex: 1;
    min-height: 500px;
  }

  .data-row {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .data-row.active {
    opacity: 1;
    visibility: visible;
  }

  .data-wrap {
    background: white;
    border-radius: 16px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.08);
    border: 1px solid rgba(0,0,0,0.1);
    overflow: hidden;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .data-title {
    padding: 20px;
    text-align: center;
    border-bottom: 1px solid rgba(0,0,0,0.1);
  }

  .data-title h5 {
    margin: 0;
    font-weight: 600;
    font-size: 22px;
    color: var(--dark);
  }

  .data-content {
    padding: 30px;
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .addresses-list {
    display: flex;
    flex-direction: column;
    gap: 24px;
    flex: 1;
  }

  .addresses-grid {
    display: flex;
    flex-direction: column;
    gap: 16px;
  }

  .address-card {
    background: white;
    border: 1px solid rgba(0,0,0,0.08);
    border-radius: 12px;
    padding: 24px;
    transition: all 0.3s ease;
  }

  .address-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 16px;
  }

  .address-title {
    display: flex;
    align-items: center;
    gap: 12px;
  }

  .address-title h3 {
    margin: 0;
    font-size: 18px;
    font-weight: 600;
    color: var(--dark);
  }

  .default-badge {
    background: var(--blue);
    color: white;
    padding: 4px 12px;
    border-radius: 20px;
    font-size: 12px;
    font-weight: 600;
  }

  .address-actions {
    display: flex;
    gap: 8px;
  }

  .icon-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border-radius: 8px;
    border: 1px solid rgba(0,0,0,0.1);
    background: white;
    color: var(--dark);
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .icon-btn:hover {
    background: rgba(var(--blue-rgb), 0.1);
    border-color: var(--blue);
    color: var(--blue);
    transform: translateY(-2px);
  }

  .icon-btn.delete:hover {
    background: rgba(220, 53, 69, 0.1);
    border-color: #dc3545;
    color: #dc3545;
  }

  .address-content {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 8px;
  }

  .address-content p {
    margin: 0;
    font-size: 14px;
    line-height: 1.5;
    color: var(--dark);
  }

  .address-content .company {
    font-weight: 500;
    color: var(--blue);
  }

  .address-content .street {
    grid-column: 1 / -1;
  }

  .address-form {
    background: white;
    border-radius: 12px;
    padding: 24px;
    margin-top: 16px;
    border: 1px solid rgba(0,0,0,0.08);
  }

  .form-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 20px;
    margin-bottom: 24px;
  }

  .field {
    position: relative;
  }

  .field input,
  .field select {
    width: 100%;
    padding: 16px;
    border: 1px solid rgba(0,0,0,0.1);
    border-radius: 8px;
    font-size: 15px;
    background: white;
    color: var(--dark);
    transition: all 0.3s ease;
  }

  .field input:hover,
  .field select:hover {
    border-color: rgba(var(--blue-rgb), 0.5);
  }

  .field input:focus,
  .field select:focus {
    border-color: var(--blue);
    outline: none;
    box-shadow: 0 0 0 3px rgba(var(--blue-rgb), 0.1);
  }

  .field label {
    position: absolute;
    left: 12px;
    top: 50%;
    transform: translateY(-50%);
    background: white;
    padding: 0 6px;
    font-size: 14px;
    color: #666;
    transition: all 0.3s ease;
    pointer-events: none;
  }

  .field input:focus + label,
  .field input:not(:placeholder-shown) + label,
  .field select:focus + label,
  .field select:not(:placeholder-shown) + label {
    top: 0;
    transform: translateY(-50%) scale(0.9);
    color: var(--blue);
  }

  .form-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 32px;
    padding-bottom: 16px;
    border-bottom: 1px solid rgba(0,0,0,0.08);
  }

  .form-header h2 {
    margin: 0;
    font-size: 22px;
    font-weight: 600;
    color: var(--dark);
  }

  .form-actions {
    display: flex;
    justify-content: flex-end;
    gap: 12px;
    margin-top: 32px;
    padding-top: 24px;
    border-top: 1px solid rgba(0,0,0,0.08);
  }

  .form-actions .main-btn {
    min-width: 160px;
    justify-content: center;
    background: var(--blue);
    color: white;
    border: none;
    font-size: 15px;
    padding: 14px 28px;
		display: flex;
  gap: 0.5rem;
  }

  .form-actions .main-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(var(--blue-rgb), 0.2);
  }

  .form-actions .main-btn svg {
    width: 18px;
    height: 18px;
  }

  .pagination {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: 32px;
  }

  .pagination .page {
    padding: 8px 16px;
    border: 1px solid rgba(0,0,0,0.1);
    border-radius: 8px;
    font-weight: 500;
    transition: all 0.3s ease;
  }

  .pagination .page.current {
    background: var(--blue);
    color: white;
    border-color: var(--blue);
  }

  .pagination .page:hover:not(.current) {
    background: rgba(var(--blue-rgb), 0.1);
    border-color: var(--blue);
    color: var(--blue);
  }

  @media screen and (max-width: 1200px) {
    .account-content {
      gap: 30px;
    }

    .account-menu {
      width: 280px;
    }
  }

  @media screen and (max-width: 768px) {
    main {
      padding: 20px 0;
    }

    .account-page {
      padding: 0 16px;
    }

    .account-content {
      flex-direction: column;
      gap: 24px;
    }

    .account-menu {
      width: 100%;
    }

    .account-menu .menu-list .tabs .tab a,
    .account-menu .menu-list .tabs .tab:last-child {
      padding: 14px 16px;
      font-size: 15px;
    }

    .data-content {
      padding: 16px;
    }

    .data-title {
      padding: 16px;
    }

    .data-title h5 {
      font-size: 20px;
    }

    .addresses-list {
      gap: 16px;
    }

    .address-card {
      padding: 16px;
    }

    .address-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 12px;
      margin-bottom: 12px;
    }

    .address-title {
      width: 100%;
      flex-wrap: wrap;
    }

    .address-title h3 {
      font-size: 16px;
      line-height: 1.4;
    }

    .address-actions {
      width: 100%;
      justify-content: flex-start;
    }

    .icon-btn {
      width: 36px;
      height: 36px;
    }

    .icon-btn svg {
      width: 18px;
      height: 18px;
    }

    .address-content {
      grid-template-columns: 1fr;
      gap: 6px;
    }

    .address-content p {
      font-size: 13px;
    }

    .address-form {
      padding: 16px;
      margin-top: 12px;
    }

    .form-header {
      margin-bottom: 24px;
      padding-bottom: 12px;
    }

    .form-header h2 {
      font-size: 18px;
    }

    .form-grid {
      grid-template-columns: 1fr;
      gap: 16px;
      margin-bottom: 20px;
    }

    .field {
      margin-bottom: 0;
    }

    .field input,
    .field select {
      padding: 12px;
      font-size: 14px;
    }

    .field label {
      font-size: 13px;
    }

    .field input:focus + label,
    .field input:not(:placeholder-shown) + label,
    .field select:focus + label,
    .field select:not(:placeholder-shown) + label {
      transform: translateY(-50%) scale(0.85);
    }

    .form-actions {
      flex-direction: column;
      gap: 12px;
      margin-top: 24px;
      padding-top: 16px;
    }

    .form-actions .main-btn {
      width: 100%;
      min-height: 44px;
      padding: 12px 20px;
      font-size: 14px;
    }

    .form-actions .main-btn svg {
      width: 16px;
      height: 16px;
    }

    .pagination {
      margin-top: 24px;
      flex-wrap: wrap;
      justify-content: center;
    }

    .pagination .page {
      padding: 6px 12px;
      font-size: 14px;
    }

    .account-data {
      width: 100%;
      min-height: auto;
    }

    .data-row {
      position: static;
      opacity: 1;
      visibility: visible;
      height: auto;
    }

    .data-wrap {
      height: auto;
    }

    .data-content {
      padding: 16px;
    }
  }

  @media screen and (max-width: 480px) {
    .account-page {
      padding: 0 12px;
    }

    .data-content {
      padding: 12px;
    }

    .address-card {
      padding: 14px;
    }

    .address-form {
      padding: 14px;
    }

    .form-header h2 {
      font-size: 16px;
    }

    .field input,
    .field select {
      padding: 10px;
      font-size: 13px;
    }

    .field label {
      font-size: 12px;
    }
  }

  .mobile {
    display: none;
  }

  .desktop {
    display: block;
  }

  #mobile-dropdown {
    width: 100%;
    padding: 14px;
    border: 1px solid rgba(0,0,0,0.1);
    border-radius: 8px;
    font-size: 15px;
    background: white;
    color: var(--dark);
    margin-bottom: 20px;
    cursor: pointer;
    appearance: none;
    -webkit-appearance: none;
    background-image: url("data:image/svg+xml,%3Csvg width='12' height='8' viewBox='0 0 12 8' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1.41 0.589844L6 5.16984L10.59 0.589844L12 1.99984L6 7.99984L0 1.99984L1.41 0.589844Z' fill='%23333333'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 16px center;
    padding-right: 40px;
  }

  @media screen and (max-width: 768px) {
    .mobile {
      display: block;
    }

    .desktop {
      display: none;
    }

    .account-content {
      flex-direction: column;
      gap: 24px;
    }

    .account-data {
      width: 100%;
    }

    .data-row {
      position: static;
      opacity: 1;
      visibility: visible;
      height: auto;
    }

    .data-wrap {
      height: auto;
    }

    .data-content {
      padding: 16px;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const addressToggle = document.querySelector('[data-address-toggle]');
    const addAddressForm = document.getElementById('AddAddress');
    const mobileDropdown = document.getElementById('mobile-dropdown');

    // Handle Add New Address form toggle
    if (addressToggle && addAddressForm) {
      addressToggle.addEventListener('click', function() {
        addAddressForm.style.display = addAddressForm.style.display === 'none' ? 'block' : 'none';
      });
    }

    // Handle mobile navigation
    if (mobileDropdown) {
      mobileDropdown.addEventListener('change', function() {
        const selectedValue = this.value;
        if (selectedValue && selectedValue !== window.location.pathname) {
          window.location.href = selectedValue;
        }
      });
    }

    // Handle Edit Address functionality
    document.querySelectorAll('.edit-address').forEach(button => {
      button.addEventListener('click', function() {
        const addressId = this.dataset.addressId;
        const addressCard = this.closest('.address-card');
        const editForm = addressCard.querySelector(`#EditAddress_${addressId}`);
        const addressContent = addressCard.querySelector('.address-content');
        const addressActions = addressCard.querySelector('.address-actions');

        if (editForm && addressContent && addressActions) {
          addressContent.style.display = 'none';
          addressActions.style.display = 'none';
          editForm.style.display = 'block';
        }
      });
    });

    // Handle Cancel Edit
    document.querySelectorAll('.cancel-edit').forEach(button => {
      button.addEventListener('click', function() {
        const addressId = this.dataset.addressId;
        const addressCard = this.closest('.address-card');
        const editForm = addressCard.querySelector(`#EditAddress_${addressId}`);
        const addressContent = addressCard.querySelector('.address-content');
        const addressActions = addressCard.querySelector('.address-actions');

        if (editForm && addressContent && addressActions) {
          addressContent.style.display = 'block';
          addressActions.style.display = 'flex';
          editForm.style.display = 'none';
        }
      });
    });

    // Handle Delete Address
    document.querySelectorAll('.delete-address-form').forEach(form => {
      form.addEventListener('submit', function(e) {
        if (!confirm('Are you sure you want to delete this address?')) {
          e.preventDefault();
        }
      });
    });
  });
</script>

{% schema %}
{
  "name": "Addresses",
  "settings": [
    {
      "type": "header",
      "content": "Addresses Settings"
    }
  ],
  "presets": [
    {
      "name": "Addresses"
    }
  ]
}
{% endschema %}
